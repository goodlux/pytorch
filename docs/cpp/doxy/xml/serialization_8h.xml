<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="serialization_8h" kind="file" language="C++">
    <compoundname>serialization.h</compoundname>
    <includes local="no">fstream</includes>
    <includes refid="torch_2csrc_2api_2include_2torch_2tensor_8h" local="no">torch/tensor.h</includes>
    <includes refid="optim_8h" local="no">torch/optim.h</includes>
    <includes local="yes">cereal/archives/binary.hpp</includes>
    <includes local="yes">cereal/types/polymorphic.hpp</includes>
    <includes local="yes">cereal/types/string.hpp</includes>
    <includes local="yes">cereal/types/unordered_map.hpp</includes>
    <includes local="yes">cereal/types/vector.hpp</includes>
    <includedby refid="torch_8h" local="no">/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/torch.h</includedby>
    <incdepgraph>
      <node id="16761">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="16762" relation="include">
        </childnode>
        <childnode refid="16763" relation="include">
        </childnode>
        <childnode refid="16764" relation="include">
        </childnode>
        <childnode refid="16765" relation="include">
        </childnode>
        <childnode refid="16766" relation="include">
        </childnode>
        <childnode refid="16767" relation="include">
        </childnode>
        <childnode refid="16768" relation="include">
        </childnode>
      </node>
      <node id="16807">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="16757" relation="include">
        </childnode>
        <childnode refid="16760" relation="include">
        </childnode>
        <childnode refid="16805" relation="include">
        </childnode>
        <childnode refid="16808" relation="include">
        </childnode>
        <childnode refid="16769" relation="include">
        </childnode>
        <childnode refid="16766" relation="include">
        </childnode>
        <childnode refid="16758" relation="include">
        </childnode>
      </node>
      <node id="16775">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="16760" relation="include">
        </childnode>
        <childnode refid="16776" relation="include">
        </childnode>
        <childnode refid="16769" relation="include">
        </childnode>
        <childnode refid="16791" relation="include">
        </childnode>
        <childnode refid="16767" relation="include">
        </childnode>
        <childnode refid="16766" relation="include">
        </childnode>
      </node>
      <node id="16774">
        <label>atomic</label>
      </node>
      <node id="16835">
        <label>torch/csrc/autograd/generated/variable_factories.h</label>
      </node>
      <node id="16766">
        <label>functional</label>
      </node>
      <node id="16812">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="16769" relation="include">
        </childnode>
        <childnode refid="16767" relation="include">
        </childnode>
        <childnode refid="16802" relation="include">
        </childnode>
        <childnode refid="16755" relation="include">
        </childnode>
      </node>
      <node id="16776">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="16777" relation="include">
        </childnode>
        <childnode refid="16755" relation="include">
        </childnode>
        <childnode refid="16787" relation="include">
        </childnode>
        <childnode refid="16789" relation="include">
        </childnode>
        <childnode refid="16793" relation="include">
        </childnode>
      </node>
      <node id="16788">
        <label>limits</label>
      </node>
      <node id="16753">
        <label>torch/tensor.h</label>
        <link refid="torch_2csrc_2api_2include_2torch_2tensor_8h_source"/>
        <childnode refid="16754" relation="include">
        </childnode>
        <childnode refid="16835" relation="include">
        </childnode>
        <childnode refid="16836" relation="include">
        </childnode>
      </node>
      <node id="16796">
        <label>assert.h</label>
      </node>
      <node id="16801">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="16755" relation="include">
        </childnode>
        <childnode refid="16777" relation="include">
        </childnode>
        <childnode refid="16760" relation="include">
        </childnode>
        <childnode refid="16800" relation="include">
        </childnode>
        <childnode refid="16780" relation="include">
        </childnode>
        <childnode refid="16772" relation="include">
        </childnode>
        <childnode refid="16802" relation="include">
        </childnode>
        <childnode refid="16803" relation="include">
        </childnode>
      </node>
      <node id="16783">
        <label>iterator</label>
      </node>
      <node id="16795">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="16796" relation="include">
        </childnode>
        <childnode refid="16797" relation="include">
        </childnode>
        <childnode refid="16768" relation="include">
        </childnode>
        <childnode refid="16767" relation="include">
        </childnode>
        <childnode refid="16762" relation="include">
        </childnode>
        <childnode refid="16755" relation="include">
        </childnode>
        <childnode refid="16787" relation="include">
        </childnode>
        <childnode refid="16776" relation="include">
        </childnode>
        <childnode refid="16798" relation="include">
        </childnode>
        <childnode refid="16801" relation="include">
        </childnode>
      </node>
      <node id="16815">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="16789">
        <label>cstdint</label>
      </node>
      <node id="16852">
        <label>torch/optim/sgd.h</label>
        <link refid="sgd_8h_source"/>
        <childnode refid="16839" relation="include">
        </childnode>
        <childnode refid="16842" relation="include">
        </childnode>
        <childnode refid="16845" relation="include">
        </childnode>
        <childnode refid="16753" relation="include">
        </childnode>
        <childnode refid="16754" relation="include">
        </childnode>
        <childnode refid="16846" relation="include">
        </childnode>
        <childnode refid="16847" relation="include">
        </childnode>
        <childnode refid="16762" relation="include">
        </childnode>
        <childnode refid="16786" relation="include">
        </childnode>
      </node>
      <node id="16853">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="16823">
        <label>ATen/Deprecated.h</label>
        <link refid="_deprecated_8h_source"/>
      </node>
      <node id="16797">
        <label>stdint.h</label>
      </node>
      <node id="16845">
        <label>torch/optim/optimizer.h</label>
        <link refid="optimizer_8h_source"/>
        <childnode refid="16835" relation="include">
        </childnode>
        <childnode refid="16841" relation="include">
        </childnode>
        <childnode refid="16753" relation="include">
        </childnode>
        <childnode refid="16766" relation="include">
        </childnode>
        <childnode refid="16758" relation="include">
        </childnode>
        <childnode refid="16786" relation="include">
        </childnode>
      </node>
      <node id="16834">
        <label>ATen/CUDAGuard.h</label>
        <link refid="_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="16836">
        <label>torch/csrc/autograd/variable.h</label>
      </node>
      <node id="16790">
        <label>cmath</label>
      </node>
      <node id="16855">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="16765">
        <label>cassert</label>
      </node>
      <node id="16806">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="16755" relation="include">
        </childnode>
        <childnode refid="16756" relation="include">
        </childnode>
        <childnode refid="16805" relation="include">
        </childnode>
        <childnode refid="16804" relation="include">
        </childnode>
        <childnode refid="16801" relation="include">
        </childnode>
        <childnode refid="16760" relation="include">
        </childnode>
        <childnode refid="16807" relation="include">
        </childnode>
        <childnode refid="16813" relation="include">
        </childnode>
        <childnode refid="16758" relation="include">
        </childnode>
        <childnode refid="16810" relation="include">
        </childnode>
        <childnode refid="16789" relation="include">
        </childnode>
      </node>
      <node id="16792">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="16755" relation="include">
        </childnode>
        <childnode refid="16782" relation="include">
        </childnode>
        <childnode refid="16788" relation="include">
        </childnode>
      </node>
      <node id="16768">
        <label>stdexcept</label>
      </node>
      <node id="16829">
        <label>ATen/TensorOperators.h</label>
        <link refid="_tensor_operators_8h_source"/>
        <childnode refid="16795" relation="include">
        </childnode>
        <childnode refid="16816" relation="include">
        </childnode>
        <childnode refid="16804" relation="include">
        </childnode>
        <childnode refid="16767" relation="include">
        </childnode>
        <childnode refid="16768" relation="include">
        </childnode>
      </node>
      <node id="16803">
        <label>numeric</label>
      </node>
      <node id="16799">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="16774" relation="include">
        </childnode>
        <childnode refid="16758" relation="include">
        </childnode>
        <childnode refid="16773" relation="include">
        </childnode>
        <childnode refid="16776" relation="include">
        </childnode>
        <childnode refid="16761" relation="include">
        </childnode>
      </node>
      <node id="16787">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="16755" relation="include">
        </childnode>
        <childnode refid="16788" relation="include">
        </childnode>
        <childnode refid="16767" relation="include">
        </childnode>
        <childnode refid="16789" relation="include">
        </childnode>
        <childnode refid="16768" relation="include">
        </childnode>
        <childnode refid="16762" relation="include">
        </childnode>
        <childnode refid="16790" relation="include">
        </childnode>
        <childnode refid="16791" relation="include">
        </childnode>
        <childnode refid="16792" relation="include">
        </childnode>
      </node>
      <node id="16773">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="16774" relation="include">
        </childnode>
      </node>
      <node id="16798">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="16799" relation="include">
        </childnode>
        <childnode refid="16800" relation="include">
        </childnode>
      </node>
      <node id="16767">
        <label>string</label>
      </node>
      <node id="16832">
        <label>ATen/DimVector.h</label>
        <link refid="_dim_vector_8h_source"/>
        <childnode refid="16778" relation="include">
        </childnode>
        <childnode refid="16797" relation="include">
        </childnode>
      </node>
      <node id="16833">
        <label>ATen/OptionsGuard.h</label>
        <link refid="_options_guard_8h_source"/>
        <childnode refid="16775" relation="include">
        </childnode>
        <childnode refid="16819" relation="include">
        </childnode>
        <childnode refid="16776" relation="include">
        </childnode>
        <childnode refid="16826" relation="include">
        </childnode>
        <childnode refid="16761" relation="include">
        </childnode>
      </node>
      <node id="16844">
        <label>map</label>
      </node>
      <node id="16757">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="16758" relation="include">
        </childnode>
        <childnode refid="16759" relation="include">
        </childnode>
        <childnode refid="16760" relation="include">
        </childnode>
        <childnode refid="16773" relation="include">
        </childnode>
        <childnode refid="16775" relation="include">
        </childnode>
        <childnode refid="16794" relation="include">
        </childnode>
      </node>
      <node id="16848">
        <label>torch/optim/adam.h</label>
        <link refid="adam_8h_source"/>
        <childnode refid="16839" relation="include">
        </childnode>
        <childnode refid="16842" relation="include">
        </childnode>
        <childnode refid="16845" relation="include">
        </childnode>
        <childnode refid="16754" relation="include">
        </childnode>
        <childnode refid="16846" relation="include">
        </childnode>
        <childnode refid="16847" relation="include">
        </childnode>
        <childnode refid="16762" relation="include">
        </childnode>
        <childnode refid="16786" relation="include">
        </childnode>
      </node>
      <node id="16841">
        <label>torch/nn/cursor.h</label>
        <link refid="cursor_8h_source"/>
        <childnode refid="16753" relation="include">
        </childnode>
        <childnode refid="16769" relation="include">
        </childnode>
        <childnode refid="16783" relation="include">
        </childnode>
        <childnode refid="16788" relation="include">
        </childnode>
        <childnode refid="16767" relation="include">
        </childnode>
        <childnode refid="16763" relation="include">
        </childnode>
      </node>
      <node id="16813">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="16825">
        <label>ATen/DeviceGuard.h</label>
        <link refid="_device_guard_8h_source"/>
        <childnode refid="16775" relation="include">
        </childnode>
        <childnode refid="16760" relation="include">
        </childnode>
        <childnode refid="16776" relation="include">
        </childnode>
        <childnode refid="16816" relation="include">
        </childnode>
        <childnode refid="16807" relation="include">
        </childnode>
        <childnode refid="16769" relation="include">
        </childnode>
      </node>
      <node id="16770">
        <label>exception</label>
      </node>
      <node id="16759">
        <label>stddef.h</label>
      </node>
      <node id="16800">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="16799" relation="include">
        </childnode>
      </node>
      <node id="16831">
        <label>ATen/Dispatch.h</label>
        <link refid="_dispatch_8h_source"/>
        <childnode refid="16760" relation="include">
        </childnode>
        <childnode refid="16787" relation="include">
        </childnode>
        <childnode refid="16804" relation="include">
        </childnode>
      </node>
      <node id="16779">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="16769" relation="include">
        </childnode>
      </node>
      <node id="16752">
        <label>fstream</label>
      </node>
      <node id="16814">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="16795" relation="include">
        </childnode>
        <childnode refid="16815" relation="include">
        </childnode>
      </node>
      <node id="16771">
        <label>ostream</label>
      </node>
      <node id="16756">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="16755" relation="include">
        </childnode>
      </node>
      <node id="16804">
        <label>ATen/Type.h</label>
      </node>
      <node id="16777">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="16760" relation="include">
        </childnode>
        <childnode refid="16778" relation="include">
        </childnode>
        <childnode refid="16785" relation="include">
        </childnode>
        <childnode refid="16783" relation="include">
        </childnode>
        <childnode refid="16786" relation="include">
        </childnode>
      </node>
      <node id="16820">
        <label>ATen/TensorGeometry.h</label>
        <link refid="_tensor_geometry_8h_source"/>
        <childnode refid="16804" relation="include">
        </childnode>
        <childnode refid="16821" relation="include">
        </childnode>
      </node>
      <node id="16842">
        <label>torch/nn/pimpl.h</label>
        <link refid="pimpl_8h_source"/>
        <childnode refid="16843" relation="include">
        </childnode>
        <childnode refid="16753" relation="include">
        </childnode>
        <childnode refid="16758" relation="include">
        </childnode>
        <childnode refid="16763" relation="include">
        </childnode>
        <childnode refid="16762" relation="include">
        </childnode>
      </node>
      <node id="16817">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="16755">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="16839">
        <label>torch/nn/module.h</label>
        <link refid="module_8h_source"/>
        <childnode refid="16840" relation="include">
        </childnode>
        <childnode refid="16841" relation="include">
        </childnode>
        <childnode refid="16842" relation="include">
        </childnode>
        <childnode refid="16753" relation="include">
        </childnode>
        <childnode refid="16754" relation="include">
        </childnode>
        <childnode refid="16761" relation="include">
        </childnode>
        <childnode refid="16844" relation="include">
        </childnode>
        <childnode refid="16758" relation="include">
        </childnode>
        <childnode refid="16767" relation="include">
        </childnode>
        <childnode refid="16763" relation="include">
        </childnode>
        <childnode refid="16811" relation="include">
        </childnode>
      </node>
      <node id="16821">
        <label>ATen/WrapDimUtils.h</label>
        <link refid="_wrap_dim_utils_8h_source"/>
        <childnode refid="16799" relation="include">
        </childnode>
        <childnode refid="16772" relation="include">
        </childnode>
      </node>
      <node id="16818">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="16769" relation="include">
        </childnode>
        <childnode refid="16797" relation="include">
        </childnode>
        <childnode refid="16776" relation="include">
        </childnode>
      </node>
      <node id="16802">
        <label>typeinfo</label>
      </node>
      <node id="16809">
        <label>cstdio</label>
      </node>
      <node id="16843">
        <label>torch/csrc/utils/variadic.h</label>
      </node>
      <node id="16794">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="16758" relation="include">
        </childnode>
        <childnode refid="16755" relation="include">
        </childnode>
      </node>
      <node id="16851">
        <label>torch/optim/rmsprop.h</label>
        <link refid="rmsprop_8h_source"/>
        <childnode refid="16839" relation="include">
        </childnode>
        <childnode refid="16845" relation="include">
        </childnode>
        <childnode refid="16754" relation="include">
        </childnode>
        <childnode refid="16846" relation="include">
        </childnode>
        <childnode refid="16847" relation="include">
        </childnode>
        <childnode refid="16766" relation="include">
        </childnode>
        <childnode refid="16758" relation="include">
        </childnode>
        <childnode refid="16767" relation="include">
        </childnode>
        <childnode refid="16786" relation="include">
        </childnode>
      </node>
      <node id="16837">
        <label>torch/optim.h</label>
        <link refid="optim_8h_source"/>
        <childnode refid="16838" relation="include">
        </childnode>
        <childnode refid="16848" relation="include">
        </childnode>
        <childnode refid="16849" relation="include">
        </childnode>
        <childnode refid="16845" relation="include">
        </childnode>
        <childnode refid="16851" relation="include">
        </childnode>
        <childnode refid="16852" relation="include">
        </childnode>
      </node>
      <node id="16840">
        <label>torch/detail/ordered_dict.h</label>
        <link refid="ordered__dict_8h_source"/>
        <childnode refid="16760" relation="include">
        </childnode>
        <childnode refid="16789" relation="include">
        </childnode>
        <childnode refid="16766" relation="include">
        </childnode>
        <childnode refid="16764" relation="include">
        </childnode>
        <childnode refid="16767" relation="include">
        </childnode>
        <childnode refid="16811" relation="include">
        </childnode>
        <childnode refid="16762" relation="include">
        </childnode>
        <childnode refid="16786" relation="include">
        </childnode>
      </node>
      <node id="16786">
        <label>vector</label>
      </node>
      <node id="16856">
        <label>cereal/types/unordered_map.hpp</label>
      </node>
      <node id="16830">
        <label>ATen/TensorMethods.h</label>
      </node>
      <node id="16827">
        <label>THNN/Reduction.h</label>
      </node>
      <node id="16784">
        <label>new</label>
      </node>
      <node id="16762">
        <label>utility</label>
      </node>
      <node id="16785">
        <label>array</label>
      </node>
      <node id="16772">
        <label>sstream</label>
      </node>
      <node id="16822">
        <label>ATen/Functions.h</label>
        <link refid="build_2aten_2src_2_a_ten_2_functions_8h_source"/>
        <childnode refid="16795" relation="include">
        </childnode>
        <childnode refid="16804" relation="include">
        </childnode>
        <childnode refid="16816" relation="include">
        </childnode>
        <childnode refid="16814" relation="include">
        </childnode>
        <childnode refid="16805" relation="include">
        </childnode>
        <childnode refid="16823" relation="include">
        </childnode>
        <childnode refid="16824" relation="include">
        </childnode>
        <childnode refid="16825" relation="include">
        </childnode>
        <childnode refid="16826" relation="include">
        </childnode>
        <childnode refid="16827" relation="include">
        </childnode>
      </node>
      <node id="16751">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/serialization.h</label>
        <link refid="serialization_8h"/>
        <childnode refid="16752" relation="include">
        </childnode>
        <childnode refid="16753" relation="include">
        </childnode>
        <childnode refid="16837" relation="include">
        </childnode>
        <childnode refid="16853" relation="include">
        </childnode>
        <childnode refid="16854" relation="include">
        </childnode>
        <childnode refid="16855" relation="include">
        </childnode>
        <childnode refid="16856" relation="include">
        </childnode>
        <childnode refid="16857" relation="include">
        </childnode>
      </node>
      <node id="16824">
        <label>ATen/NativeFunctions.h</label>
      </node>
      <node id="16847">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="16838">
        <label>torch/optim/adagrad.h</label>
        <link refid="adagrad_8h_source"/>
        <childnode refid="16839" relation="include">
        </childnode>
        <childnode refid="16845" relation="include">
        </childnode>
        <childnode refid="16753" relation="include">
        </childnode>
        <childnode refid="16754" relation="include">
        </childnode>
        <childnode refid="16846" relation="include">
        </childnode>
        <childnode refid="16847" relation="include">
        </childnode>
        <childnode refid="16762" relation="include">
        </childnode>
        <childnode refid="16786" relation="include">
        </childnode>
      </node>
      <node id="16791">
        <label>iosfwd</label>
      </node>
      <node id="16781">
        <label>cstdlib</label>
      </node>
      <node id="16793">
        <label>iostream</label>
      </node>
      <node id="16769">
        <label>cstddef</label>
      </node>
      <node id="16850">
        <label>deque</label>
      </node>
      <node id="16811">
        <label>unordered_map</label>
      </node>
      <node id="16810">
        <label>mutex</label>
      </node>
      <node id="16754">
        <label>ATen/ATen.h</label>
        <link refid="_a_ten_8h_source"/>
        <childnode refid="16755" relation="include">
        </childnode>
        <childnode refid="16756" relation="include">
        </childnode>
        <childnode refid="16757" relation="include">
        </childnode>
        <childnode refid="16795" relation="include">
        </childnode>
        <childnode refid="16804" relation="include">
        </childnode>
        <childnode refid="16805" relation="include">
        </childnode>
        <childnode refid="16806" relation="include">
        </childnode>
        <childnode refid="16814" relation="include">
        </childnode>
        <childnode refid="16816" relation="include">
        </childnode>
        <childnode refid="16775" relation="include">
        </childnode>
        <childnode refid="16820" relation="include">
        </childnode>
        <childnode refid="16822" relation="include">
        </childnode>
        <childnode refid="16828" relation="include">
        </childnode>
        <childnode refid="16829" relation="include">
        </childnode>
        <childnode refid="16830" relation="include">
        </childnode>
        <childnode refid="16831" relation="include">
        </childnode>
        <childnode refid="16832" relation="include">
        </childnode>
        <childnode refid="16825" relation="include">
        </childnode>
        <childnode refid="16826" relation="include">
        </childnode>
        <childnode refid="16819" relation="include">
        </childnode>
        <childnode refid="16833" relation="include">
        </childnode>
        <childnode refid="16834" relation="include">
        </childnode>
      </node>
      <node id="16808">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="16780" relation="include">
        </childnode>
        <childnode refid="16809" relation="include">
        </childnode>
        <childnode refid="16781" relation="include">
        </childnode>
        <childnode refid="16766" relation="include">
        </childnode>
        <childnode refid="16758" relation="include">
        </childnode>
        <childnode refid="16810" relation="include">
        </childnode>
        <childnode refid="16811" relation="include">
        </childnode>
        <childnode refid="16767" relation="include">
        </childnode>
        <childnode refid="16786" relation="include">
        </childnode>
        <childnode refid="16812" relation="include">
        </childnode>
        <childnode refid="16755" relation="include">
        </childnode>
      </node>
      <node id="16760">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="16755" relation="include">
        </childnode>
        <childnode refid="16761" relation="include">
        </childnode>
        <childnode refid="16769" relation="include">
        </childnode>
        <childnode refid="16770" relation="include">
        </childnode>
        <childnode refid="16771" relation="include">
        </childnode>
        <childnode refid="16772" relation="include">
        </childnode>
        <childnode refid="16767" relation="include">
        </childnode>
      </node>
      <node id="16854">
        <label>cereal/types/polymorphic.hpp</label>
      </node>
      <node id="16826">
        <label>ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="16806" relation="include">
        </childnode>
        <childnode refid="16775" relation="include">
        </childnode>
        <childnode refid="16825" relation="include">
        </childnode>
        <childnode refid="16819" relation="include">
        </childnode>
        <childnode refid="16776" relation="include">
        </childnode>
        <childnode refid="16816" relation="include">
        </childnode>
        <childnode refid="16804" relation="include">
        </childnode>
        <childnode refid="16769" relation="include">
        </childnode>
        <childnode refid="16791" relation="include">
        </childnode>
        <childnode refid="16762" relation="include">
        </childnode>
      </node>
      <node id="16816">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="16805" relation="include">
        </childnode>
        <childnode refid="16795" relation="include">
        </childnode>
        <childnode refid="16776" relation="include">
        </childnode>
        <childnode refid="16817" relation="include">
        </childnode>
        <childnode refid="16814" relation="include">
        </childnode>
        <childnode refid="16818" relation="include">
        </childnode>
        <childnode refid="16798" relation="include">
        </childnode>
        <childnode refid="16799" relation="include">
        </childnode>
        <childnode refid="16801" relation="include">
        </childnode>
        <childnode refid="16775" relation="include">
        </childnode>
        <childnode refid="16819" relation="include">
        </childnode>
        <childnode refid="16761" relation="include">
        </childnode>
      </node>
      <node id="16763">
        <label>type_traits</label>
      </node>
      <node id="16819">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="16776" relation="include">
        </childnode>
        <childnode refid="16760" relation="include">
        </childnode>
        <childnode refid="16793" relation="include">
        </childnode>
      </node>
      <node id="16778">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="16779" relation="include">
        </childnode>
        <childnode refid="16780" relation="include">
        </childnode>
        <childnode refid="16765" relation="include">
        </childnode>
        <childnode refid="16769" relation="include">
        </childnode>
        <childnode refid="16781" relation="include">
        </childnode>
        <childnode refid="16782" relation="include">
        </childnode>
        <childnode refid="16764" relation="include">
        </childnode>
        <childnode refid="16783" relation="include">
        </childnode>
        <childnode refid="16758" relation="include">
        </childnode>
        <childnode refid="16784" relation="include">
        </childnode>
        <childnode refid="16763" relation="include">
        </childnode>
        <childnode refid="16762" relation="include">
        </childnode>
        <childnode refid="16755" relation="include">
        </childnode>
      </node>
      <node id="16780">
        <label>algorithm</label>
      </node>
      <node id="16805">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="16797" relation="include">
        </childnode>
      </node>
      <node id="16782">
        <label>cstring</label>
      </node>
      <node id="16857">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="16846">
        <label>cereal/access.hpp</label>
      </node>
      <node id="16758">
        <label>memory</label>
      </node>
      <node id="16764">
        <label>initializer_list</label>
      </node>
      <node id="16828">
        <label>ATen/Formatting.h</label>
        <link refid="_formatting_8h_source"/>
        <childnode refid="16793" relation="include">
        </childnode>
        <childnode refid="16804" relation="include">
        </childnode>
        <childnode refid="16795" relation="include">
        </childnode>
      </node>
      <node id="16849">
        <label>torch/optim/lbfgs.h</label>
        <link refid="lbfgs_8h_source"/>
        <childnode refid="16839" relation="include">
        </childnode>
        <childnode refid="16845" relation="include">
        </childnode>
        <childnode refid="16754" relation="include">
        </childnode>
        <childnode refid="16846" relation="include">
        </childnode>
        <childnode refid="16847" relation="include">
        </childnode>
        <childnode refid="16850" relation="include">
        </childnode>
        <childnode refid="16766" relation="include">
        </childnode>
        <childnode refid="16758" relation="include">
        </childnode>
        <childnode refid="16786" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="16859">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/torch.h</label>
        <link refid="torch_8h_source"/>
      </node>
      <node id="16858">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/serialization.h</label>
        <link refid="serialization_8h"/>
        <childnode refid="16859" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacetorch">torch</innernamespace>
    <innernamespace refid="namespacetorch_1_1detail">torch::detail</innernamespace>
    <innernamespace refid="namespacecereal">cereal</innernamespace>
    <innernamespace refid="namespacecereal_1_1agimpl">cereal::agimpl</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="serialization_8h_1a64a68472f4f9ede34d09bd190548b09c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CEREAL_REGISTER_TYPE</definition>
        <argsstring>(torch::optim::SGD)</argsstring>
        <name>CEREAL_REGISTER_TYPE</name>
        <param>
          <type><ref refid="classtorch_1_1optim_1_1_s_g_d" kindref="compound">torch::optim::SGD</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/serialization.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="serialization_8h_1aecdfb9bcade4c6c3821c1608db33b4b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CEREAL_REGISTER_POLYMORPHIC_RELATION</definition>
        <argsstring>(torch::optim::Optimizer, torch::optim::SGD)</argsstring>
        <name>CEREAL_REGISTER_POLYMORPHIC_RELATION</name>
        <param>
          <type><ref refid="classtorch_1_1optim_1_1_optimizer" kindref="compound">torch::optim::Optimizer</ref></type>
        </param>
        <param>
          <type><ref refid="classtorch_1_1optim_1_1_s_g_d" kindref="compound">torch::optim::SGD</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/serialization.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="serialization_8h_1a47bf1c8bf9a5995f92646301419498c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CEREAL_REGISTER_TYPE</definition>
        <argsstring>(torch::optim::Adagrad)</argsstring>
        <name>CEREAL_REGISTER_TYPE</name>
        <param>
          <type><ref refid="classtorch_1_1optim_1_1_adagrad" kindref="compound">torch::optim::Adagrad</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/serialization.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="serialization_8h_1acbf20aaf7a1b1bb405ccb0e76327e796" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CEREAL_REGISTER_POLYMORPHIC_RELATION</definition>
        <argsstring>(torch::optim::Optimizer, torch::optim::Adagrad)</argsstring>
        <name>CEREAL_REGISTER_POLYMORPHIC_RELATION</name>
        <param>
          <type><ref refid="classtorch_1_1optim_1_1_optimizer" kindref="compound">torch::optim::Optimizer</ref></type>
        </param>
        <param>
          <type><ref refid="classtorch_1_1optim_1_1_adagrad" kindref="compound">torch::optim::Adagrad</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/serialization.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="serialization_8h_1a42308a498d228e00bc7a6c12ac2c7921" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CEREAL_REGISTER_TYPE</definition>
        <argsstring>(torch::optim::RMSprop)</argsstring>
        <name>CEREAL_REGISTER_TYPE</name>
        <param>
          <type><ref refid="classtorch_1_1optim_1_1_r_m_sprop" kindref="compound">torch::optim::RMSprop</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/serialization.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="serialization_8h_1a2c324b6de59eb46276101a3afb95eb76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CEREAL_REGISTER_POLYMORPHIC_RELATION</definition>
        <argsstring>(torch::optim::Optimizer, torch::optim::RMSprop)</argsstring>
        <name>CEREAL_REGISTER_POLYMORPHIC_RELATION</name>
        <param>
          <type><ref refid="classtorch_1_1optim_1_1_optimizer" kindref="compound">torch::optim::Optimizer</ref></type>
        </param>
        <param>
          <type><ref refid="classtorch_1_1optim_1_1_r_m_sprop" kindref="compound">torch::optim::RMSprop</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/serialization.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="serialization_8h_1a8d461a2fd21b61c2ef8c51965e615537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CEREAL_REGISTER_TYPE</definition>
        <argsstring>(torch::optim::Adam)</argsstring>
        <name>CEREAL_REGISTER_TYPE</name>
        <param>
          <type><ref refid="classtorch_1_1optim_1_1_adam" kindref="compound">torch::optim::Adam</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/serialization.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="serialization_8h_1aa2a816a0fdd2625b5b5e61a10665e300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CEREAL_REGISTER_POLYMORPHIC_RELATION</definition>
        <argsstring>(torch::optim::Optimizer, torch::optim::Adam)</argsstring>
        <name>CEREAL_REGISTER_POLYMORPHIC_RELATION</name>
        <param>
          <type><ref refid="classtorch_1_1optim_1_1_optimizer" kindref="compound">torch::optim::Optimizer</ref></type>
        </param>
        <param>
          <type><ref refid="classtorch_1_1optim_1_1_adam" kindref="compound">torch::optim::Adam</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/serialization.h" line="130" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/tensor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/optim.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/archives/binary.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/types/polymorphic.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/types/string.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/types/unordered_map.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cereal/types/vector.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetorch" kindref="compound">torch</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Some<sp/>convenience<sp/>functions<sp/>for<sp/>saving<sp/>and<sp/>loading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save(std::ostream&amp;<sp/>stream,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>cereal::BinaryOutputArchive<sp/>archive(stream);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>archive(*obj);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>load(std::istream&amp;<sp/>stream,<sp/>T&amp;<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>cereal::BinaryInputArchive<sp/>archive(stream);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>archive(*obj);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save(std::ostream&amp;<sp/>stream,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>cereal::BinaryOutputArchive<sp/>archive(stream);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>archive(*obj);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>load(std::istream&amp;<sp/>stream,<sp/>T*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>cereal::BinaryInputArchive<sp/>archive(stream);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>archive(*obj);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>path,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>os(path,<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>torch::save(os,<sp/>obj);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>load(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>path,<sp/>T&amp;<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>is(path,<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>torch::load(is,<sp/>obj);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>our<sp/>own<sp/>hard-coded<sp/>type&lt;-&gt;id<sp/>mapping<sp/>so<sp/>that<sp/>serialization<sp/>is<sp/>robust</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wrt<sp/>changes<sp/>in<sp/>ATen;<sp/>see<sp/>e.g.<sp/>https://git.io/vxd6R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>mapping<sp/>is<sp/>consistent<sp/>with<sp/>the<sp/>ScalarType<sp/>enum<sp/>as<sp/>of<sp/>pytorch<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>v0.1.11-7675-ge94c67e.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>scalarTypeId(torch::Dtype<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>torch::Dtype::Byte:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>torch::Dtype::Char:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>torch::Dtype::Short:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>torch::Dtype::Int:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>torch::Dtype::Long:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>torch::Dtype::Half:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>torch::Dtype::Float:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>6;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>torch::Dtype::Double:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>7;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>torch::Dtype::Undefined:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>scalar<sp/>type:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(static_cast&lt;int&gt;(type)));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>torch::Dtype<sp/>scalarTypeFromId(int32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::Dtype::Byte;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::Dtype::Char;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::Dtype::Short;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::Dtype::Int;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::Dtype::Long;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::Dtype::Half;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::Dtype::Float;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::Dtype::Double;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::Dtype::Undefined;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>scalar<sp/>type<sp/>id:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int32_t<sp/>backendId(at::Backend<sp/>backend)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(backend)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>at::Backend::CPU:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>at::Backend::CUDA:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>at::Backend::SparseCPU:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>at::Backend::SparseCUDA:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>at::Backend::Undefined:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>backend:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(static_cast&lt;int&gt;(backend)));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>at::Backend<sp/>backendFromId(int32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at::Backend::CPU;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at::Backend::CUDA;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at::Backend::SparseCPU;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at::Backend::SparseCUDA;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at::Backend::Undefined;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>backend<sp/>id:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>torch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>super<sp/>ugly<sp/>and<sp/>I<sp/>don&apos;t<sp/>know<sp/>how<sp/>to<sp/>simplify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">CEREAL_REGISTER_TYPE(<ref refid="classtorch_1_1optim_1_1_s_g_d" kindref="compound">torch::optim::SGD</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">CEREAL_REGISTER_POLYMORPHIC_RELATION(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtorch_1_1optim_1_1_optimizer" kindref="compound">torch::optim::Optimizer</ref>,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtorch_1_1optim_1_1_s_g_d" kindref="compound">torch::optim::SGD</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">CEREAL_REGISTER_TYPE(<ref refid="classtorch_1_1optim_1_1_adagrad" kindref="compound">torch::optim::Adagrad</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">CEREAL_REGISTER_POLYMORPHIC_RELATION(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtorch_1_1optim_1_1_optimizer" kindref="compound">torch::optim::Optimizer</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtorch_1_1optim_1_1_adagrad" kindref="compound">torch::optim::Adagrad</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">CEREAL_REGISTER_TYPE(<ref refid="classtorch_1_1optim_1_1_r_m_sprop" kindref="compound">torch::optim::RMSprop</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">CEREAL_REGISTER_POLYMORPHIC_RELATION(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtorch_1_1optim_1_1_optimizer" kindref="compound">torch::optim::Optimizer</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtorch_1_1optim_1_1_r_m_sprop" kindref="compound">torch::optim::RMSprop</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">CEREAL_REGISTER_TYPE(<ref refid="classtorch_1_1optim_1_1_adam" kindref="compound">torch::optim::Adam</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">CEREAL_REGISTER_POLYMORPHIC_RELATION(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtorch_1_1optim_1_1_optimizer" kindref="compound">torch::optim::Optimizer</ref>,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtorch_1_1optim_1_1_adam" kindref="compound">torch::optim::Adam</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecereal" kindref="compound">cereal</ref><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">agimpl<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>saveBinary(Archive&amp;<sp/>archive,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>general,<sp/>there&apos;s<sp/>no<sp/>direct<sp/>`saveBinary`-like<sp/>method<sp/>on<sp/>archives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>std::vector&lt;char&gt;<sp/>v(</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;char<sp/>const*&gt;(data),<sp/>static_cast&lt;char<sp/>const*&gt;(data)<sp/>+<sp/>size);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>archive(v);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">saveBinary(BinaryOutputArchive&amp;<sp/>archive,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>to<sp/>output<sp/>stream<sp/>without<sp/>extra<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>archive.saveBinary(data,<sp/>size);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loadBinary(Archive&amp;<sp/>archive,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>general,<sp/>there&apos;s<sp/>no<sp/>direct<sp/>`loadBinary`-like<sp/>method<sp/>on<sp/>archives</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>std::vector&lt;char&gt;<sp/>v(size);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>archive(v);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>std::memcpy(data,<sp/>v.data(),<sp/>size);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">loadBinary(BinaryInputArchive&amp;<sp/>archive,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>from<sp/>input<sp/>stream<sp/>without<sp/>extra<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>archive.loadBinary(data,<sp/>size);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>agimpl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gradients<sp/>will<sp/>not<sp/>be<sp/>saved<sp/>for<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save(Archive&amp;<sp/>archive,<sp/><ref refid="structat_1_1_tensor" kindref="compound">torch::Tensor</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>tensor)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tensor.defined())<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>typeId<sp/>=<sp/>::torch::detail::scalarTypeId(torch::Dtype::Undefined);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>archive(CEREAL_NVP(typeId));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>typeId<sp/>=<sp/>::torch::detail::scalarTypeId(tensor.data().type().scalarType());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>archive(CEREAL_NVP(typeId));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sizes<sp/>=<sp/>std::vector&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buf<sp/>=<sp/>std::vector&lt;uint8_t&gt;();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>:<sp/>tensor.sizes())<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes.push_back(s);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>contig<sp/>=<sp/>tensor.toBackend(torch::kCPU).contiguous();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>int32_t<sp/>backend<sp/>=<sp/>::torch::detail::backendId(tensor.data().type().backend());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>archive(CEREAL_NVP(backend),<sp/>CEREAL_NVP(sizes));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>agimpl::saveBinary(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>archive,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>contig.data_ptr(),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tensor.numel()<sp/>*<sp/>tensor.data().type().elementSizeInBytes());</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>load(Archive&amp;<sp/>archive,<sp/><ref refid="structat_1_1_tensor" kindref="compound">torch::Tensor</ref>&amp;<sp/>tensor)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>torch::Dtype<sp/>type;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>int32_t<sp/>typeId;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>archive(CEREAL_NVP(typeId));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>type<sp/>=<sp/>::torch::detail::scalarTypeFromId(typeId);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>torch::Dtype::Undefined)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor<sp/>=<sp/><ref refid="structat_1_1_tensor" kindref="compound">torch::Tensor</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>int32_t<sp/>backendId;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sizes<sp/>=<sp/>std::vector&lt;int64_t&gt;();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buf<sp/>=<sp/>std::vector&lt;uint8_t&gt;();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>archive(CEREAL_NVP(backendId),<sp/>CEREAL_NVP(sizes));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>at::Backend<sp/>backend<sp/>=<sp/>::torch::detail::backendFromId(backendId);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tensor.defined()<sp/>||<sp/>tensor.data().type().scalarType()<sp/>!=<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor<sp/>=<sp/>torch::empty({},<sp/>torch::getType(backend,<sp/>type));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>tensor.data().resize_(sizes);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tensor.type().is_cuda())<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>actually<sp/>use<sp/>cudamemcpy<sp/>probably</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cputensor<sp/>=<sp/>torch::empty(sizes,<sp/>tensor.data().type().scalarType());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>agimpl::loadBinary(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archive,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cputensor.data_ptr(),</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cputensor.numel()<sp/>*<sp/>cputensor.type().elementSizeInBytes());</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor.copy_(cputensor);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>agimpl::loadBinary(</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archive,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor.data_ptr(),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor.numel()<sp/>*<sp/>tensor.data().type().elementSizeInBytes());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cereal</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/serialization.h"/>
  </compounddef>
</doxygen>
