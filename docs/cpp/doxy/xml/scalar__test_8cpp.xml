<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="scalar__test_8cpp" kind="file" language="C++">
    <compoundname>scalar_test.cpp</compoundname>
    <includes local="yes">catch.hpp</includes>
    <includes local="no">iostream</includes>
    <includes refid="_a_ten_8h" local="yes">ATen/ATen.h</includes>
    <includes refid="_dispatch_8h" local="yes">ATen/Dispatch.h</includes>
    <includes refid="test__seed_8h" local="yes">test_seed.h</includes>
    <incdepgraph>
      <node id="12774">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="12775" relation="include">
        </childnode>
        <childnode refid="12776" relation="include">
        </childnode>
        <childnode refid="12777" relation="include">
        </childnode>
        <childnode refid="12778" relation="include">
        </childnode>
        <childnode refid="12779" relation="include">
        </childnode>
        <childnode refid="12780" relation="include">
        </childnode>
        <childnode refid="12781" relation="include">
        </childnode>
      </node>
      <node id="12819">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="12770" relation="include">
        </childnode>
        <childnode refid="12773" relation="include">
        </childnode>
        <childnode refid="12817" relation="include">
        </childnode>
        <childnode refid="12820" relation="include">
        </childnode>
        <childnode refid="12782" relation="include">
        </childnode>
        <childnode refid="12779" relation="include">
        </childnode>
        <childnode refid="12771" relation="include">
        </childnode>
      </node>
      <node id="12788">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="12773" relation="include">
        </childnode>
        <childnode refid="12789" relation="include">
        </childnode>
        <childnode refid="12782" relation="include">
        </childnode>
        <childnode refid="12804" relation="include">
        </childnode>
        <childnode refid="12780" relation="include">
        </childnode>
        <childnode refid="12779" relation="include">
        </childnode>
      </node>
      <node id="12787">
        <label>atomic</label>
      </node>
      <node id="12765">
        <label>catch.hpp</label>
      </node>
      <node id="12779">
        <label>functional</label>
      </node>
      <node id="12824">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="12782" relation="include">
        </childnode>
        <childnode refid="12780" relation="include">
        </childnode>
        <childnode refid="12814" relation="include">
        </childnode>
        <childnode refid="12768" relation="include">
        </childnode>
      </node>
      <node id="12789">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="12790" relation="include">
        </childnode>
        <childnode refid="12768" relation="include">
        </childnode>
        <childnode refid="12800" relation="include">
        </childnode>
        <childnode refid="12802" relation="include">
        </childnode>
        <childnode refid="12766" relation="include">
        </childnode>
      </node>
      <node id="12801">
        <label>limits</label>
      </node>
      <node id="12808">
        <label>assert.h</label>
      </node>
      <node id="12813">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="12768" relation="include">
        </childnode>
        <childnode refid="12790" relation="include">
        </childnode>
        <childnode refid="12773" relation="include">
        </childnode>
        <childnode refid="12812" relation="include">
        </childnode>
        <childnode refid="12793" relation="include">
        </childnode>
        <childnode refid="12785" relation="include">
        </childnode>
        <childnode refid="12814" relation="include">
        </childnode>
        <childnode refid="12815" relation="include">
        </childnode>
      </node>
      <node id="12796">
        <label>iterator</label>
      </node>
      <node id="12807">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="12808" relation="include">
        </childnode>
        <childnode refid="12809" relation="include">
        </childnode>
        <childnode refid="12781" relation="include">
        </childnode>
        <childnode refid="12780" relation="include">
        </childnode>
        <childnode refid="12775" relation="include">
        </childnode>
        <childnode refid="12768" relation="include">
        </childnode>
        <childnode refid="12800" relation="include">
        </childnode>
        <childnode refid="12789" relation="include">
        </childnode>
        <childnode refid="12810" relation="include">
        </childnode>
        <childnode refid="12813" relation="include">
        </childnode>
      </node>
      <node id="12827">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="12802">
        <label>cstdint</label>
      </node>
      <node id="12835">
        <label>ATen/Deprecated.h</label>
        <link refid="_deprecated_8h_source"/>
      </node>
      <node id="12809">
        <label>stdint.h</label>
      </node>
      <node id="12764">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/scalar_test.cpp</label>
        <link refid="scalar__test_8cpp"/>
        <childnode refid="12765" relation="include">
        </childnode>
        <childnode refid="12766" relation="include">
        </childnode>
        <childnode refid="12767" relation="include">
        </childnode>
        <childnode refid="12843" relation="include">
        </childnode>
        <childnode refid="12847" relation="include">
        </childnode>
      </node>
      <node id="12846">
        <label>ATen/CUDAGuard.h</label>
        <link refid="_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="12803">
        <label>cmath</label>
      </node>
      <node id="12778">
        <label>cassert</label>
      </node>
      <node id="12818">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="12768" relation="include">
        </childnode>
        <childnode refid="12769" relation="include">
        </childnode>
        <childnode refid="12817" relation="include">
        </childnode>
        <childnode refid="12816" relation="include">
        </childnode>
        <childnode refid="12813" relation="include">
        </childnode>
        <childnode refid="12773" relation="include">
        </childnode>
        <childnode refid="12819" relation="include">
        </childnode>
        <childnode refid="12825" relation="include">
        </childnode>
        <childnode refid="12771" relation="include">
        </childnode>
        <childnode refid="12822" relation="include">
        </childnode>
        <childnode refid="12802" relation="include">
        </childnode>
      </node>
      <node id="12805">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="12768" relation="include">
        </childnode>
        <childnode refid="12795" relation="include">
        </childnode>
        <childnode refid="12801" relation="include">
        </childnode>
      </node>
      <node id="12781">
        <label>stdexcept</label>
      </node>
      <node id="12841">
        <label>ATen/TensorOperators.h</label>
        <link refid="_tensor_operators_8h_source"/>
        <childnode refid="12807" relation="include">
        </childnode>
        <childnode refid="12828" relation="include">
        </childnode>
        <childnode refid="12816" relation="include">
        </childnode>
        <childnode refid="12780" relation="include">
        </childnode>
        <childnode refid="12781" relation="include">
        </childnode>
      </node>
      <node id="12815">
        <label>numeric</label>
      </node>
      <node id="12811">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="12787" relation="include">
        </childnode>
        <childnode refid="12771" relation="include">
        </childnode>
        <childnode refid="12786" relation="include">
        </childnode>
        <childnode refid="12789" relation="include">
        </childnode>
        <childnode refid="12774" relation="include">
        </childnode>
      </node>
      <node id="12800">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="12768" relation="include">
        </childnode>
        <childnode refid="12801" relation="include">
        </childnode>
        <childnode refid="12780" relation="include">
        </childnode>
        <childnode refid="12802" relation="include">
        </childnode>
        <childnode refid="12781" relation="include">
        </childnode>
        <childnode refid="12775" relation="include">
        </childnode>
        <childnode refid="12803" relation="include">
        </childnode>
        <childnode refid="12804" relation="include">
        </childnode>
        <childnode refid="12805" relation="include">
        </childnode>
      </node>
      <node id="12786">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="12787" relation="include">
        </childnode>
      </node>
      <node id="12810">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="12811" relation="include">
        </childnode>
        <childnode refid="12812" relation="include">
        </childnode>
      </node>
      <node id="12780">
        <label>string</label>
      </node>
      <node id="12844">
        <label>ATen/DimVector.h</label>
        <link refid="_dim_vector_8h_source"/>
        <childnode refid="12791" relation="include">
        </childnode>
        <childnode refid="12809" relation="include">
        </childnode>
      </node>
      <node id="12845">
        <label>ATen/OptionsGuard.h</label>
        <link refid="_options_guard_8h_source"/>
        <childnode refid="12788" relation="include">
        </childnode>
        <childnode refid="12831" relation="include">
        </childnode>
        <childnode refid="12789" relation="include">
        </childnode>
        <childnode refid="12838" relation="include">
        </childnode>
        <childnode refid="12774" relation="include">
        </childnode>
      </node>
      <node id="12770">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="12771" relation="include">
        </childnode>
        <childnode refid="12772" relation="include">
        </childnode>
        <childnode refid="12773" relation="include">
        </childnode>
        <childnode refid="12786" relation="include">
        </childnode>
        <childnode refid="12788" relation="include">
        </childnode>
        <childnode refid="12806" relation="include">
        </childnode>
      </node>
      <node id="12825">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="12837">
        <label>ATen/DeviceGuard.h</label>
        <link refid="_device_guard_8h_source"/>
        <childnode refid="12788" relation="include">
        </childnode>
        <childnode refid="12773" relation="include">
        </childnode>
        <childnode refid="12789" relation="include">
        </childnode>
        <childnode refid="12828" relation="include">
        </childnode>
        <childnode refid="12819" relation="include">
        </childnode>
        <childnode refid="12782" relation="include">
        </childnode>
      </node>
      <node id="12783">
        <label>exception</label>
      </node>
      <node id="12772">
        <label>stddef.h</label>
      </node>
      <node id="12812">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="12811" relation="include">
        </childnode>
      </node>
      <node id="12843">
        <label>ATen/Dispatch.h</label>
        <link refid="_dispatch_8h_source"/>
        <childnode refid="12773" relation="include">
        </childnode>
        <childnode refid="12800" relation="include">
        </childnode>
        <childnode refid="12816" relation="include">
        </childnode>
      </node>
      <node id="12792">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="12782" relation="include">
        </childnode>
      </node>
      <node id="12826">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="12807" relation="include">
        </childnode>
        <childnode refid="12827" relation="include">
        </childnode>
      </node>
      <node id="12784">
        <label>ostream</label>
      </node>
      <node id="12769">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="12768" relation="include">
        </childnode>
      </node>
      <node id="12816">
        <label>ATen/Type.h</label>
      </node>
      <node id="12790">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="12773" relation="include">
        </childnode>
        <childnode refid="12791" relation="include">
        </childnode>
        <childnode refid="12798" relation="include">
        </childnode>
        <childnode refid="12796" relation="include">
        </childnode>
        <childnode refid="12799" relation="include">
        </childnode>
      </node>
      <node id="12832">
        <label>ATen/TensorGeometry.h</label>
        <link refid="_tensor_geometry_8h_source"/>
        <childnode refid="12816" relation="include">
        </childnode>
        <childnode refid="12833" relation="include">
        </childnode>
      </node>
      <node id="12829">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="12768">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="12833">
        <label>ATen/WrapDimUtils.h</label>
        <link refid="_wrap_dim_utils_8h_source"/>
        <childnode refid="12811" relation="include">
        </childnode>
        <childnode refid="12785" relation="include">
        </childnode>
      </node>
      <node id="12830">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="12782" relation="include">
        </childnode>
        <childnode refid="12809" relation="include">
        </childnode>
        <childnode refid="12789" relation="include">
        </childnode>
      </node>
      <node id="12814">
        <label>typeinfo</label>
      </node>
      <node id="12821">
        <label>cstdio</label>
      </node>
      <node id="12806">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="12771" relation="include">
        </childnode>
        <childnode refid="12768" relation="include">
        </childnode>
      </node>
      <node id="12799">
        <label>vector</label>
      </node>
      <node id="12847">
        <label>test_seed.h</label>
        <link refid="test__seed_8h_source"/>
        <childnode refid="12767" relation="include">
        </childnode>
      </node>
      <node id="12842">
        <label>ATen/TensorMethods.h</label>
      </node>
      <node id="12839">
        <label>THNN/Reduction.h</label>
      </node>
      <node id="12797">
        <label>new</label>
      </node>
      <node id="12775">
        <label>utility</label>
      </node>
      <node id="12798">
        <label>array</label>
      </node>
      <node id="12785">
        <label>sstream</label>
      </node>
      <node id="12834">
        <label>ATen/Functions.h</label>
        <link refid="build_2aten_2src_2_a_ten_2_functions_8h_source"/>
        <childnode refid="12807" relation="include">
        </childnode>
        <childnode refid="12816" relation="include">
        </childnode>
        <childnode refid="12828" relation="include">
        </childnode>
        <childnode refid="12826" relation="include">
        </childnode>
        <childnode refid="12817" relation="include">
        </childnode>
        <childnode refid="12835" relation="include">
        </childnode>
        <childnode refid="12836" relation="include">
        </childnode>
        <childnode refid="12837" relation="include">
        </childnode>
        <childnode refid="12838" relation="include">
        </childnode>
        <childnode refid="12839" relation="include">
        </childnode>
      </node>
      <node id="12836">
        <label>ATen/NativeFunctions.h</label>
      </node>
      <node id="12804">
        <label>iosfwd</label>
      </node>
      <node id="12794">
        <label>cstdlib</label>
      </node>
      <node id="12766">
        <label>iostream</label>
      </node>
      <node id="12782">
        <label>cstddef</label>
      </node>
      <node id="12823">
        <label>unordered_map</label>
      </node>
      <node id="12822">
        <label>mutex</label>
      </node>
      <node id="12767">
        <label>ATen/ATen.h</label>
        <link refid="_a_ten_8h_source"/>
        <childnode refid="12768" relation="include">
        </childnode>
        <childnode refid="12769" relation="include">
        </childnode>
        <childnode refid="12770" relation="include">
        </childnode>
        <childnode refid="12807" relation="include">
        </childnode>
        <childnode refid="12816" relation="include">
        </childnode>
        <childnode refid="12817" relation="include">
        </childnode>
        <childnode refid="12818" relation="include">
        </childnode>
        <childnode refid="12826" relation="include">
        </childnode>
        <childnode refid="12828" relation="include">
        </childnode>
        <childnode refid="12788" relation="include">
        </childnode>
        <childnode refid="12832" relation="include">
        </childnode>
        <childnode refid="12834" relation="include">
        </childnode>
        <childnode refid="12840" relation="include">
        </childnode>
        <childnode refid="12841" relation="include">
        </childnode>
        <childnode refid="12842" relation="include">
        </childnode>
        <childnode refid="12843" relation="include">
        </childnode>
        <childnode refid="12844" relation="include">
        </childnode>
        <childnode refid="12837" relation="include">
        </childnode>
        <childnode refid="12838" relation="include">
        </childnode>
        <childnode refid="12831" relation="include">
        </childnode>
        <childnode refid="12845" relation="include">
        </childnode>
        <childnode refid="12846" relation="include">
        </childnode>
      </node>
      <node id="12820">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="12793" relation="include">
        </childnode>
        <childnode refid="12821" relation="include">
        </childnode>
        <childnode refid="12794" relation="include">
        </childnode>
        <childnode refid="12779" relation="include">
        </childnode>
        <childnode refid="12771" relation="include">
        </childnode>
        <childnode refid="12822" relation="include">
        </childnode>
        <childnode refid="12823" relation="include">
        </childnode>
        <childnode refid="12780" relation="include">
        </childnode>
        <childnode refid="12799" relation="include">
        </childnode>
        <childnode refid="12824" relation="include">
        </childnode>
        <childnode refid="12768" relation="include">
        </childnode>
      </node>
      <node id="12773">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="12768" relation="include">
        </childnode>
        <childnode refid="12774" relation="include">
        </childnode>
        <childnode refid="12782" relation="include">
        </childnode>
        <childnode refid="12783" relation="include">
        </childnode>
        <childnode refid="12784" relation="include">
        </childnode>
        <childnode refid="12785" relation="include">
        </childnode>
        <childnode refid="12780" relation="include">
        </childnode>
      </node>
      <node id="12838">
        <label>ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="12818" relation="include">
        </childnode>
        <childnode refid="12788" relation="include">
        </childnode>
        <childnode refid="12837" relation="include">
        </childnode>
        <childnode refid="12831" relation="include">
        </childnode>
        <childnode refid="12789" relation="include">
        </childnode>
        <childnode refid="12828" relation="include">
        </childnode>
        <childnode refid="12816" relation="include">
        </childnode>
        <childnode refid="12782" relation="include">
        </childnode>
        <childnode refid="12804" relation="include">
        </childnode>
        <childnode refid="12775" relation="include">
        </childnode>
      </node>
      <node id="12828">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="12817" relation="include">
        </childnode>
        <childnode refid="12807" relation="include">
        </childnode>
        <childnode refid="12789" relation="include">
        </childnode>
        <childnode refid="12829" relation="include">
        </childnode>
        <childnode refid="12826" relation="include">
        </childnode>
        <childnode refid="12830" relation="include">
        </childnode>
        <childnode refid="12810" relation="include">
        </childnode>
        <childnode refid="12811" relation="include">
        </childnode>
        <childnode refid="12813" relation="include">
        </childnode>
        <childnode refid="12788" relation="include">
        </childnode>
        <childnode refid="12831" relation="include">
        </childnode>
        <childnode refid="12774" relation="include">
        </childnode>
      </node>
      <node id="12776">
        <label>type_traits</label>
      </node>
      <node id="12831">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="12789" relation="include">
        </childnode>
        <childnode refid="12773" relation="include">
        </childnode>
        <childnode refid="12766" relation="include">
        </childnode>
      </node>
      <node id="12791">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="12792" relation="include">
        </childnode>
        <childnode refid="12793" relation="include">
        </childnode>
        <childnode refid="12778" relation="include">
        </childnode>
        <childnode refid="12782" relation="include">
        </childnode>
        <childnode refid="12794" relation="include">
        </childnode>
        <childnode refid="12795" relation="include">
        </childnode>
        <childnode refid="12777" relation="include">
        </childnode>
        <childnode refid="12796" relation="include">
        </childnode>
        <childnode refid="12771" relation="include">
        </childnode>
        <childnode refid="12797" relation="include">
        </childnode>
        <childnode refid="12776" relation="include">
        </childnode>
        <childnode refid="12775" relation="include">
        </childnode>
        <childnode refid="12768" relation="include">
        </childnode>
      </node>
      <node id="12793">
        <label>algorithm</label>
      </node>
      <node id="12817">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="12809" relation="include">
        </childnode>
      </node>
      <node id="12795">
        <label>cstring</label>
      </node>
      <node id="12771">
        <label>memory</label>
      </node>
      <node id="12777">
        <label>initializer_list</label>
      </node>
      <node id="12840">
        <label>ATen/Formatting.h</label>
        <link refid="_formatting_8h_source"/>
        <childnode refid="12766" relation="include">
        </childnode>
        <childnode refid="12816" relation="include">
        </childnode>
        <childnode refid="12807" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_foo" prot="public">Foo</innerclass>
    <innerclass refid="struct_foo_3_01_half_01_4" prot="public">Foo&lt; Half &gt;</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="scalar__test_8cpp_1a656eb5868e824d59f489f910db438420" prot="public" static="no">
        <name>CATCH_CONFIG_MAIN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/scalar_test.cpp" line="1" column="9" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/scalar_test.cpp" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="scalar__test_8cpp_1acf55f7103849db5b297b5bd2f1192db6" prot="public" static="no" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto Float</definition>
        <argsstring></argsstring>
        <name>Float</name>
        <initializer>= ScalarType::Float</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/scalar_test.cpp" line="17" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/scalar_test.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="scalar__test_8cpp_1acdd4afe9c41d36fbc935ff886ba6ea58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_ctors</definition>
        <argsstring>()</argsstring>
        <name>test_ctors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/scalar_test.cpp" line="34" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/scalar_test.cpp" bodystart="34" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="scalar__test_8cpp_1a4df888ed588c5ef0b7d43065c9e4f045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_overflow</definition>
        <argsstring>()</argsstring>
        <name>test_overflow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/scalar_test.cpp" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/scalar_test.cpp" bodystart="53" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="scalar__test_8cpp_1adb2c5986d522bacbb05809d1b2337183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;scalar test&quot;, &quot;[]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;scalar test&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/scalar_test.cpp" line="73" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/scalar_test.cpp" bodystart="73" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#define<sp/>CATCH_CONFIG_MAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;catch.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>constants<sp/>like<sp/>M_PI<sp/>and<sp/>C<sp/>keywords<sp/>for<sp/>MSVC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/ATen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Dispatch.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_seed.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cout;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Float<sp/>=<sp/>ScalarType::Float;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>scalar_type&gt;</highlight></codeline>
<codeline lineno="20" refid="struct_foo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_foo" kindref="compound">Foo</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>apply(<ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>a,<sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>scalar_type<sp/>s<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;hello,<sp/>dispatch:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a.type().toString()<sp/>&lt;&lt;<sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data<sp/>=<sp/>(scalar_type*)a.data_ptr();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)data;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="30" refid="struct_foo_3_01_half_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_foo" kindref="compound">Foo</ref>&lt;<ref refid="structat_1_1_half" kindref="compound">Half</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>apply(<ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>a,<sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>b)<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_ctors()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>scalars<sp/>backed<sp/>by<sp/>tensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s1<sp/>=<sp/><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref>(CPU(kFloat).scalarTensor(1));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s2<sp/>=<sp/><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref>(CPU(kFloat).scalarTensor(2));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref>{s1};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref>{std::move(s2)};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>REQUIRE(s2.isBackedByTensor());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>REQUIRE(!s2.toTensor().defined());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>s2<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>REQUIRE(s2.isBackedByTensor());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>REQUIRE(s2.toFloat()<sp/>==<sp/>1.0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref><sp/>s3;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>s3<sp/>=<sp/>std::move(s2);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>REQUIRE(s2.isBackedByTensor());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>REQUIRE(!s2.toTensor().defined());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>REQUIRE(s3.isBackedByTensor());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>REQUIRE(s3.toFloat()<sp/>==<sp/>1.0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_overflow()<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s1<sp/>=<sp/><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref>(M_PI);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>REQUIRE(s1.toFloat()<sp/>==<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(M_PI));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>s1.toHalf();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>s1<sp/>=<sp/><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref>(100000);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>REQUIRE(s1.toFloat()<sp/>==<sp/>100000.0);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>REQUIRE(s1.toInt()<sp/>==<sp/>100000);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>REQUIRE_THROWS_AS(s1.toHalf(),<sp/>std::domain_error);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>s1<sp/>=<sp/><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref>(NAN);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>REQUIRE(std::isnan(s1.toFloat()));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>REQUIRE_THROWS_AS(s1.toInt(),<sp/>std::domain_error);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>s1<sp/>=<sp/><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref>(INFINITY);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>REQUIRE(std::isinf(s1.toFloat()));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>REQUIRE_THROWS_AS(s1.toInt(),<sp/>std::domain_error);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">TEST_CASE(<sp/></highlight><highlight class="stringliteral">&quot;scalar<sp/>test&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>manual_seed(123,<sp/>at::Backend::CPU);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>manual_seed(123,<sp/>at::Backend::CUDA);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref><sp/>what<sp/>=<sp/>257;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref><sp/>bar<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref><sp/>h<sp/>=<sp/>bar.toHalf();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref><sp/>h2<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;H2:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>h2.toDouble()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>what.toFloat()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bar.toDouble()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>what.isIntegral()<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_generator" kindref="compound">Generator</ref><sp/>&amp;<sp/><ref refid="namespacegen" kindref="compound">gen</ref><sp/>=<sp/>at::globalContext().defaultGenerator(Backend::CPU);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>REQUIRE_NOTHROW(<ref refid="namespacegen" kindref="compound">gen</ref>.seed());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>C<sp/>=<sp/>at::globalContext();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(at::hasCUDA())<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>CUDAFloat<sp/>=<sp/>C.getType(Backend::CUDA,ScalarType::Float);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t2<sp/>=<sp/>zeros({4,4},<sp/>CUDAFloat);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&amp;t2<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;AFTER<sp/>GET<sp/>TYPE<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>&amp;CUDAFloat<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>ones({4,4});</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>wha2<sp/>=<sp/>zeros({4,4}).add(t).sum();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>REQUIRE(<sp/>wha2.toCDouble()<sp/>==<sp/>16.0<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>REQUIRE(<sp/>t.sizes()[0]<sp/>==<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>REQUIRE(<sp/>t.sizes()[1]<sp/>==<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>REQUIRE(<sp/>t.strides()[0]<sp/>==<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>REQUIRE(<sp/>t.strides()[1]<sp/>==<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_type" kindref="compound">Type</ref><sp/>&amp;<sp/>T<sp/>=<sp/>CPU(Float);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>x<sp/>=<sp/>randn({1,10},<sp/>T);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>prev_h<sp/>=<sp/>randn({1,20},<sp/>T);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>W_h<sp/>=<sp/>randn({20,20},<sp/>T);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>W_x<sp/>=<sp/>randn({20,10},<sp/>T);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>i2h<sp/>=<sp/>at::mm(W_x,<sp/>x.t());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>h2h<sp/>=<sp/>at::mm(W_h,<sp/>prev_h.t());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>next_h<sp/>=<sp/>i2h.add(h2h);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>next_h<sp/>=<sp/>next_h.tanh();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>REQUIRE_THROWS(<ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref>{<ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>{}});</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>test_ctors();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>test_overflow();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(at::hasCUDA())<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>CUDA(Float).copy(next_h);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(CPU(Float).copy(r).equal(next_h));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>REQUIRE_NOTHROW(randn({10,10,2},<sp/>T));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>Scalar.toTensor<sp/>on<sp/>Scalars<sp/>backed<sp/>by<sp/>different<sp/>data<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>REQUIRE(bar.toTensor().type().scalarType()<sp/>==<sp/>kDouble);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>REQUIRE(what.toTensor().type().scalarType()<sp/>==<sp/>kLong);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>REQUIRE(<ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref>(ones({})).toTensor().type().scalarType()<sp/>==<sp/>kFloat);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.type().scalarType()<sp/>!=<sp/>ScalarType::Half)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_DISPATCH_ALL_TYPES(x.type(),<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>[&amp;]<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scalar_t<sp/>s<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE_NOTHROW(ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;hello,<sp/>dispatch&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x.type().toString()<sp/>&lt;&lt;<sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data<sp/>=<sp/>(scalar_t*)x.data_ptr();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(void)data;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>direct<sp/>C-scalar<sp/>type<sp/>conversions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>ones({1,2},<sp/>T);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE_THROWS(x.toCFloat());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>float_one<sp/>=<sp/>ones({},<sp/>T);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>REQUIRE(float_one.toCFloat()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>REQUIRE(float_one.toCInt()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>REQUIRE((float_one.toCHalf()<sp/>==<sp/>1));</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/scalar_test.cpp"/>
  </compounddef>
</doxygen>
