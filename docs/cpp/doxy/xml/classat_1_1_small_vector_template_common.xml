<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classat_1_1_small_vector_template_common" kind="class" language="C++" prot="public">
    <compoundname>at::SmallVectorTemplateCommon</compoundname>
    <basecompoundref refid="classat_1_1_small_vector_base" prot="public" virt="non-virtual">at::SmallVectorBase</basecompoundref>
    <includes refid="_small_vector_8h" local="no">SmallVector.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>typename</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classat_1_1_small_vector_template_common_1a3d40b8712b41d7a9d07d9f4b88ae577b" prot="private" static="no">
        <type><ref refid="structat_1_1_aligned_char_array_union" kindref="compound">AlignedCharArrayUnion</ref>&lt; T &gt;</type>
        <definition>using at::SmallVectorTemplateCommon&lt; T, typename &gt;::U =  AlignedCharArrayUnion&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>U</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="99" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classat_1_1_small_vector_template_common_1a59feddaafd3d648b1399852f2e5992e8" prot="public" static="no">
        <type>size_t</type>
        <definition>using at::SmallVectorTemplateCommon&lt; T, typename &gt;::size_type =  size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="124" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classat_1_1_small_vector_template_common_1a4139257e5c28ba8c565fd1cf25393ff9" prot="public" static="no">
        <type>ptrdiff_t</type>
        <definition>using at::SmallVectorTemplateCommon&lt; T, typename &gt;::difference_type =  ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="125" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classat_1_1_small_vector_template_common_1a91e5c1ab3a33f708094e8bbd55943c3b" prot="public" static="no">
        <type>T</type>
        <definition>using at::SmallVectorTemplateCommon&lt; T, typename &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="126" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classat_1_1_small_vector_template_common_1a55a84f43f919327dbfe1b0c64e52bc6a" prot="public" static="no">
        <type>T *</type>
        <definition>using at::SmallVectorTemplateCommon&lt; T, typename &gt;::iterator =  T *</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="127" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classat_1_1_small_vector_template_common_1ae269eb4f173ec7528351b9f4c2da663d" prot="public" static="no">
        <type>const T *</type>
        <definition>using at::SmallVectorTemplateCommon&lt; T, typename &gt;::const_iterator =  const T *</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="128" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classat_1_1_small_vector_template_common_1a50bbe2a780de571d26a74b7d9242fdf8" prot="public" static="no">
        <type>std::reverse_iterator&lt; const_iterator &gt;</type>
        <definition>using at::SmallVectorTemplateCommon&lt; T, typename &gt;::const_reverse_iterator =  std::reverse_iterator&lt;const_iterator&gt;</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="130" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classat_1_1_small_vector_template_common_1a1ba592283c5a885418a91deeeb32a725" prot="public" static="no">
        <type>std::reverse_iterator&lt; iterator &gt;</type>
        <definition>using at::SmallVectorTemplateCommon&lt; T, typename &gt;::reverse_iterator =  std::reverse_iterator&lt;iterator&gt;</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="131" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classat_1_1_small_vector_template_common_1a27d5deeb11704c0a8ecc20055f7b9398" prot="public" static="no">
        <type>T &amp;</type>
        <definition>using at::SmallVectorTemplateCommon&lt; T, typename &gt;::reference =  T &amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="133" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classat_1_1_small_vector_template_common_1a1c6cf85fed4a7787dee826a97f2715a7" prot="public" static="no">
        <type>const T &amp;</type>
        <definition>using at::SmallVectorTemplateCommon&lt; T, typename &gt;::const_reference =  const T &amp;</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="134" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classat_1_1_small_vector_template_common_1a876c0ed74308595095482e8cecbf9c30" prot="public" static="no">
        <type>T *</type>
        <definition>using at::SmallVectorTemplateCommon&lt; T, typename &gt;::pointer =  T *</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="135" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classat_1_1_small_vector_template_common_1aff6e85cbbb30f1d0de96e60d40a66783" prot="public" static="no">
        <type>const T *</type>
        <definition>using at::SmallVectorTemplateCommon&lt; T, typename &gt;::const_pointer =  const T *</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="136" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classat_1_1_small_vector_template_common_1a793abe4bcf6dc77d4cc24d207a4958b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
          <param>
            <type>unsigned</type>
          </param>
        </templateparamlist>
        <type>friend struct</type>
        <definition>friend struct SmallVectorStorage</definition>
        <argsstring></argsstring>
        <name>SmallVectorStorage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="94" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classat_1_1_small_vector_template_common_1ad5f4d6090fa2c74b6cf4d4d4167ceeec" prot="private" static="no" mutable="no">
        <type><ref refid="structat_1_1_aligned_char_array_union" kindref="compound">U</ref></type>
        <definition>U at::SmallVectorTemplateCommon&lt; T, typename &gt;::FirstEl</definition>
        <argsstring></argsstring>
        <name>FirstEl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="100" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a0ce99d27ab7880012bc901eb83661cbc" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>at::SmallVectorTemplateCommon&lt; T, typename &gt;::SmallVectorTemplateCommon</definition>
        <argsstring>(size_t Size)</argsstring>
        <name>SmallVectorTemplateCommon</name>
        <param>
          <type>size_t</type>
          <declname>Size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="104" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a1144a1aa0e89a56bca38ba7390581ac7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::SmallVectorTemplateCommon&lt; T, typename &gt;::grow_pod</definition>
        <argsstring>(size_t MinSizeInBytes, size_t TSize)</argsstring>
        <name>grow_pod</name>
        <param>
          <type>size_t</type>
          <declname>MinSizeInBytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>TSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="106" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a39649612f37cb64162bad134137046d0" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::SmallVectorTemplateCommon&lt; T, typename &gt;::isSmall</definition>
        <argsstring>() const</argsstring>
        <name>isSmall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if this is a smallvector which has not had dynamic memory allocated for it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="112" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a4b7ec9160ac37cb1f9ade21758c43232" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::SmallVectorTemplateCommon&lt; T, typename &gt;::resetToSmall</definition>
        <argsstring>()</argsstring>
        <name>resetToSmall</name>
        <briefdescription>
<para>Put this vector in a state of being small. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="117" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a18fe81caaa397653a65dfc574fd4d667" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::SmallVectorTemplateCommon&lt; T, typename &gt;::setEnd</definition>
        <argsstring>(T *P)</argsstring>
        <name>setEnd</name>
        <param>
          <type>T *</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="121" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a2fafbd6888930d69dbd457d0fe0200a1" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator at::SmallVectorTemplateCommon&lt; T, typename &gt;::capacity_ptr</definition>
        <argsstring>()</argsstring>
        <name>capacity_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="145" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a25844f1ffb9d2b2857e82ba0fa57f23b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator at::SmallVectorTemplateCommon&lt; T, typename &gt;::capacity_ptr</definition>
        <argsstring>() const</argsstring>
        <name>capacity_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="146" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="146" bodyend="146"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a9d396477971897b3628f368129741dd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator at::SmallVectorTemplateCommon&lt; T, typename &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="139" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1ae4c984b3a4ba993eba89f0260e19e0a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator at::SmallVectorTemplateCommon&lt; T, typename &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="140" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a3e4a27f3b356e422e7b2530c8140df96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator at::SmallVectorTemplateCommon&lt; T, typename &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="141" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a03abac1f865cd1f6fc90866c6d3c4eee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator at::SmallVectorTemplateCommon&lt; T, typename &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="142" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a316642c64a2c85938c34ed586ae7abd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reverse_iterator</type>
        <definition>reverse_iterator at::SmallVectorTemplateCommon&lt; T, typename &gt;::rbegin</definition>
        <argsstring>()</argsstring>
        <name>rbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="150" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a8201a6f53f1fa51c13a3c92def3524bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator at::SmallVectorTemplateCommon&lt; T, typename &gt;::rbegin</definition>
        <argsstring>() const</argsstring>
        <name>rbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="151" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a9dea15cf7f74eedcccc5022152ea5053" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reverse_iterator</type>
        <definition>reverse_iterator at::SmallVectorTemplateCommon&lt; T, typename &gt;::rend</definition>
        <argsstring>()</argsstring>
        <name>rend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="152" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a98b9577a560658af687847bd7e5efd2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator at::SmallVectorTemplateCommon&lt; T, typename &gt;::rend</definition>
        <argsstring>() const</argsstring>
        <name>rend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="153" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a486fa181c8b50dc1c9677afd1038ea88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type at::SmallVectorTemplateCommon&lt; T, typename &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="155" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a006d15e51a21d717dc9073ac6683d5c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type at::SmallVectorTemplateCommon&lt; T, typename &gt;::max_size</definition>
        <argsstring>() const</argsstring>
        <name>max_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="156" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a82a3c61d858b9f58a551016e539f4f63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t at::SmallVectorTemplateCommon&lt; T, typename &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <briefdescription>
<para>Return the total number of elements in the currently allocated buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="159" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a768dfe9aa7c6b564c4e3fb2bc60c62dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer at::SmallVectorTemplateCommon&lt; T, typename &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
<para>Return a pointer to the vector&apos;s buffer, even if empty(). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="162" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a8390706f7405a97fb1608afa74d5689c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_pointer</type>
        <definition>const_pointer at::SmallVectorTemplateCommon&lt; T, typename &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
<para>Return a pointer to the vector&apos;s buffer, even if empty(). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="164" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a02cc648a1eca3f87168facf65aab75cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference at::SmallVectorTemplateCommon&lt; T, typename &gt;::operator[]</definition>
        <argsstring>(size_type idx)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_type</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="166" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1abf3ae422ca02675132c52e44617b6011" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reference</type>
        <definition>const_reference at::SmallVectorTemplateCommon&lt; T, typename &gt;::operator[]</definition>
        <argsstring>(size_type idx) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_type</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="170" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a64bb38f0dae1cc70ea1a8a6ffe067e03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference at::SmallVectorTemplateCommon&lt; T, typename &gt;::front</definition>
        <argsstring>()</argsstring>
        <name>front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="175" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a4d3c30146e2179d6b3ccb75a497c1fb4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reference</type>
        <definition>const_reference at::SmallVectorTemplateCommon&lt; T, typename &gt;::front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="179" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1a6b7793fb26512198a274db7c73d9fcf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference at::SmallVectorTemplateCommon&lt; T, typename &gt;::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="184" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_template_common_1af2fb93bb302d7cab177a55858f911ea9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reference</type>
        <definition>const_reference at::SmallVectorTemplateCommon&lt; T, typename &gt;::back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="188" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="188" bodyend="191"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is the part of <ref refid="classat_1_1_small_vector_template_base" kindref="compound">SmallVectorTemplateBase</ref> which does not depend on whether the type T is a POD. The extra dummy template argument is used by <ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref> to avoid unnecessarily requiring T to be complete. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="633">
        <label>at::SmallVectorTemplateCommon&lt; T, typename &gt;</label>
        <link refid="classat_1_1_small_vector_template_common"/>
        <childnode refid="634" relation="public-inheritance">
        </childnode>
      </node>
      <node id="634">
        <label>at::SmallVectorBase</label>
        <link refid="classat_1_1_small_vector_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="635">
        <label>at::SmallVectorTemplateCommon&lt; T, typename &gt;</label>
        <link refid="classat_1_1_small_vector_template_common"/>
        <childnode refid="636" relation="public-inheritance">
        </childnode>
      </node>
      <node id="636">
        <label>at::SmallVectorBase</label>
        <link refid="classat_1_1_small_vector_base"/>
      </node>
    </collaborationgraph>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="92" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="92" bodyend="192"/>
    <listofallmembers>
      <member refid="classat_1_1_small_vector_template_common_1a6b7793fb26512198a274db7c73d9fcf8" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>back</name></member>
      <member refid="classat_1_1_small_vector_template_common_1af2fb93bb302d7cab177a55858f911ea9" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>back</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a9d396477971897b3628f368129741dd1" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>begin</name></member>
      <member refid="classat_1_1_small_vector_template_common_1ae4c984b3a4ba993eba89f0260e19e0a8" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>begin</name></member>
      <member refid="classat_1_1_small_vector_base_1ac7d87982be839c1bd2646b7f631b55f4" prot="protected" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>BeginX</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a82a3c61d858b9f58a551016e539f4f63" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>capacity</name></member>
      <member refid="classat_1_1_small_vector_base_1a080727fd01500634693cc7f5fb30904e" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>capacity_in_bytes</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a2fafbd6888930d69dbd457d0fe0200a1" prot="protected" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>capacity_ptr</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a25844f1ffb9d2b2857e82ba0fa57f23b" prot="protected" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>capacity_ptr</name></member>
      <member refid="classat_1_1_small_vector_base_1a1f6b7f7b799d18affcd4f103dda6be82" prot="protected" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>CapacityX</name></member>
      <member refid="classat_1_1_small_vector_template_common_1ae269eb4f173ec7528351b9f4c2da663d" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>const_iterator</name></member>
      <member refid="classat_1_1_small_vector_template_common_1aff6e85cbbb30f1d0de96e60d40a66783" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>const_pointer</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a1c6cf85fed4a7787dee826a97f2715a7" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>const_reference</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a50bbe2a780de571d26a74b7d9242fdf8" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>const_reverse_iterator</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a768dfe9aa7c6b564c4e3fb2bc60c62dc" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>data</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a8390706f7405a97fb1608afa74d5689c" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>data</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a4139257e5c28ba8c565fd1cf25393ff9" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>difference_type</name></member>
      <member refid="classat_1_1_small_vector_base_1a1555255c2500ed31890456bcf0c44630" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>empty</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a3e4a27f3b356e422e7b2530c8140df96" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>end</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a03abac1f865cd1f6fc90866c6d3c4eee" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>end</name></member>
      <member refid="classat_1_1_small_vector_base_1abf015558c9fc9666d61265ea81a515a9" prot="protected" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>EndX</name></member>
      <member refid="classat_1_1_small_vector_template_common_1ad5f4d6090fa2c74b6cf4d4d4167ceeec" prot="private" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>FirstEl</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a64bb38f0dae1cc70ea1a8a6ffe067e03" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>front</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a4d3c30146e2179d6b3ccb75a497c1fb4" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>front</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a1144a1aa0e89a56bca38ba7390581ac7" prot="protected" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>grow_pod</name></member>
      <member refid="classat_1_1_small_vector_base_1aad0c28f55592d56898e17b082992dc38" prot="protected" virt="non-virtual" ambiguityscope="at::SmallVectorBase::"><scope>at::SmallVectorTemplateCommon</scope><name>grow_pod</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a39649612f37cb64162bad134137046d0" prot="protected" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>isSmall</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a55a84f43f919327dbfe1b0c64e52bc6a" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>iterator</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a006d15e51a21d717dc9073ac6683d5c0" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>max_size</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a02cc648a1eca3f87168facf65aab75cd" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>operator[]</name></member>
      <member refid="classat_1_1_small_vector_template_common_1abf3ae422ca02675132c52e44617b6011" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>operator[]</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a876c0ed74308595095482e8cecbf9c30" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>pointer</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a316642c64a2c85938c34ed586ae7abd4" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>rbegin</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a8201a6f53f1fa51c13a3c92def3524bc" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>rbegin</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a27d5deeb11704c0a8ecc20055f7b9398" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>reference</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a9dea15cf7f74eedcccc5022152ea5053" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>rend</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a98b9577a560658af687847bd7e5efd2c" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>rend</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a4b7ec9160ac37cb1f9ade21758c43232" prot="protected" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>resetToSmall</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a1ba592283c5a885418a91deeeb32a725" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>reverse_iterator</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a18fe81caaa397653a65dfc574fd4d667" prot="protected" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>setEnd</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a486fa181c8b50dc1c9677afd1038ea88" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>size</name></member>
      <member refid="classat_1_1_small_vector_base_1ac467c3e17cfe1931b7701af7efceda5c" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>size_in_bytes</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a59feddaafd3d648b1399852f2e5992e8" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>size_type</name></member>
      <member refid="classat_1_1_small_vector_base_1a6ba6526e921aeab53df52a94a32cd9ec" prot="protected" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>SmallVectorBase</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a793abe4bcf6dc77d4cc24d207a4958b8" prot="private" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>SmallVectorStorage</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a0ce99d27ab7880012bc901eb83661cbc" prot="protected" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>SmallVectorTemplateCommon</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a3d40b8712b41d7a9d07d9f4b88ae577b" prot="private" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>U</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a91e5c1ab3a33f708094e8bbd55943c3b" prot="public" virt="non-virtual"><scope>at::SmallVectorTemplateCommon</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
