<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="namespacestd" kind="namespace" language="C++">
    <compoundname>std</compoundname>
    <innerclass refid="structstd_1_1hash_3_01at_1_1_device_01_4" prot="public">std::hash&lt; at::Device &gt;</innerclass>
    <innerclass refid="structstd_1_1hash_3_01at_1_1optional_3_01_t_01_6_01_4_01_4" prot="public">std::hash&lt; at::optional&lt; T &amp; &gt; &gt;</innerclass>
    <innerclass refid="structstd_1_1hash_3_01at_1_1optional_3_01_t_01_4_01_4" prot="public">std::hash&lt; at::optional&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classstd_1_1numeric__limits_3_01at_1_1_half_01_4" prot="public">std::numeric_limits&lt; at::Half &gt;</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_small_vector_8h_1ac0b571f0f3929565fa9c78212fe47f77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void std::swap</definition>
        <argsstring>(at::SmallVectorImpl&lt; T &gt; &amp;LHS, at::SmallVectorImpl&lt; T &gt; &amp;RHS)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classat_1_1_small_vector_impl" kindref="compound">at::SmallVectorImpl</ref>&lt; T &gt; &amp;</type>
          <declname>LHS</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_small_vector_impl" kindref="compound">at::SmallVectorImpl</ref>&lt; T &gt; &amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
<para>Implement std::swap in terms of SmallVector swap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="965" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="965" bodyend="967"/>
      </memberdef>
      <memberdef kind="function" id="_small_vector_8h_1a227e7808fb14654cc67d34c3012634d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>unsigned</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void std::swap</definition>
        <argsstring>(at::SmallVector&lt; T, N &gt; &amp;LHS, at::SmallVector&lt; T, N &gt; &amp;RHS)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classat_1_1_small_vector" kindref="compound">at::SmallVector</ref>&lt; T, N &gt; &amp;</type>
          <declname>LHS</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_small_vector" kindref="compound">at::SmallVector</ref>&lt; T, N &gt; &amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
<para>Implement std::swap in terms of SmallVector swap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="972" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="972" bodyend="974"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Device.h" line="117" column="1"/>
  </compounddef>
</doxygen>
