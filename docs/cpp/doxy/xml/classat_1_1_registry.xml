<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classat_1_1_registry" kind="class" language="C++" prot="public">
    <compoundname>at::Registry</compoundname>
    <includes refid="_registry_8h" local="no">Registry.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>SrcType</declname>
        <defname>SrcType</defname>
      </param>
      <param>
        <type>class</type>
        <declname>ObjectPtrType</declname>
        <defname>ObjectPtrType</defname>
      </param>
      <param>
        <type>class...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classat_1_1_registry_1ad647ef5e32a7cf51069ee0af8c1d93be" prot="public" static="no">
        <type>std::function&lt; ObjectPtrType(Args...)&gt;</type>
        <definition>typedef std::function&lt;ObjectPtrType(Args...)&gt; at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::Creator</definition>
        <argsstring></argsstring>
        <name>Creator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="49" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classat_1_1_registry_1a16cbc29126b834f93407f51048e5c8d5" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; SrcType, Creator &gt;</type>
        <definition>std::unordered_map&lt;SrcType, Creator&gt; at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::registry_</definition>
        <argsstring></argsstring>
        <name>registry_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="108" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classat_1_1_registry_1a47409b39f5f5b98145480f5451ca16b3" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; SrcType, std::string &gt;</type>
        <definition>std::unordered_map&lt;SrcType, std::string&gt; at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::help_message_</definition>
        <argsstring></argsstring>
        <name>help_message_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="109" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classat_1_1_registry_1a963b3ccf8683f09e83e810771a4bdfe0" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::register_mutex_</definition>
        <argsstring></argsstring>
        <name>register_mutex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="110" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classat_1_1_registry_1a6fd5b586d8a85559a77c07292f8069b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::Registry</definition>
        <argsstring>()</argsstring>
        <name>Registry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="51" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_registry_1a3ad1691d73d070b92aa60cd971417efc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::Register</definition>
        <argsstring>(const SrcType &amp;key, Creator creator)</argsstring>
        <name>Register</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Creator</type>
          <declname>creator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="53" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_registry_1a89232e11a35b593e199b2d9319989b8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::Register</definition>
        <argsstring>(const SrcType &amp;key, Creator creator, const std::string &amp;help_msg)</argsstring>
        <name>Register</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Creator</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>help_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="69" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_registry_1ac0653464c3c982aa6f440d8d820e4164" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::Has</definition>
        <argsstring>(const SrcType &amp;key)</argsstring>
        <name>Has</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="74" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_registry_1aee5b030870a97c096517421fc239a491" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ObjectPtrType</type>
        <definition>ObjectPtrType at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::Create</definition>
        <argsstring>(const SrcType &amp;key, Args... args)</argsstring>
        <name>Create</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="76" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_registry_1a4e8566fd413f4bcf6c5424a97dec764c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; SrcType &gt;</type>
        <definition>std::vector&lt;SrcType&gt; at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::Keys</definition>
        <argsstring>()</argsstring>
        <name>Keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the keys currently registered as a std::vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="87" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="87" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_registry_1a386f50c409dd083e5723e0547831e914" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::unordered_map&lt; SrcType, std::string &gt; &amp;</type>
        <definition>const std::unordered_map&lt;SrcType, std::string&gt;&amp; at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::HelpMessage</definition>
        <argsstring>() const</argsstring>
        <name>HelpMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="95" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_registry_1a1257f80d185b0344dfdee4b73ac9d60f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::HelpMessage</definition>
        <argsstring>(const SrcType &amp;key) const</argsstring>
        <name>HelpMessage</name>
        <param>
          <type>const SrcType &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="99" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="99" bodyend="105"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classat_1_1_registry_1a7e9da2d673211b016fdfec3d333095d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::Registry</definition>
        <argsstring>(const Registry &amp;)=delete</argsstring>
        <name>Registry</name>
        <param>
          <type>const <ref refid="classat_1_1_registry" kindref="compound">Registry</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_registry_1aa6d24f8056d28540965ebcd6b5c4e0f7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classat_1_1_registry" kindref="compound">Registry</ref> &amp;</type>
        <definition>Registry&amp; at::Registry&lt; SrcType, ObjectPtrType, Args &gt;::operator=</definition>
        <argsstring>(const Registry &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classat_1_1_registry" kindref="compound">Registry</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="113" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A template class that allows one to register classes by keys. </para>    </briefdescription>
    <detaileddescription>
<para>The keys are usually a std::string specifying the name, but can be anything that can be used in a std::map.</para><para>You should most likely not use the <ref refid="classat_1_1_registry" kindref="compound">Registry</ref> class explicitly, but use the helper macros below to declare specific registries as well as registering objects. </para>    </detaileddescription>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="47" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="47" bodyend="114"/>
    <listofallmembers>
      <member refid="classat_1_1_registry_1aee5b030870a97c096517421fc239a491" prot="public" virt="non-virtual"><scope>at::Registry</scope><name>Create</name></member>
      <member refid="classat_1_1_registry_1ad647ef5e32a7cf51069ee0af8c1d93be" prot="public" virt="non-virtual"><scope>at::Registry</scope><name>Creator</name></member>
      <member refid="classat_1_1_registry_1ac0653464c3c982aa6f440d8d820e4164" prot="public" virt="non-virtual"><scope>at::Registry</scope><name>Has</name></member>
      <member refid="classat_1_1_registry_1a47409b39f5f5b98145480f5451ca16b3" prot="private" virt="non-virtual"><scope>at::Registry</scope><name>help_message_</name></member>
      <member refid="classat_1_1_registry_1a386f50c409dd083e5723e0547831e914" prot="public" virt="non-virtual"><scope>at::Registry</scope><name>HelpMessage</name></member>
      <member refid="classat_1_1_registry_1a1257f80d185b0344dfdee4b73ac9d60f" prot="public" virt="non-virtual"><scope>at::Registry</scope><name>HelpMessage</name></member>
      <member refid="classat_1_1_registry_1a4e8566fd413f4bcf6c5424a97dec764c" prot="public" virt="non-virtual"><scope>at::Registry</scope><name>Keys</name></member>
      <member refid="classat_1_1_registry_1aa6d24f8056d28540965ebcd6b5c4e0f7" prot="private" virt="non-virtual"><scope>at::Registry</scope><name>operator=</name></member>
      <member refid="classat_1_1_registry_1a3ad1691d73d070b92aa60cd971417efc" prot="public" virt="non-virtual"><scope>at::Registry</scope><name>Register</name></member>
      <member refid="classat_1_1_registry_1a89232e11a35b593e199b2d9319989b8f" prot="public" virt="non-virtual"><scope>at::Registry</scope><name>Register</name></member>
      <member refid="classat_1_1_registry_1a963b3ccf8683f09e83e810771a4bdfe0" prot="private" virt="non-virtual"><scope>at::Registry</scope><name>register_mutex_</name></member>
      <member refid="classat_1_1_registry_1a6fd5b586d8a85559a77c07292f8069b6" prot="public" virt="non-virtual"><scope>at::Registry</scope><name>Registry</name></member>
      <member refid="classat_1_1_registry_1a7e9da2d673211b016fdfec3d333095d8" prot="private" virt="non-virtual"><scope>at::Registry</scope><name>Registry</name></member>
      <member refid="classat_1_1_registry_1a16cbc29126b834f93407f51048e5c8d5" prot="private" virt="non-virtual"><scope>at::Registry</scope><name>registry_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
