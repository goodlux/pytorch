<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="torch_2csrc_2api_2src_2nn_2modules_2rnn_8cpp" kind="file" language="C++">
    <compoundname>rnn.cpp</compoundname>
    <includes refid="rnn_8h" local="no">torch/nn/modules/rnn.h</includes>
    <includes refid="dropout_8h" local="no">torch/nn/modules/dropout.h</includes>
    <includes refid="torch_2csrc_2api_2include_2torch_2tensor_8h" local="no">torch/tensor.h</includes>
    <includes refid="tensor__list__view_8h" local="no">torch/tensor_list_view.h</includes>
    <includes refid="torch_2csrc_2api_2include_2torch_2utils_8h" local="no">torch/utils.h</includes>
    <includes refid="_error_8h" local="no">ATen/Error.h</includes>
    <includes refid="optional_8h" local="no">ATen/optional.h</includes>
    <includes local="no">array</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">tuple</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="18900">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="18901" relation="include">
        </childnode>
        <childnode refid="18902" relation="include">
        </childnode>
        <childnode refid="18903" relation="include">
        </childnode>
        <childnode refid="18904" relation="include">
        </childnode>
        <childnode refid="18905" relation="include">
        </childnode>
        <childnode refid="18906" relation="include">
        </childnode>
        <childnode refid="18907" relation="include">
        </childnode>
      </node>
      <node id="18954">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18955" relation="include">
        </childnode>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18905" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
      </node>
      <node id="18924">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18925" relation="include">
        </childnode>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="18906" relation="include">
        </childnode>
        <childnode refid="18905" relation="include">
        </childnode>
      </node>
      <node id="18923">
        <label>atomic</label>
      </node>
      <node id="18894">
        <label>torch/nn/modules/rnn.h</label>
        <link refid="rnn_8h_source"/>
        <childnode refid="18895" relation="include">
        </childnode>
        <childnode refid="18986" relation="include">
        </childnode>
        <childnode refid="18983" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18917" relation="include">
        </childnode>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18900" relation="include">
        </childnode>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18905" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
      </node>
      <node id="18981">
        <label>torch/csrc/autograd/generated/variable_factories.h</label>
      </node>
      <node id="18905">
        <label>functional</label>
      </node>
      <node id="18958">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18906" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18899" relation="include">
        </childnode>
      </node>
      <node id="18925">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="18926" relation="include">
        </childnode>
        <childnode refid="18899" relation="include">
        </childnode>
        <childnode refid="18935" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18940" relation="include">
        </childnode>
      </node>
      <node id="18936">
        <label>limits</label>
      </node>
      <node id="18916">
        <label>torch/tensor.h</label>
        <link refid="torch_2csrc_2api_2include_2torch_2tensor_8h_source"/>
        <childnode refid="18917" relation="include">
        </childnode>
        <childnode refid="18981" relation="include">
        </childnode>
        <childnode refid="18982" relation="include">
        </childnode>
      </node>
      <node id="18943">
        <label>assert.h</label>
      </node>
      <node id="18948">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="18899" relation="include">
        </childnode>
        <childnode refid="18926" relation="include">
        </childnode>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18947" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
        <childnode refid="18911" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
      </node>
      <node id="18932">
        <label>iterator</label>
      </node>
      <node id="18942">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
        <childnode refid="18907" relation="include">
        </childnode>
        <childnode refid="18906" relation="include">
        </childnode>
        <childnode refid="18901" relation="include">
        </childnode>
        <childnode refid="18899" relation="include">
        </childnode>
        <childnode refid="18935" relation="include">
        </childnode>
        <childnode refid="18925" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
      </node>
      <node id="18961">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="18912">
        <label>cstdint</label>
      </node>
      <node id="18969">
        <label>ATen/Deprecated.h</label>
        <link refid="_deprecated_8h_source"/>
      </node>
      <node id="18944">
        <label>stdint.h</label>
      </node>
      <node id="18988">
        <label>torch/utils.h</label>
        <link refid="torch_2csrc_2api_2include_2torch_2utils_8h_source"/>
        <childnode refid="18989" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
      </node>
      <node id="18980">
        <label>ATen/CUDAGuard.h</label>
        <link refid="_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="18982">
        <label>torch/csrc/autograd/variable.h</label>
      </node>
      <node id="18937">
        <label>cmath</label>
      </node>
      <node id="18904">
        <label>cassert</label>
      </node>
      <node id="18953">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="18899" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
        <childnode refid="18959" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18957" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
      </node>
      <node id="18939">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="18899" relation="include">
        </childnode>
        <childnode refid="18931" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
      </node>
      <node id="18907">
        <label>stdexcept</label>
      </node>
      <node id="18975">
        <label>ATen/TensorOperators.h</label>
        <link refid="_tensor_operators_8h_source"/>
        <childnode refid="18942" relation="include">
        </childnode>
        <childnode refid="18962" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18906" relation="include">
        </childnode>
        <childnode refid="18907" relation="include">
        </childnode>
      </node>
      <node id="18950">
        <label>numeric</label>
      </node>
      <node id="18946">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="18923" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18922" relation="include">
        </childnode>
        <childnode refid="18925" relation="include">
        </childnode>
        <childnode refid="18900" relation="include">
        </childnode>
      </node>
      <node id="18935">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="18899" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
        <childnode refid="18906" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18907" relation="include">
        </childnode>
        <childnode refid="18901" relation="include">
        </childnode>
        <childnode refid="18937" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
      </node>
      <node id="18922">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="18923" relation="include">
        </childnode>
      </node>
      <node id="18945">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="18946" relation="include">
        </childnode>
        <childnode refid="18947" relation="include">
        </childnode>
      </node>
      <node id="18906">
        <label>string</label>
      </node>
      <node id="18978">
        <label>ATen/DimVector.h</label>
        <link refid="_dim_vector_8h_source"/>
        <childnode refid="18927" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
      </node>
      <node id="18979">
        <label>ATen/OptionsGuard.h</label>
        <link refid="_options_guard_8h_source"/>
        <childnode refid="18924" relation="include">
        </childnode>
        <childnode refid="18965" relation="include">
        </childnode>
        <childnode refid="18925" relation="include">
        </childnode>
        <childnode refid="18972" relation="include">
        </childnode>
        <childnode refid="18900" relation="include">
        </childnode>
      </node>
      <node id="18989">
        <label>torch/csrc/autograd/grad_mode.h</label>
      </node>
      <node id="18985">
        <label>map</label>
      </node>
      <node id="18991">
        <label>unordered_set</label>
      </node>
      <node id="18919">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18922" relation="include">
        </childnode>
        <childnode refid="18924" relation="include">
        </childnode>
        <childnode refid="18941" relation="include">
        </childnode>
      </node>
      <node id="18915">
        <label>torch/nn/cursor.h</label>
        <link refid="cursor_8h_source"/>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
        <childnode refid="18906" relation="include">
        </childnode>
        <childnode refid="18902" relation="include">
        </childnode>
      </node>
      <node id="18959">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="18971">
        <label>ATen/DeviceGuard.h</label>
        <link refid="_device_guard_8h_source"/>
        <childnode refid="18924" relation="include">
        </childnode>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18925" relation="include">
        </childnode>
        <childnode refid="18962" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="18909">
        <label>exception</label>
      </node>
      <node id="18921">
        <label>stddef.h</label>
      </node>
      <node id="18947">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="18946" relation="include">
        </childnode>
      </node>
      <node id="18977">
        <label>ATen/Dispatch.h</label>
        <link refid="_dispatch_8h_source"/>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18935" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
      </node>
      <node id="18928">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="18960">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="18942" relation="include">
        </childnode>
        <childnode refid="18961" relation="include">
        </childnode>
      </node>
      <node id="18910">
        <label>ostream</label>
      </node>
      <node id="18918">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="18899" relation="include">
        </childnode>
      </node>
      <node id="18951">
        <label>ATen/Type.h</label>
      </node>
      <node id="18926">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18927" relation="include">
        </childnode>
        <childnode refid="18934" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
      </node>
      <node id="18966">
        <label>ATen/TensorGeometry.h</label>
        <link refid="_tensor_geometry_8h_source"/>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18967" relation="include">
        </childnode>
      </node>
      <node id="18983">
        <label>torch/nn/pimpl.h</label>
        <link refid="pimpl_8h_source"/>
        <childnode refid="18984" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18902" relation="include">
        </childnode>
        <childnode refid="18901" relation="include">
        </childnode>
      </node>
      <node id="18963">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="18987">
        <label>torch/tensor_list_view.h</label>
        <link refid="tensor__list__view_8h_source"/>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18926" relation="include">
        </childnode>
        <childnode refid="18962" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
        <childnode refid="18934" relation="include">
        </childnode>
        <childnode refid="18903" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
      </node>
      <node id="18899">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="18896">
        <label>torch/nn/module.h</label>
        <link refid="module_8h_source"/>
        <childnode refid="18897" relation="include">
        </childnode>
        <childnode refid="18915" relation="include">
        </childnode>
        <childnode refid="18983" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18917" relation="include">
        </childnode>
        <childnode refid="18900" relation="include">
        </childnode>
        <childnode refid="18985" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18906" relation="include">
        </childnode>
        <childnode refid="18902" relation="include">
        </childnode>
        <childnode refid="18913" relation="include">
        </childnode>
      </node>
      <node id="18967">
        <label>ATen/WrapDimUtils.h</label>
        <link refid="_wrap_dim_utils_8h_source"/>
        <childnode refid="18946" relation="include">
        </childnode>
        <childnode refid="18911" relation="include">
        </childnode>
      </node>
      <node id="18964">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
        <childnode refid="18925" relation="include">
        </childnode>
      </node>
      <node id="18949">
        <label>typeinfo</label>
      </node>
      <node id="18956">
        <label>cstdio</label>
      </node>
      <node id="18990">
        <label>tuple</label>
      </node>
      <node id="18984">
        <label>torch/csrc/utils/variadic.h</label>
      </node>
      <node id="18941">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18899" relation="include">
        </childnode>
      </node>
      <node id="18897">
        <label>torch/detail/ordered_dict.h</label>
        <link refid="ordered__dict_8h_source"/>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18905" relation="include">
        </childnode>
        <childnode refid="18903" relation="include">
        </childnode>
        <childnode refid="18906" relation="include">
        </childnode>
        <childnode refid="18913" relation="include">
        </childnode>
        <childnode refid="18901" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
      </node>
      <node id="18914">
        <label>vector</label>
      </node>
      <node id="18976">
        <label>ATen/TensorMethods.h</label>
      </node>
      <node id="18973">
        <label>THNN/Reduction.h</label>
      </node>
      <node id="18933">
        <label>new</label>
      </node>
      <node id="18901">
        <label>utility</label>
      </node>
      <node id="18934">
        <label>array</label>
      </node>
      <node id="18911">
        <label>sstream</label>
      </node>
      <node id="18968">
        <label>ATen/Functions.h</label>
        <link refid="build_2aten_2src_2_a_ten_2_functions_8h_source"/>
        <childnode refid="18942" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18962" relation="include">
        </childnode>
        <childnode refid="18960" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18969" relation="include">
        </childnode>
        <childnode refid="18970" relation="include">
        </childnode>
        <childnode refid="18971" relation="include">
        </childnode>
        <childnode refid="18972" relation="include">
        </childnode>
        <childnode refid="18973" relation="include">
        </childnode>
      </node>
      <node id="18970">
        <label>ATen/NativeFunctions.h</label>
      </node>
      <node id="18938">
        <label>iosfwd</label>
      </node>
      <node id="18930">
        <label>cstdlib</label>
      </node>
      <node id="18986">
        <label>torch/nn/modules/dropout.h</label>
        <link refid="dropout_8h_source"/>
        <childnode refid="18895" relation="include">
        </childnode>
        <childnode refid="18983" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
      </node>
      <node id="18940">
        <label>iostream</label>
      </node>
      <node id="18908">
        <label>cstddef</label>
      </node>
      <node id="18913">
        <label>unordered_map</label>
      </node>
      <node id="18893">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/modules/rnn.cpp</label>
        <link refid="torch_2csrc_2api_2src_2nn_2modules_2rnn_8cpp"/>
        <childnode refid="18894" relation="include">
        </childnode>
        <childnode refid="18986" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18987" relation="include">
        </childnode>
        <childnode refid="18988" relation="include">
        </childnode>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18900" relation="include">
        </childnode>
        <childnode refid="18934" relation="include">
        </childnode>
        <childnode refid="18937" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18905" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18906" relation="include">
        </childnode>
        <childnode refid="18990" relation="include">
        </childnode>
        <childnode refid="18991" relation="include">
        </childnode>
        <childnode refid="18901" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
      </node>
      <node id="18957">
        <label>mutex</label>
      </node>
      <node id="18895">
        <label>torch/nn/cloneable.h</label>
        <link refid="cloneable_8h_source"/>
        <childnode refid="18896" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18979" relation="include">
        </childnode>
        <childnode refid="18972" relation="include">
        </childnode>
        <childnode refid="18900" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18901" relation="include">
        </childnode>
      </node>
      <node id="18917">
        <label>ATen/ATen.h</label>
        <link refid="_a_ten_8h_source"/>
        <childnode refid="18899" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18960" relation="include">
        </childnode>
        <childnode refid="18962" relation="include">
        </childnode>
        <childnode refid="18924" relation="include">
        </childnode>
        <childnode refid="18966" relation="include">
        </childnode>
        <childnode refid="18968" relation="include">
        </childnode>
        <childnode refid="18974" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
        <childnode refid="18976" relation="include">
        </childnode>
        <childnode refid="18977" relation="include">
        </childnode>
        <childnode refid="18978" relation="include">
        </childnode>
        <childnode refid="18971" relation="include">
        </childnode>
        <childnode refid="18972" relation="include">
        </childnode>
        <childnode refid="18965" relation="include">
        </childnode>
        <childnode refid="18979" relation="include">
        </childnode>
        <childnode refid="18980" relation="include">
        </childnode>
      </node>
      <node id="18955">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="18929" relation="include">
        </childnode>
        <childnode refid="18956" relation="include">
        </childnode>
        <childnode refid="18930" relation="include">
        </childnode>
        <childnode refid="18905" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18957" relation="include">
        </childnode>
        <childnode refid="18913" relation="include">
        </childnode>
        <childnode refid="18906" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
        <childnode refid="18958" relation="include">
        </childnode>
        <childnode refid="18899" relation="include">
        </childnode>
      </node>
      <node id="18898">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="18899" relation="include">
        </childnode>
        <childnode refid="18900" relation="include">
        </childnode>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18909" relation="include">
        </childnode>
        <childnode refid="18910" relation="include">
        </childnode>
        <childnode refid="18911" relation="include">
        </childnode>
        <childnode refid="18906" relation="include">
        </childnode>
      </node>
      <node id="18972">
        <label>ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18924" relation="include">
        </childnode>
        <childnode refid="18971" relation="include">
        </childnode>
        <childnode refid="18965" relation="include">
        </childnode>
        <childnode refid="18925" relation="include">
        </childnode>
        <childnode refid="18962" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="18901" relation="include">
        </childnode>
      </node>
      <node id="18962">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
        <childnode refid="18925" relation="include">
        </childnode>
        <childnode refid="18963" relation="include">
        </childnode>
        <childnode refid="18960" relation="include">
        </childnode>
        <childnode refid="18964" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18946" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18924" relation="include">
        </childnode>
        <childnode refid="18965" relation="include">
        </childnode>
        <childnode refid="18900" relation="include">
        </childnode>
      </node>
      <node id="18902">
        <label>type_traits</label>
      </node>
      <node id="18965">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="18925" relation="include">
        </childnode>
        <childnode refid="18898" relation="include">
        </childnode>
        <childnode refid="18940" relation="include">
        </childnode>
      </node>
      <node id="18927">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="18928" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
        <childnode refid="18904" relation="include">
        </childnode>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18930" relation="include">
        </childnode>
        <childnode refid="18931" relation="include">
        </childnode>
        <childnode refid="18903" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18933" relation="include">
        </childnode>
        <childnode refid="18902" relation="include">
        </childnode>
        <childnode refid="18901" relation="include">
        </childnode>
        <childnode refid="18899" relation="include">
        </childnode>
      </node>
      <node id="18929">
        <label>algorithm</label>
      </node>
      <node id="18952">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="18944" relation="include">
        </childnode>
      </node>
      <node id="18931">
        <label>cstring</label>
      </node>
      <node id="18920">
        <label>memory</label>
      </node>
      <node id="18903">
        <label>initializer_list</label>
      </node>
      <node id="18974">
        <label>ATen/Formatting.h</label>
        <link refid="_formatting_8h_source"/>
        <childnode refid="18940" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetorch">torch</innernamespace>
    <innernamespace refid="namespacetorch_1_1nn">torch::nn</innernamespace>
    <innernamespace refid="namespacetorch_1_1nn_1_1detail">torch::nn::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;torch/nn/modules/rnn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/nn/modules/dropout.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/tensor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/tensor_list_view.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/Error.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/optional.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetorch" kindref="compound">torch</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">nn<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal">Tensor<sp/>linear(Tensor<sp/>x,<sp/>Tensor<sp/>w,<sp/>Tensor<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x.ndimension()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>b.defined())<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fused<sp/>op<sp/>is<sp/>marginally<sp/>faster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(x.size(1)<sp/>==<sp/>w.size(1));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::addmm(b,<sp/>x,<sp/>w.t());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output<sp/>=<sp/>x.matmul(w.t());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b.defined())<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>b;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>output;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~<sp/>RNNOptionsBase<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal">RNNOptionsBase::RNNOptionsBase(int64_t<sp/>input_size,<sp/>int64_t<sp/>hidden_size)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>input_size_(input_size),<sp/>hidden_size_(hidden_size)<sp/>{}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<sp/>RNNImplBase<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">RNNImplBase&lt;Derived&gt;::RNNImplBase(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>RNNOptionsBase<sp/>options_,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classat_1_1optional" kindref="compound">at::optional&lt;CuDNNMode&gt;</ref><sp/>cudnn_mode,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>number_of_gates,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_cell_state)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>options(options_),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dropout(nullptr),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>number_of_gates_(number_of_gates),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>has_cell_state_(has_cell_state),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cudnn_mode_(cudnn_mode)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RNNImplBase&lt;Derived&gt;::reset()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.dropout_<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>dropout<sp/>=<sp/>Dropout(options.dropout_);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>w_ih.resize(options.layers_);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>w_hh.resize(options.layers_);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>b_ih.resize(options.layers_);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>b_hh.resize(options.layers_);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>gate_size<sp/>=<sp/>options.hidden_size_<sp/>*<sp/>number_of_gates_;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>layer<sp/>=<sp/>0;<sp/>layer<sp/>&lt;<sp/>options.layers_;<sp/>++layer)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>input_size<sp/>=</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(layer<sp/>==<sp/>0)<sp/>?<sp/>options.input_size_<sp/>:<sp/>options.hidden_size_;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>w_ih[layer]<sp/>=<sp/>this-&gt;register_parameter(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;weight_ih_l&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(layer),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::empty({gate_size,<sp/>input_size}));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>w_hh[layer]<sp/>=<sp/>this-&gt;register_parameter(</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;weight_hh_l&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(layer),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::empty({gate_size,<sp/>options.hidden_size_}));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.with_bias_)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b_ih[layer]<sp/>=<sp/>this-&gt;register_parameter(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bias_ih_l&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(layer),<sp/>torch::empty({gate_size}));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b_hh[layer]<sp/>=<sp/>this-&gt;register_parameter(</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bias_hh_l&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(layer),<sp/>torch::empty({gate_size}));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stdv<sp/>=<sp/>1.0<sp/>/<sp/>std::sqrt(options.hidden_size_);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p<sp/>:<sp/>this-&gt;parameters())<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;data().uniform_(-stdv,<sp/>stdv);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">RNNOutput<sp/>RNNImplBase&lt;Derived&gt;::forward(Tensor<sp/>input,<sp/>Tensor<sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_cudnn(</highlight><highlight class="comment">/*sample=*/</highlight><highlight class="normal">input))<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CUDNN_forward(input,<sp/>state);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>autograd_forward(input,<sp/>state);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">std::vector&lt;Tensor&gt;<sp/>RNNImplBase&lt;Derived&gt;::flat_weights()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>std::vector&lt;Tensor&gt;<sp/>flat;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>layer<sp/>=<sp/>0;<sp/>layer<sp/>&lt;<sp/>options.layers_;<sp/>layer++)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>flat.push_back(w_ih[layer]);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>flat.push_back(w_hh[layer]);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.with_bias_)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flat.push_back(b_ih[layer]);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flat.push_back(b_hh[layer]);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flat;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RNNImplBase&lt;Derived&gt;::use_cudnn(Tensor<sp/>sample)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cudnn_mode_.has_value()<sp/>&amp;&amp;<sp/>sample.is_cuda()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>torch::cudnn_is_acceptable(sample);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">Tensor<sp/>RNNImplBase&lt;Derived&gt;::create_dropout_state(Tensor<sp/>input)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>dropout_seed<sp/>=</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>torch::ones({},<sp/>torch::kInt64).random_().toCLong();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.dropout_<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structat_1_1_device_guard" kindref="compound">torch::DeviceGuard</ref><sp/>guard(input.device());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::_cudnn_init_dropout_state(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.type().toScalarType(torch::kUInt8),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.dropout_,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;is_training(),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dropout_seed);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::empty({},<sp/>input.options());</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">RNNOutput<sp/>RNNImplBase&lt;Derived&gt;::autograd_forward(Tensor<sp/>input,<sp/>Tensor<sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>std::vector&lt;Tensor&gt;<sp/>new_state;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>has_hidden<sp/>=<sp/>state.defined();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layer_dimension<sp/>=<sp/>has_hidden<sp/>?<sp/>state.ndimension()<sp/>-<sp/>3<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>layer<sp/>=<sp/>0;<sp/>layer<sp/>&lt;<sp/>options.layers_;<sp/>layer++)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>new_state.push_back(</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_hidden<sp/>?<sp/>state.select(layer_dimension,<sp/>layer)<sp/>:<sp/>Tensor());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output<sp/>=<sp/>torch::zeros(</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{input.size(0),<sp/>input.size(1),<sp/>options.hidden_size_},<sp/>input.options());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>input.size(0);<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>input.select(0,<sp/>t);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>options.layers_;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cell_forward()<sp/>returns<sp/>a<sp/>stacked<sp/>tensor<sp/>of<sp/>one<sp/>or<sp/>more<sp/>cell<sp/>states.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>layer_output<sp/>=<sp/>cell_forward(x,<sp/>new_state[i],<sp/>i);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>multiple<sp/>cell<sp/>states,<sp/>keep<sp/>all.<sp/>If<sp/>there<sp/>is<sp/>only<sp/>one,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>dimension<sp/>will<sp/>be<sp/>1,<sp/>so<sp/>`.squeeze(0)`<sp/>will<sp/>unpack<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_state[i]<sp/>=<sp/>layer_output.squeeze(0);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>should<sp/>always<sp/>be<sp/>the<sp/>hidden<sp/>cell<sp/>state<sp/>h,<sp/>assumed<sp/>to<sp/>be<sp/>the<sp/>zero-th.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>layer_output[0];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output.select(0,<sp/>t).copy_(x);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.dropout_<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>i<sp/>!=<sp/>options.layers_<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>dropout-&gt;forward(x);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>state_output<sp/>=<sp/>torch::stack(TensorListView(new_state));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_cell_state_)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>state_output.transpose_(0,<sp/>1);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{output,<sp/>state_output};</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RNNImplBase&lt;Derived&gt;::flatten_parameters_for_cudnn()<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>data_ptrs_.clear();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>any_parameter<sp/>=<sp/>w_ih.at(0);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!use_cudnn(</highlight><highlight class="comment">/*sample=*/</highlight><highlight class="normal">w_ih.at(0)))<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>std::unordered_set&lt;void*&gt;<sp/>unique_data_ptrs;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>params<sp/>=<sp/>this-&gt;parameters();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p<sp/>:<sp/>params)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_data_ptrs.insert(p-&gt;data().data_ptr());</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>PyTorch<sp/>says:<sp/>If<sp/>any<sp/>parameters<sp/>alias,<sp/>we<sp/>fall<sp/>back<sp/>to<sp/>the<sp/>slower,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copying<sp/>code<sp/>path.<sp/>This<sp/>is<sp/>a<sp/>sufficient<sp/>check,<sp/>because<sp/>overlapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>buffers<sp/>that<sp/>don&apos;t<sp/>completely<sp/>alias<sp/>would<sp/>break<sp/>the<sp/>assumptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>uniqueness<sp/>check<sp/>in<sp/>Module.named_parameters().<sp/>But<sp/>I&apos;m<sp/>not<sp/>sure<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>case<sp/>for<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unique_data_ptrs.size()<sp/>!=<sp/>params.size())<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>NoGradGuard<sp/>guard;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>flat_weights_<sp/>=<sp/>torch::_cudnn_rnn_flatten_weight(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TensorListView(flat_weights()),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*weight_stride=*/</highlight><highlight class="normal">options.with_bias_<sp/>?<sp/>4<sp/>:<sp/>2,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.input_size_,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int64_t&gt;(*cudnn_mode_),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.hidden_size_,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.layers_,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*batch_first=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*bidirectional=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p<sp/>:<sp/>params)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>data_ptrs_.emplace_back(p-&gt;data().data_ptr());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">RNNOutput<sp/>RNNImplBase&lt;Derived&gt;::CUDNN_forward(Tensor<sp/>input,<sp/>Tensor<sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>Tensor<sp/>hx,<sp/>cx;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.defined())<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_cell_state_)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hx<sp/>=<sp/>state[0];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>state[1];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hx<sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>hx<sp/>=<sp/>torch::zeros(</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{options.layers_,<sp/>input.size(1),<sp/>options.hidden_size_},</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.options());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_cell_state_)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cx<sp/>=<sp/>torch::zeros(</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{options.layers_,<sp/>input.size(1),<sp/>options.hidden_size_},</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.options());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>std::vector&lt;void*&gt;<sp/>weight_data_ptrs;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p<sp/>:<sp/>this-&gt;parameters())<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>weight_data_ptrs.emplace_back(p-&gt;data().data_ptr());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>AT_CHECK(</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weight_data_ptrs<sp/>==<sp/>data_ptrs_,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Parameters<sp/>are<sp/>unflattened!<sp/>Code<sp/>path<sp/>might<sp/>be<sp/>super<sp/>slow.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>call<sp/>flatten_parameters_for_cudnn()<sp/>when<sp/>you<sp/>muck<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;around<sp/>with<sp/>storages!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cudnn_output<sp/>=<sp/>std::tuple&lt;output,<sp/>hy,<sp/>cy,<sp/>reserve,<sp/>new_weight_buf&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>auto<sp/>cudnn_output<sp/>=<sp/><ref refid="namespacetorch" kindref="compound">torch</ref>::_cudnn_rnn(</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*input=*/</highlight><highlight class="normal">input,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*weight=*/</highlight><highlight class="normal">TensorListView(flat_weights()),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*weight_stride0=*/</highlight><highlight class="normal">options.with_bias_<sp/>?<sp/>4<sp/>:<sp/>2,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*weight_buf=*/</highlight><highlight class="normal">flat_weights_,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*hx=*/</highlight><highlight class="normal">hx,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*cx=*/</highlight><highlight class="normal">cx,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*mode=*/</highlight><highlight class="normal">static_cast&lt;int64_t&gt;(*cudnn_mode_),</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*hidden_size=*/</highlight><highlight class="normal">options.hidden_size_,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*num_layers=*/</highlight><highlight class="normal">options.layers_,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*batch_first=*/</highlight><highlight class="normal">false,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*dropout=*/</highlight><highlight class="normal">options.dropout_,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*train=*/</highlight><highlight class="normal">this-&gt;is_training(),</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*bidirectional=*/</highlight><highlight class="normal">false,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*batch_sizes=*/</highlight><highlight class="normal">{},</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*dropout_state=*/</highlight><highlight class="normal">create_dropout_state(input));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>Tensor<sp/>hidden_output<sp/>=<sp/>std::get&lt;1&gt;(cudnn_output);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_cell_state_)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cy<sp/>=<sp/>std::get&lt;2&gt;(cudnn_output);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>hidden_output<sp/>=<sp/>torch::stack(TensorListView({hidden_output,<sp/>cy}));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>Tensor<sp/>output<sp/>=<sp/>std::get&lt;0&gt;(cudnn_output);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{output,<sp/>hidden_output};</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RNNImplBase&lt;Derived&gt;::to(</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structat_1_1_device" kindref="compound">torch::Device</ref><sp/>device,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>torch::Dtype<sp/>dtype,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>non_blocking)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_module_1a9335a64808dda0178374d0818403f88f" kindref="member">nn::Module::to</ref>(device,<sp/>dtype,<sp/>non_blocking);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>flatten_parameters_for_cudnn();</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RNNImplBase&lt;Derived&gt;::to(torch::Dtype<sp/>dtype,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>non_blocking)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_module_1a9335a64808dda0178374d0818403f88f" kindref="member">nn::Module::to</ref>(dtype,<sp/>non_blocking);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>flatten_parameters_for_cudnn();</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RNNImplBase&lt;Derived&gt;::to(<ref refid="structat_1_1_device" kindref="compound">torch::Device</ref><sp/>device,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>non_blocking)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_module_1a9335a64808dda0178374d0818403f88f" kindref="member">nn::Module::to</ref>(device,<sp/>non_blocking);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>flatten_parameters_for_cudnn();</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RNNImplBase&lt;LSTMImpl&gt;;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RNNImplBase&lt;GRUImpl&gt;;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RNNImplBase&lt;RNNImpl&gt;;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<sp/>RNN<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">RNNOptions::RNNOptions(int64_t<sp/>input_size,<sp/>int64_t<sp/>hidden_size)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>input_size_(input_size),<sp/>hidden_size_(hidden_size)<sp/>{}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">RNNOptions&amp;<sp/>RNNOptions::tanh()<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>activation(RNNActivation::Tanh);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">RNNOptions&amp;<sp/>RNNOptions::relu()<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>activation(RNNActivation::ReLU);</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">RNNImpl::RNNImpl(RNNOptions<sp/>options)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>detail::RNNImplBase&lt;RNNImpl&gt;(</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::RNNOptionsBase(options.input_size_,<sp/>options.hidden_size_)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.layers(options.layers_)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.with_bias(options.with_bias_)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.dropout(options.dropout_),</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*cudnn_mode=*/</highlight><highlight class="normal">static_cast&lt;CuDNNMode&gt;(options.activation_)),</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>options(options)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(options.activation_)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RNNActivation::ReLU:<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>activation_function_<sp/>=<sp/>torch::relu;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RNNActivation::Tanh:<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>activation_function_<sp/>=<sp/>torch::tanh;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">Tensor<sp/>RNNImpl::cell_forward(Tensor<sp/>input,<sp/>Tensor<sp/>state,<sp/>int64_t<sp/>layer)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hx<sp/>=<sp/>state.defined()</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>state</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>torch::zeros({input.size(0),<sp/>options.hidden_size_},<sp/>input.options());</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>linear(input,<sp/>w_ih[layer],<sp/>b_ih[layer])<sp/>+</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linear(hx,<sp/>w_hh[layer],<sp/>b_hh[layer]);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::stack(activation_function_(h));</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<sp/>LSTM<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">LSTMImpl::LSTMImpl(LSTMOptions<sp/>options)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>detail::RNNImplBase&lt;LSTMImpl&gt;(</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*cudnn_mode=*/</highlight><highlight class="normal">CuDNNMode::LSTM,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*number_of_gates=*/</highlight><highlight class="normal">4,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*has_cell_state=*/</highlight><highlight class="normal">true)<sp/>{}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal">Tensor<sp/>LSTMImpl::cell_forward(Tensor<sp/>input,<sp/>Tensor<sp/>state,<sp/>int64_t<sp/>layer)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hid<sp/>=<sp/>state.defined()</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>state</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>torch::zeros({2,<sp/>input.size(0),<sp/>options.hidden_size_},<sp/>input.options());</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hx<sp/>=<sp/>hid[0];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cx<sp/>=<sp/>hid[1];</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gates<sp/>=<sp/>linear(input,<sp/>w_ih[layer],<sp/>b_ih[layer])<sp/>+</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linear(hx,<sp/>w_hh[layer],<sp/>b_hh[layer]);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>chunked<sp/>=<sp/>gates.chunk(4,<sp/>1);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>in_gate<sp/>=<sp/>chunked[0].sigmoid();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>forget_gate<sp/>=<sp/>chunked[1].sigmoid();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell_gate<sp/>=<sp/>chunked[2].tanh();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out_gate<sp/>=<sp/>chunked[3].sigmoid();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cy<sp/>=<sp/>(forget_gate<sp/>*<sp/>cx)<sp/>+<sp/>(in_gate<sp/>*<sp/>cell_gate);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hy<sp/>=<sp/>out_gate<sp/>*<sp/>cy.tanh();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::stack(TensorListView{hy,<sp/>cy},<sp/>0);</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<sp/>GRU<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">GRUImpl::GRUImpl(GRUOptions<sp/>options)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>detail::RNNImplBase&lt;GRUImpl&gt;(</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*cudnn_mode=*/</highlight><highlight class="normal">CuDNNMode::GRU,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*number_of_gates=*/</highlight><highlight class="normal">3)<sp/>{}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">Tensor<sp/>GRUImpl::cell_forward(Tensor<sp/>input,<sp/>Tensor<sp/>state,<sp/>int64_t<sp/>layer)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hx<sp/>=<sp/>state.defined()</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>state</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>torch::zeros({input.size(0),<sp/>options.hidden_size_},<sp/>input.options());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gi<sp/>=<sp/>linear(input,<sp/>w_ih[layer],<sp/>b_ih[layer]);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gh<sp/>=<sp/>linear(input,<sp/>w_hh[layer],<sp/>b_hh[layer]);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>gic<sp/>=<sp/>gi.chunk(3,<sp/>1);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ghc<sp/>=<sp/>gh.chunk(3,<sp/>1);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reset_gate<sp/>=<sp/>(gic[0]<sp/>+<sp/>ghc[0]).sigmoid_();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input_gate<sp/>=<sp/>(gic[1]<sp/>+<sp/>ghc[1]).sigmoid_();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_gate<sp/>=<sp/>(gic[2]<sp/>+<sp/>reset_gate<sp/>*<sp/>ghc[2]).tanh_();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hy<sp/>=<sp/>new_gate<sp/>+<sp/>input_gate<sp/>*<sp/>(hx<sp/>-<sp/>new_gate);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::stack(TensorListView(hy));</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>torch</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/modules/rnn.cpp"/>
  </compounddef>
</doxygen>
