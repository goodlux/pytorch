<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="init_8cpp" kind="file" language="C++">
    <compoundname>init.cpp</compoundname>
    <includes refid="init_8h" local="no">torch/nn/init.h</includes>
    <includes refid="torch_2csrc_2api_2include_2torch_2tensor_8h" local="no">torch/tensor.h</includes>
    <includes refid="torch_2csrc_2api_2include_2torch_2utils_8h" local="no">torch/utils.h</includes>
    <includes refid="_a_ten_8h" local="no">ATen/ATen.h</includes>
    <includes refid="_error_8h" local="no">ATen/Error.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">tuple</includes>
    <incdepgraph>
      <node id="17730">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17733" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17737" relation="include">
        </childnode>
      </node>
      <node id="17776">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="17726" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17774" relation="include">
        </childnode>
        <childnode refid="17777" relation="include">
        </childnode>
        <childnode refid="17738" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
      </node>
      <node id="17744">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17745" relation="include">
        </childnode>
        <childnode refid="17738" relation="include">
        </childnode>
        <childnode refid="17760" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
      </node>
      <node id="17743">
        <label>atomic</label>
      </node>
      <node id="17804">
        <label>torch/csrc/autograd/generated/variable_factories.h</label>
      </node>
      <node id="17735">
        <label>functional</label>
      </node>
      <node id="17781">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="17738" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17771" relation="include">
        </childnode>
        <childnode refid="17724" relation="include">
        </childnode>
      </node>
      <node id="17745">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="17746" relation="include">
        </childnode>
        <childnode refid="17724" relation="include">
        </childnode>
        <childnode refid="17756" relation="include">
        </childnode>
        <childnode refid="17758" relation="include">
        </childnode>
        <childnode refid="17762" relation="include">
        </childnode>
      </node>
      <node id="17757">
        <label>limits</label>
      </node>
      <node id="17720">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/init.cpp</label>
        <link refid="init_8cpp"/>
        <childnode refid="17721" relation="include">
        </childnode>
        <childnode refid="17722" relation="include">
        </childnode>
        <childnode refid="17806" relation="include">
        </childnode>
        <childnode refid="17723" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17749" relation="include">
        </childnode>
        <childnode refid="17759" relation="include">
        </childnode>
        <childnode refid="17738" relation="include">
        </childnode>
        <childnode refid="17808" relation="include">
        </childnode>
      </node>
      <node id="17722">
        <label>torch/tensor.h</label>
        <link refid="torch_2csrc_2api_2include_2torch_2tensor_8h_source"/>
        <childnode refid="17723" relation="include">
        </childnode>
        <childnode refid="17804" relation="include">
        </childnode>
        <childnode refid="17805" relation="include">
        </childnode>
      </node>
      <node id="17765">
        <label>assert.h</label>
      </node>
      <node id="17770">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="17724" relation="include">
        </childnode>
        <childnode refid="17746" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17769" relation="include">
        </childnode>
        <childnode refid="17749" relation="include">
        </childnode>
        <childnode refid="17741" relation="include">
        </childnode>
        <childnode refid="17771" relation="include">
        </childnode>
        <childnode refid="17772" relation="include">
        </childnode>
      </node>
      <node id="17752">
        <label>iterator</label>
      </node>
      <node id="17764">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="17765" relation="include">
        </childnode>
        <childnode refid="17766" relation="include">
        </childnode>
        <childnode refid="17737" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17724" relation="include">
        </childnode>
        <childnode refid="17756" relation="include">
        </childnode>
        <childnode refid="17745" relation="include">
        </childnode>
        <childnode refid="17767" relation="include">
        </childnode>
        <childnode refid="17770" relation="include">
        </childnode>
      </node>
      <node id="17784">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="17758">
        <label>cstdint</label>
      </node>
      <node id="17792">
        <label>ATen/Deprecated.h</label>
        <link refid="_deprecated_8h_source"/>
      </node>
      <node id="17766">
        <label>stdint.h</label>
      </node>
      <node id="17806">
        <label>torch/utils.h</label>
        <link refid="torch_2csrc_2api_2include_2torch_2utils_8h_source"/>
        <childnode refid="17807" relation="include">
        </childnode>
        <childnode refid="17758" relation="include">
        </childnode>
      </node>
      <node id="17803">
        <label>ATen/CUDAGuard.h</label>
        <link refid="_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="17805">
        <label>torch/csrc/autograd/variable.h</label>
      </node>
      <node id="17759">
        <label>cmath</label>
      </node>
      <node id="17734">
        <label>cassert</label>
      </node>
      <node id="17775">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="17724" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17774" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
        <childnode refid="17770" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17776" relation="include">
        </childnode>
        <childnode refid="17782" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17779" relation="include">
        </childnode>
        <childnode refid="17758" relation="include">
        </childnode>
      </node>
      <node id="17761">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="17724" relation="include">
        </childnode>
        <childnode refid="17751" relation="include">
        </childnode>
        <childnode refid="17757" relation="include">
        </childnode>
      </node>
      <node id="17737">
        <label>stdexcept</label>
      </node>
      <node id="17798">
        <label>ATen/TensorOperators.h</label>
        <link refid="_tensor_operators_8h_source"/>
        <childnode refid="17764" relation="include">
        </childnode>
        <childnode refid="17785" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17737" relation="include">
        </childnode>
      </node>
      <node id="17772">
        <label>numeric</label>
      </node>
      <node id="17768">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="17743" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17742" relation="include">
        </childnode>
        <childnode refid="17745" relation="include">
        </childnode>
        <childnode refid="17730" relation="include">
        </childnode>
      </node>
      <node id="17756">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="17724" relation="include">
        </childnode>
        <childnode refid="17757" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17758" relation="include">
        </childnode>
        <childnode refid="17737" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17759" relation="include">
        </childnode>
        <childnode refid="17760" relation="include">
        </childnode>
        <childnode refid="17761" relation="include">
        </childnode>
      </node>
      <node id="17742">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="17743" relation="include">
        </childnode>
      </node>
      <node id="17767">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="17768" relation="include">
        </childnode>
        <childnode refid="17769" relation="include">
        </childnode>
      </node>
      <node id="17736">
        <label>string</label>
      </node>
      <node id="17801">
        <label>ATen/DimVector.h</label>
        <link refid="_dim_vector_8h_source"/>
        <childnode refid="17747" relation="include">
        </childnode>
        <childnode refid="17766" relation="include">
        </childnode>
      </node>
      <node id="17802">
        <label>ATen/OptionsGuard.h</label>
        <link refid="_options_guard_8h_source"/>
        <childnode refid="17744" relation="include">
        </childnode>
        <childnode refid="17788" relation="include">
        </childnode>
        <childnode refid="17745" relation="include">
        </childnode>
        <childnode refid="17795" relation="include">
        </childnode>
        <childnode refid="17730" relation="include">
        </childnode>
      </node>
      <node id="17807">
        <label>torch/csrc/autograd/grad_mode.h</label>
      </node>
      <node id="17726">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17742" relation="include">
        </childnode>
        <childnode refid="17744" relation="include">
        </childnode>
        <childnode refid="17763" relation="include">
        </childnode>
      </node>
      <node id="17782">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="17794">
        <label>ATen/DeviceGuard.h</label>
        <link refid="_device_guard_8h_source"/>
        <childnode refid="17744" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17745" relation="include">
        </childnode>
        <childnode refid="17785" relation="include">
        </childnode>
        <childnode refid="17776" relation="include">
        </childnode>
        <childnode refid="17738" relation="include">
        </childnode>
      </node>
      <node id="17739">
        <label>exception</label>
      </node>
      <node id="17728">
        <label>stddef.h</label>
      </node>
      <node id="17769">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="17768" relation="include">
        </childnode>
      </node>
      <node id="17800">
        <label>ATen/Dispatch.h</label>
        <link refid="_dispatch_8h_source"/>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17756" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
      </node>
      <node id="17748">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="17738" relation="include">
        </childnode>
      </node>
      <node id="17783">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="17764" relation="include">
        </childnode>
        <childnode refid="17784" relation="include">
        </childnode>
      </node>
      <node id="17740">
        <label>ostream</label>
      </node>
      <node id="17725">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="17724" relation="include">
        </childnode>
      </node>
      <node id="17773">
        <label>ATen/Type.h</label>
      </node>
      <node id="17721">
        <label>torch/nn/init.h</label>
        <link refid="init_8h_source"/>
        <childnode refid="17722" relation="include">
        </childnode>
      </node>
      <node id="17746">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17747" relation="include">
        </childnode>
        <childnode refid="17754" relation="include">
        </childnode>
        <childnode refid="17752" relation="include">
        </childnode>
        <childnode refid="17755" relation="include">
        </childnode>
      </node>
      <node id="17789">
        <label>ATen/TensorGeometry.h</label>
        <link refid="_tensor_geometry_8h_source"/>
        <childnode refid="17773" relation="include">
        </childnode>
        <childnode refid="17790" relation="include">
        </childnode>
      </node>
      <node id="17786">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="17724">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="17790">
        <label>ATen/WrapDimUtils.h</label>
        <link refid="_wrap_dim_utils_8h_source"/>
        <childnode refid="17768" relation="include">
        </childnode>
        <childnode refid="17741" relation="include">
        </childnode>
      </node>
      <node id="17787">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="17738" relation="include">
        </childnode>
        <childnode refid="17766" relation="include">
        </childnode>
        <childnode refid="17745" relation="include">
        </childnode>
      </node>
      <node id="17771">
        <label>typeinfo</label>
      </node>
      <node id="17778">
        <label>cstdio</label>
      </node>
      <node id="17808">
        <label>tuple</label>
      </node>
      <node id="17763">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17724" relation="include">
        </childnode>
      </node>
      <node id="17755">
        <label>vector</label>
      </node>
      <node id="17799">
        <label>ATen/TensorMethods.h</label>
      </node>
      <node id="17796">
        <label>THNN/Reduction.h</label>
      </node>
      <node id="17753">
        <label>new</label>
      </node>
      <node id="17731">
        <label>utility</label>
      </node>
      <node id="17754">
        <label>array</label>
      </node>
      <node id="17741">
        <label>sstream</label>
      </node>
      <node id="17791">
        <label>ATen/Functions.h</label>
        <link refid="build_2aten_2src_2_a_ten_2_functions_8h_source"/>
        <childnode refid="17764" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
        <childnode refid="17785" relation="include">
        </childnode>
        <childnode refid="17783" relation="include">
        </childnode>
        <childnode refid="17774" relation="include">
        </childnode>
        <childnode refid="17792" relation="include">
        </childnode>
        <childnode refid="17793" relation="include">
        </childnode>
        <childnode refid="17794" relation="include">
        </childnode>
        <childnode refid="17795" relation="include">
        </childnode>
        <childnode refid="17796" relation="include">
        </childnode>
      </node>
      <node id="17793">
        <label>ATen/NativeFunctions.h</label>
      </node>
      <node id="17760">
        <label>iosfwd</label>
      </node>
      <node id="17750">
        <label>cstdlib</label>
      </node>
      <node id="17762">
        <label>iostream</label>
      </node>
      <node id="17738">
        <label>cstddef</label>
      </node>
      <node id="17780">
        <label>unordered_map</label>
      </node>
      <node id="17779">
        <label>mutex</label>
      </node>
      <node id="17723">
        <label>ATen/ATen.h</label>
        <link refid="_a_ten_8h_source"/>
        <childnode refid="17724" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17726" relation="include">
        </childnode>
        <childnode refid="17764" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
        <childnode refid="17774" relation="include">
        </childnode>
        <childnode refid="17775" relation="include">
        </childnode>
        <childnode refid="17783" relation="include">
        </childnode>
        <childnode refid="17785" relation="include">
        </childnode>
        <childnode refid="17744" relation="include">
        </childnode>
        <childnode refid="17789" relation="include">
        </childnode>
        <childnode refid="17791" relation="include">
        </childnode>
        <childnode refid="17797" relation="include">
        </childnode>
        <childnode refid="17798" relation="include">
        </childnode>
        <childnode refid="17799" relation="include">
        </childnode>
        <childnode refid="17800" relation="include">
        </childnode>
        <childnode refid="17801" relation="include">
        </childnode>
        <childnode refid="17794" relation="include">
        </childnode>
        <childnode refid="17795" relation="include">
        </childnode>
        <childnode refid="17788" relation="include">
        </childnode>
        <childnode refid="17802" relation="include">
        </childnode>
        <childnode refid="17803" relation="include">
        </childnode>
      </node>
      <node id="17777">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="17749" relation="include">
        </childnode>
        <childnode refid="17778" relation="include">
        </childnode>
        <childnode refid="17750" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17779" relation="include">
        </childnode>
        <childnode refid="17780" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17755" relation="include">
        </childnode>
        <childnode refid="17781" relation="include">
        </childnode>
        <childnode refid="17724" relation="include">
        </childnode>
      </node>
      <node id="17729">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="17724" relation="include">
        </childnode>
        <childnode refid="17730" relation="include">
        </childnode>
        <childnode refid="17738" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
        <childnode refid="17740" relation="include">
        </childnode>
        <childnode refid="17741" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
      </node>
      <node id="17795">
        <label>ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="17775" relation="include">
        </childnode>
        <childnode refid="17744" relation="include">
        </childnode>
        <childnode refid="17794" relation="include">
        </childnode>
        <childnode refid="17788" relation="include">
        </childnode>
        <childnode refid="17745" relation="include">
        </childnode>
        <childnode refid="17785" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
        <childnode refid="17738" relation="include">
        </childnode>
        <childnode refid="17760" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
      </node>
      <node id="17785">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="17774" relation="include">
        </childnode>
        <childnode refid="17764" relation="include">
        </childnode>
        <childnode refid="17745" relation="include">
        </childnode>
        <childnode refid="17786" relation="include">
        </childnode>
        <childnode refid="17783" relation="include">
        </childnode>
        <childnode refid="17787" relation="include">
        </childnode>
        <childnode refid="17767" relation="include">
        </childnode>
        <childnode refid="17768" relation="include">
        </childnode>
        <childnode refid="17770" relation="include">
        </childnode>
        <childnode refid="17744" relation="include">
        </childnode>
        <childnode refid="17788" relation="include">
        </childnode>
        <childnode refid="17730" relation="include">
        </childnode>
      </node>
      <node id="17732">
        <label>type_traits</label>
      </node>
      <node id="17788">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="17745" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17762" relation="include">
        </childnode>
      </node>
      <node id="17747">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="17748" relation="include">
        </childnode>
        <childnode refid="17749" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17738" relation="include">
        </childnode>
        <childnode refid="17750" relation="include">
        </childnode>
        <childnode refid="17751" relation="include">
        </childnode>
        <childnode refid="17733" relation="include">
        </childnode>
        <childnode refid="17752" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17753" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17724" relation="include">
        </childnode>
      </node>
      <node id="17749">
        <label>algorithm</label>
      </node>
      <node id="17774">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="17766" relation="include">
        </childnode>
      </node>
      <node id="17751">
        <label>cstring</label>
      </node>
      <node id="17727">
        <label>memory</label>
      </node>
      <node id="17733">
        <label>initializer_list</label>
      </node>
      <node id="17797">
        <label>ATen/Formatting.h</label>
        <link refid="_formatting_8h_source"/>
        <childnode refid="17762" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
        <childnode refid="17764" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetorch">torch</innernamespace>
    <innernamespace refid="namespacetorch_1_1nn">torch::nn</innernamespace>
    <innernamespace refid="namespacetorch_1_1nn_1_1init">torch::nn::init</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="init_8cpp_1a49a97af40b96d97ec2a70559e5022208" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t in</definition>
        <argsstring></argsstring>
        <name>in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/init.cpp" line="34" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/init.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="init_8cpp_1acb81c58df068c891d4723a7e4bbc6aae" prot="public" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t out</definition>
        <argsstring></argsstring>
        <name>out</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/init.cpp" line="35" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/init.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;torch/nn/init.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/tensor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/ATen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/Error.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetorch" kindref="compound">torch</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">nn<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">init<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Fan<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>Fan(Tensor&amp;<sp/>tensor)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dimensions<sp/>=<sp/>tensor.ndimension();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CHECK(</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimensions<sp/>&gt;=<sp/>2,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Fan<sp/>in<sp/>and<sp/>fan<sp/>out<sp/>can<sp/>not<sp/>be<sp/>computed<sp/>for<sp/>tensor<sp/>with<sp/>less<sp/>than<sp/>2<sp/>dimensions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dimensions<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>tensor.size(1);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>tensor.size(0);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>tensor.size(1)<sp/>*<sp/>tensor[0][0].numel();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>tensor.size(0)<sp/>*<sp/>tensor[0][0].numel();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>int64_t<sp/>in;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>int64_t<sp/>out;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">Tensor<sp/>constant_(Tensor<sp/>tensor,<sp/>Scalar<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>NoGradGuard<sp/>guard;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.fill_(value);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">Tensor<sp/>dirac_(Tensor<sp/>tensor)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>NoGradGuard<sp/>guard;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>AT_CHECK(</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tensor.ndimension()<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>tensor.ndimension()<sp/>&lt;=<sp/>5,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>tensors<sp/>with<sp/>3,<sp/>4,<sp/>or<sp/>5<sp/>dimensions<sp/>are<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sizes<sp/>=<sp/>tensor.sizes();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>min_dim<sp/>=<sp/>std::min(sizes[0],<sp/>sizes[1]);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>tensor.zero_();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>min_dim;<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(tensor.ndimension())<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="comment">//<sp/>Temporal<sp/>convolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor[d][d][sizes[2]<sp/>/<sp/>2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="comment">//<sp/>Spatial<sp/>convolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor[d][d][sizes[2]<sp/>/<sp/>2][sizes[3]<sp/>/<sp/>2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/></highlight><highlight class="comment">//<sp/>Volumetric<sp/>convolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor[d][d][sizes[2]<sp/>/<sp/>2][sizes[3]<sp/>/<sp/>2][sizes[4]<sp/>/<sp/>2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">Tensor<sp/>eye_(Tensor<sp/>tensor)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>NoGradGuard<sp/>guard;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>AT_CHECK(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tensor.ndimension()<sp/>==<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>tensors<sp/>with<sp/>2<sp/>dimensions<sp/>are<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::eye_out(tensor,<sp/>tensor.size(0),<sp/>tensor.size(1));</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">Tensor<sp/>normal_(Tensor<sp/>tensor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacestd" kindref="compound">std</ref>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>NoGradGuard<sp/>guard;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.normal_(mean,<sp/><ref refid="namespacestd" kindref="compound">std</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">Tensor<sp/>ones_(Tensor<sp/>tensor)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>NoGradGuard<sp/>guard;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.fill_(1);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">Tensor<sp/>orthogonal_(Tensor<sp/>tensor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gain)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>NoGradGuard<sp/>guard;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>AT_CHECK(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tensor.ndimension()<sp/>&gt;=<sp/>2,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>tensors<sp/>with<sp/>2<sp/>or<sp/>more<sp/>dimensions<sp/>are<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rows<sp/>=<sp/>tensor.size(0);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>columns<sp/>=<sp/>tensor.size(1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>flattened<sp/>=<sp/>torch::randn({rows,<sp/>columns});</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>&lt;<sp/>columns)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>flattened.t_();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>qr<sp/>factorization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>Tensor<sp/>q,<sp/>r;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>std::tie(q,<sp/>r)<sp/>=<sp/>torch::qr(flattened);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>Q<sp/>uniform<sp/>according<sp/>to<sp/>https://arxiv.org/pdf/math-ph/0609050.pdf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>torch::diag(r,<sp/>0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ph<sp/>=<sp/>d.sign();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>q<sp/>*=<sp/>ph;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>&lt;<sp/>columns)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>q.t_();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>tensor.view_as(q).copy_(q);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>tensor.mul_(gain);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">Tensor<sp/>sparse_(Tensor<sp/>tensor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sparsity,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacestd" kindref="compound">std</ref>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>NoGradGuard<sp/>guard;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>AT_CHECK(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tensor.ndimension()<sp/>==<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>tensors<sp/>with<sp/>2<sp/>dimensions<sp/>are<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rows<sp/>=<sp/>tensor.size(0);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>columns<sp/>=<sp/>tensor.size(1);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t<sp/>num_zeros<sp/>=<sp/>std::ceil(sparsity<sp/>*<sp/>rows);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>tensor.normal_(0,<sp/><ref refid="namespacestd" kindref="compound">std</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>column<sp/>=<sp/>0;<sp/>column<sp/>&lt;<sp/>columns;<sp/>++column)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row_indices<sp/>=<sp/>torch::randperm(rows,<sp/>tensor.<ref refid="structat_1_1_tensor_1a7d7c4c2a7b516b004f78940584c4491e" kindref="member">options</ref>().<ref refid="structat_1_1_tensor_options_1a73103c8b23a9008c19322f7833d2e313" kindref="member">dtype</ref>(kLong));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>zero_indices<sp/>=</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_indices.slice(</highlight><highlight class="comment">/*dim=*/</highlight><highlight class="normal">0,<sp/></highlight><highlight class="comment">/*start=*/</highlight><highlight class="normal">0,<sp/></highlight><highlight class="comment">/*end=*/</highlight><highlight class="normal">num_zeros);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor.index_put_(</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{zero_indices,<sp/>torch::tensor(column,<sp/>tensor.<ref refid="structat_1_1_tensor_1a7d7c4c2a7b516b004f78940584c4491e" kindref="member">options</ref>().<ref refid="structat_1_1_tensor_options_1a73103c8b23a9008c19322f7833d2e313" kindref="member">dtype</ref>(kLong))},</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch::zeros(num_zeros,<sp/>tensor.<ref refid="structat_1_1_tensor_1a7d7c4c2a7b516b004f78940584c4491e" kindref="member">options</ref>()));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">Tensor<sp/>uniform_(Tensor<sp/>tensor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>NoGradGuard<sp/>guard;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.uniform_(low,<sp/>high);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">Tensor<sp/>xavier_normal_(Tensor<sp/>tensor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gain)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>NoGradGuard<sp/>guard;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>Fan<sp/>fan(tensor);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacestd" kindref="compound">std</ref><sp/>=<sp/>gain<sp/>*<sp/>std::sqrt(2.0<sp/>/<sp/>(fan.in<sp/>+<sp/>fan.out));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.normal_(0,<sp/><ref refid="namespacestd" kindref="compound">std</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">Tensor<sp/>xavier_uniform_(Tensor<sp/>tensor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gain)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>NoGradGuard<sp/>guard;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>Fan<sp/>fan(tensor);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacestd" kindref="compound">std</ref><sp/>=<sp/>gain<sp/>*<sp/>std::sqrt(2.0<sp/>/<sp/>(fan.in<sp/>+<sp/>fan.out));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>uniform<sp/>bounds<sp/>from<sp/>standard<sp/>deviation<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>std::sqrt(3.0)<sp/>*<sp/><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.uniform_(-a,<sp/>a);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">Tensor<sp/>zeros_(Tensor<sp/>tensor)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>NoGradGuard<sp/>guard;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.zero_();</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>torch</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/init.cpp"/>
  </compounddef>
</doxygen>
