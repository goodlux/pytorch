<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_tensor_utils_8h" kind="file" language="C++">
    <compoundname>TensorUtils.h</compoundname>
    <includes refid="build_2aten_2src_2_a_ten_2tensor_8h" local="yes">ATen/Tensor.h</includes>
    <includes refid="_tensor_geometry_8h" local="yes">ATen/TensorGeometry.h</includes>
    <includes refid="aten_2src_2_a_ten_2utils_8h" local="yes">ATen/Utils.h</includes>
    <includedby refid="_c_p_u_apply_utils_8h" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h</includedby>
    <includedby refid="cudnn_2_descriptors_8h" local="no">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.h</includedby>
    <includedby refid="aten_2src_2_a_ten_2native_2cudnn_2rnn_8cpp" local="no">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/RNN.cpp</includedby>
    <includedby refid="aten_2src_2_a_ten_2native_2embedding_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Embedding.cpp</includedby>
    <includedby refid="_embedding_bag_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp</includedby>
    <includedby refid="_pooling_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp</includedby>
    <includedby refid="_soft_max_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp</includedby>
    <includedby refid="_tensor_utils_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp</includedby>
    <incdepgraph>
      <node id="11844">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="11832" relation="include">
        </childnode>
        <childnode refid="11845" relation="include">
        </childnode>
        <childnode refid="11846" relation="include">
        </childnode>
        <childnode refid="11847" relation="include">
        </childnode>
        <childnode refid="11848" relation="include">
        </childnode>
        <childnode refid="11831" relation="include">
        </childnode>
        <childnode refid="11830" relation="include">
        </childnode>
      </node>
      <node id="11875">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="11843" relation="include">
        </childnode>
        <childnode refid="11841" relation="include">
        </childnode>
        <childnode refid="11849" relation="include">
        </childnode>
        <childnode refid="11838" relation="include">
        </childnode>
        <childnode refid="11831" relation="include">
        </childnode>
        <childnode refid="11848" relation="include">
        </childnode>
      </node>
      <node id="11865">
        <label>atomic</label>
      </node>
      <node id="11848">
        <label>functional</label>
      </node>
      <node id="11841">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="11842" relation="include">
        </childnode>
        <childnode refid="11833" relation="include">
        </childnode>
        <childnode refid="11834" relation="include">
        </childnode>
        <childnode refid="11836" relation="include">
        </childnode>
        <childnode refid="11862" relation="include">
        </childnode>
      </node>
      <node id="11835">
        <label>limits</label>
      </node>
      <node id="11829">
        <label>assert.h</label>
      </node>
      <node id="11868">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="11833" relation="include">
        </childnode>
        <childnode refid="11842" relation="include">
        </childnode>
        <childnode refid="11843" relation="include">
        </childnode>
        <childnode refid="11867" relation="include">
        </childnode>
        <childnode refid="11855" relation="include">
        </childnode>
        <childnode refid="11852" relation="include">
        </childnode>
        <childnode refid="11869" relation="include">
        </childnode>
        <childnode refid="11870" relation="include">
        </childnode>
      </node>
      <node id="11857">
        <label>iterator</label>
      </node>
      <node id="11828">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="11829" relation="include">
        </childnode>
        <childnode refid="11827" relation="include">
        </childnode>
        <childnode refid="11830" relation="include">
        </childnode>
        <childnode refid="11831" relation="include">
        </childnode>
        <childnode refid="11832" relation="include">
        </childnode>
        <childnode refid="11833" relation="include">
        </childnode>
        <childnode refid="11834" relation="include">
        </childnode>
        <childnode refid="11841" relation="include">
        </childnode>
        <childnode refid="11863" relation="include">
        </childnode>
        <childnode refid="11868" relation="include">
        </childnode>
      </node>
      <node id="11873">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="11836">
        <label>cstdint</label>
      </node>
      <node id="11827">
        <label>stdint.h</label>
      </node>
      <node id="11837">
        <label>cmath</label>
      </node>
      <node id="11847">
        <label>cassert</label>
      </node>
      <node id="11839">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="11833" relation="include">
        </childnode>
        <childnode refid="11840" relation="include">
        </childnode>
        <childnode refid="11835" relation="include">
        </childnode>
      </node>
      <node id="11830">
        <label>stdexcept</label>
      </node>
      <node id="11870">
        <label>numeric</label>
      </node>
      <node id="11864">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="11865" relation="include">
        </childnode>
        <childnode refid="11858" relation="include">
        </childnode>
        <childnode refid="11866" relation="include">
        </childnode>
        <childnode refid="11841" relation="include">
        </childnode>
        <childnode refid="11844" relation="include">
        </childnode>
      </node>
      <node id="11866">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="11865" relation="include">
        </childnode>
      </node>
      <node id="11834">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="11833" relation="include">
        </childnode>
        <childnode refid="11835" relation="include">
        </childnode>
        <childnode refid="11831" relation="include">
        </childnode>
        <childnode refid="11836" relation="include">
        </childnode>
        <childnode refid="11830" relation="include">
        </childnode>
        <childnode refid="11832" relation="include">
        </childnode>
        <childnode refid="11837" relation="include">
        </childnode>
        <childnode refid="11838" relation="include">
        </childnode>
        <childnode refid="11839" relation="include">
        </childnode>
      </node>
      <node id="11863">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="11864" relation="include">
        </childnode>
        <childnode refid="11867" relation="include">
        </childnode>
      </node>
      <node id="11831">
        <label>string</label>
      </node>
      <node id="11850">
        <label>exception</label>
      </node>
      <node id="11867">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="11864" relation="include">
        </childnode>
      </node>
      <node id="11854">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="11849" relation="include">
        </childnode>
      </node>
      <node id="11872">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="11828" relation="include">
        </childnode>
        <childnode refid="11873" relation="include">
        </childnode>
      </node>
      <node id="11851">
        <label>ostream</label>
      </node>
      <node id="11878">
        <label>ATen/Type.h</label>
      </node>
      <node id="11842">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="11843" relation="include">
        </childnode>
        <childnode refid="11853" relation="include">
        </childnode>
        <childnode refid="11860" relation="include">
        </childnode>
        <childnode refid="11857" relation="include">
        </childnode>
        <childnode refid="11861" relation="include">
        </childnode>
      </node>
      <node id="11877">
        <label>ATen/TensorGeometry.h</label>
        <link refid="_tensor_geometry_8h_source"/>
        <childnode refid="11878" relation="include">
        </childnode>
        <childnode refid="11879" relation="include">
        </childnode>
      </node>
      <node id="11871">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="11824">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.h</label>
        <link refid="_tensor_utils_8h"/>
        <childnode refid="11825" relation="include">
        </childnode>
        <childnode refid="11877" relation="include">
        </childnode>
        <childnode refid="11868" relation="include">
        </childnode>
      </node>
      <node id="11833">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="11879">
        <label>ATen/WrapDimUtils.h</label>
        <link refid="_wrap_dim_utils_8h_source"/>
        <childnode refid="11864" relation="include">
        </childnode>
        <childnode refid="11852" relation="include">
        </childnode>
      </node>
      <node id="11874">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="11849" relation="include">
        </childnode>
        <childnode refid="11827" relation="include">
        </childnode>
        <childnode refid="11841" relation="include">
        </childnode>
      </node>
      <node id="11869">
        <label>typeinfo</label>
      </node>
      <node id="11861">
        <label>vector</label>
      </node>
      <node id="11859">
        <label>new</label>
      </node>
      <node id="11832">
        <label>utility</label>
      </node>
      <node id="11860">
        <label>array</label>
      </node>
      <node id="11852">
        <label>sstream</label>
      </node>
      <node id="11838">
        <label>iosfwd</label>
      </node>
      <node id="11856">
        <label>cstdlib</label>
      </node>
      <node id="11862">
        <label>iostream</label>
      </node>
      <node id="11849">
        <label>cstddef</label>
      </node>
      <node id="11843">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="11833" relation="include">
        </childnode>
        <childnode refid="11844" relation="include">
        </childnode>
        <childnode refid="11849" relation="include">
        </childnode>
        <childnode refid="11850" relation="include">
        </childnode>
        <childnode refid="11851" relation="include">
        </childnode>
        <childnode refid="11852" relation="include">
        </childnode>
        <childnode refid="11831" relation="include">
        </childnode>
      </node>
      <node id="11825">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="11826" relation="include">
        </childnode>
        <childnode refid="11828" relation="include">
        </childnode>
        <childnode refid="11841" relation="include">
        </childnode>
        <childnode refid="11871" relation="include">
        </childnode>
        <childnode refid="11872" relation="include">
        </childnode>
        <childnode refid="11874" relation="include">
        </childnode>
        <childnode refid="11863" relation="include">
        </childnode>
        <childnode refid="11864" relation="include">
        </childnode>
        <childnode refid="11868" relation="include">
        </childnode>
        <childnode refid="11875" relation="include">
        </childnode>
        <childnode refid="11876" relation="include">
        </childnode>
        <childnode refid="11844" relation="include">
        </childnode>
      </node>
      <node id="11845">
        <label>type_traits</label>
      </node>
      <node id="11876">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="11841" relation="include">
        </childnode>
        <childnode refid="11843" relation="include">
        </childnode>
        <childnode refid="11862" relation="include">
        </childnode>
      </node>
      <node id="11853">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="11854" relation="include">
        </childnode>
        <childnode refid="11855" relation="include">
        </childnode>
        <childnode refid="11847" relation="include">
        </childnode>
        <childnode refid="11849" relation="include">
        </childnode>
        <childnode refid="11856" relation="include">
        </childnode>
        <childnode refid="11840" relation="include">
        </childnode>
        <childnode refid="11846" relation="include">
        </childnode>
        <childnode refid="11857" relation="include">
        </childnode>
        <childnode refid="11858" relation="include">
        </childnode>
        <childnode refid="11859" relation="include">
        </childnode>
        <childnode refid="11845" relation="include">
        </childnode>
        <childnode refid="11832" relation="include">
        </childnode>
        <childnode refid="11833" relation="include">
        </childnode>
      </node>
      <node id="11855">
        <label>algorithm</label>
      </node>
      <node id="11826">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="11827" relation="include">
        </childnode>
      </node>
      <node id="11840">
        <label>cstring</label>
      </node>
      <node id="11858">
        <label>memory</label>
      </node>
      <node id="11846">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11880">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.h</label>
        <link refid="_tensor_utils_8h"/>
        <childnode refid="11881" relation="include">
        </childnode>
        <childnode refid="11882" relation="include">
        </childnode>
      </node>
      <node id="11882">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.h</label>
        <link refid="cudnn_2_descriptors_8h_source"/>
      </node>
      <node id="11881">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h</label>
        <link refid="_c_p_u_apply_utils_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structat_1_1_tensor_arg" prot="public">at::TensorArg</innerclass>
    <innerclass refid="structat_1_1_tensor_geometry_arg" prot="public">at::TensorGeometryArg</innerclass>
    <innernamespace refid="namespaceat">at</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Tensor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/TensorGeometry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>functions<sp/>are<sp/>NOT<sp/>in<sp/>Utils.h,<sp/>because<sp/>this<sp/>file<sp/>has<sp/>a<sp/>dep<sp/>on<sp/>Tensor.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>are<sp/>utility<sp/>functions<sp/>for<sp/>checking<sp/>that<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>make<sp/>sense.<sp/><sp/>These<sp/>are<sp/>particularly<sp/>useful<sp/>for<sp/>native<sp/>functions,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>do<sp/>NO<sp/>argument<sp/>checking<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structat_1_1_tensor_arg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AT_API<sp/><ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>tensor;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos;<sp/></highlight><highlight class="comment">//<sp/>1-indexed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref>(<ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>tensor(std::move(tensor)),<sp/>name(name),<sp/>pos(pos)<sp/>{}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>*<sp/>operator-&gt;()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;tensor;<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>&amp;<sp/>operator*()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor;<sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structat_1_1_tensor_geometry_arg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AT_API<sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_tensor_geometry" kindref="compound">TensorGeometry</ref><sp/>tensor;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos;<sp/></highlight><highlight class="comment">//<sp/>1-indexed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>implicit<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref>(<ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref><sp/>arg)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>tensor(<ref refid="structat_1_1_tensor_geometry" kindref="compound">TensorGeometry</ref>{arg.tensor}),<sp/>name(arg.name),<sp/>pos(arg.pos)<sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref>(<ref refid="structat_1_1_tensor_geometry" kindref="compound">TensorGeometry</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>tensor(tensor),<sp/>name(name),<sp/>pos(pos)<sp/>{}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry" kindref="compound">TensorGeometry</ref>*<sp/>operator-&gt;()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;tensor;<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry" kindref="compound">TensorGeometry</ref>&amp;<sp/>operator*()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor;<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>string<sp/>describing<sp/>which<sp/>function<sp/>did<sp/>checks<sp/>on<sp/>its<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Consider<sp/>generalizing<sp/>this<sp/>into<sp/>a<sp/>call<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CheckedFrom<sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>undefined<sp/>convention:<sp/>singular<sp/>operators<sp/>assume<sp/>their<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>defined,<sp/>but<sp/>functions<sp/>which<sp/>take<sp/>multiple<sp/>tensors<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implicitly<sp/>filter<sp/>out<sp/>undefined<sp/>tensors<sp/>(to<sp/>make<sp/>it<sp/>easier<sp/>to<sp/>perform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tests<sp/>which<sp/>should<sp/>apply<sp/>if<sp/>the<sp/>tensor<sp/>is<sp/>defined,<sp/>and<sp/>should<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>otherwise.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>This<sp/>means<sp/>that<sp/>the<sp/>n-ary<sp/>operators<sp/>take<sp/>lists<sp/>of<sp/>TensorArg,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>not<sp/>TensorGeometryArg,<sp/>because<sp/>the<sp/>Tensor<sp/>to<sp/>TensorGeometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>conversion<sp/>will<sp/>blow<sp/>up<sp/>if<sp/>you<sp/>have<sp/>undefined<sp/>tensors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">AT_API<sp/>std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>out,<sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref><sp/>t);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkDim(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref>&amp;<sp/>t,<sp/>int64_t<sp/>dim);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>this<sp/>is<sp/>an<sp/>inclusive-exclusive<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkDimRange(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref>&amp;<sp/>t,<sp/>int64_t<sp/>dim_start,<sp/>int64_t<sp/>dim_end);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkSameDim(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref>&amp;<sp/>t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref>&amp;<sp/>t2);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkContiguous(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref>&amp;<sp/>t);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkAllContiguous(CheckedFrom<sp/>c,<sp/><ref refid="classat_1_1_array_ref" kindref="compound">at::ArrayRef&lt;TensorArg&gt;</ref><sp/>ts);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkSize(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref>&amp;<sp/>t,<sp/><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref><sp/>sizes);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkSize(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref>&amp;<sp/>t,<sp/>int64_t<sp/>dim,<sp/>int64_t<sp/>size);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkNumel(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref>&amp;<sp/>t,<sp/>int64_t<sp/>numel);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkSameNumel(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref>&amp;<sp/>t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref>&amp;<sp/>t2);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkAllSameNumel(CheckedFrom<sp/>c,<sp/><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef&lt;TensorArg&gt;</ref><sp/>tensors);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkScalarType(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref>&amp;<sp/>t,<sp/>ScalarType<sp/>s);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkScalarTypes(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref>&amp;<sp/>t,<sp/><ref refid="classat_1_1_array_ref" kindref="compound">at::ArrayRef&lt;ScalarType&gt;</ref><sp/>l);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkSameGPU(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref>&amp;<sp/>t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref>&amp;<sp/>t2);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkAllSameGPU(CheckedFrom<sp/>c,<sp/><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef&lt;TensorArg&gt;</ref><sp/>tensors);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkSameType(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref>&amp;<sp/>t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref>&amp;<sp/>t2);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkAllSameType(CheckedFrom<sp/>c,<sp/><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef&lt;TensorArg&gt;</ref><sp/>tensors);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkSameSize(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref>&amp;<sp/>t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref>&amp;<sp/>t2);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkDefined(CheckedFrom<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref>&amp;<sp/>t);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkAllDefined(CheckedFrom<sp/>c,<sp/><ref refid="classat_1_1_array_ref" kindref="compound">at::ArrayRef&lt;TensorArg&gt;</ref><sp/>t);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FixMe:<sp/>does<sp/>TensorArg<sp/>slow<sp/>things<sp/>down?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkBackend(CheckedFrom<sp/>c,<sp/><ref refid="classat_1_1_array_ref" kindref="compound">at::ArrayRef&lt;Tensor&gt;</ref><sp/>t,<sp/>at::Backend<sp/>backend);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Methods<sp/>for<sp/>getting<sp/>data_ptr<sp/>if<sp/>tensor<sp/>is<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>maybe_data_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>&amp;<sp/>tensor);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>maybe_data_ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref>&amp;<sp/>tensor);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.h"/>
  </compounddef>
</doxygen>
