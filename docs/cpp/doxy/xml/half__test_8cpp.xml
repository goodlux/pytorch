<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="half__test_8cpp" kind="file" language="C++">
    <compoundname>half_test.cpp</compoundname>
    <includes local="yes">catch.hpp</includes>
    <includes refid="_a_ten_8h" local="no">ATen/ATen.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">limits</includes>
    <includes local="no">sstream</includes>
    <includes local="no">type_traits</includes>
    <incdepgraph>
      <node id="12519">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="12520" relation="include">
        </childnode>
        <childnode refid="12521" relation="include">
        </childnode>
        <childnode refid="12522" relation="include">
        </childnode>
        <childnode refid="12523" relation="include">
        </childnode>
        <childnode refid="12524" relation="include">
        </childnode>
        <childnode refid="12525" relation="include">
        </childnode>
        <childnode refid="12526" relation="include">
        </childnode>
      </node>
      <node id="12565">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="12515" relation="include">
        </childnode>
        <childnode refid="12518" relation="include">
        </childnode>
        <childnode refid="12563" relation="include">
        </childnode>
        <childnode refid="12566" relation="include">
        </childnode>
        <childnode refid="12527" relation="include">
        </childnode>
        <childnode refid="12524" relation="include">
        </childnode>
        <childnode refid="12516" relation="include">
        </childnode>
      </node>
      <node id="12533">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="12518" relation="include">
        </childnode>
        <childnode refid="12534" relation="include">
        </childnode>
        <childnode refid="12527" relation="include">
        </childnode>
        <childnode refid="12549" relation="include">
        </childnode>
        <childnode refid="12525" relation="include">
        </childnode>
        <childnode refid="12524" relation="include">
        </childnode>
      </node>
      <node id="12532">
        <label>atomic</label>
      </node>
      <node id="12511">
        <label>catch.hpp</label>
      </node>
      <node id="12524">
        <label>functional</label>
      </node>
      <node id="12570">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="12527" relation="include">
        </childnode>
        <childnode refid="12525" relation="include">
        </childnode>
        <childnode refid="12560" relation="include">
        </childnode>
        <childnode refid="12513" relation="include">
        </childnode>
      </node>
      <node id="12534">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="12535" relation="include">
        </childnode>
        <childnode refid="12513" relation="include">
        </childnode>
        <childnode refid="12545" relation="include">
        </childnode>
        <childnode refid="12547" relation="include">
        </childnode>
        <childnode refid="12551" relation="include">
        </childnode>
      </node>
      <node id="12546">
        <label>limits</label>
      </node>
      <node id="12554">
        <label>assert.h</label>
      </node>
      <node id="12559">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="12513" relation="include">
        </childnode>
        <childnode refid="12535" relation="include">
        </childnode>
        <childnode refid="12518" relation="include">
        </childnode>
        <childnode refid="12558" relation="include">
        </childnode>
        <childnode refid="12538" relation="include">
        </childnode>
        <childnode refid="12530" relation="include">
        </childnode>
        <childnode refid="12560" relation="include">
        </childnode>
        <childnode refid="12561" relation="include">
        </childnode>
      </node>
      <node id="12541">
        <label>iterator</label>
      </node>
      <node id="12553">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="12554" relation="include">
        </childnode>
        <childnode refid="12555" relation="include">
        </childnode>
        <childnode refid="12526" relation="include">
        </childnode>
        <childnode refid="12525" relation="include">
        </childnode>
        <childnode refid="12520" relation="include">
        </childnode>
        <childnode refid="12513" relation="include">
        </childnode>
        <childnode refid="12545" relation="include">
        </childnode>
        <childnode refid="12534" relation="include">
        </childnode>
        <childnode refid="12556" relation="include">
        </childnode>
        <childnode refid="12559" relation="include">
        </childnode>
      </node>
      <node id="12573">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="12547">
        <label>cstdint</label>
      </node>
      <node id="12581">
        <label>ATen/Deprecated.h</label>
        <link refid="_deprecated_8h_source"/>
      </node>
      <node id="12555">
        <label>stdint.h</label>
      </node>
      <node id="12592">
        <label>ATen/CUDAGuard.h</label>
        <link refid="_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="12548">
        <label>cmath</label>
      </node>
      <node id="12523">
        <label>cassert</label>
      </node>
      <node id="12564">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="12513" relation="include">
        </childnode>
        <childnode refid="12514" relation="include">
        </childnode>
        <childnode refid="12563" relation="include">
        </childnode>
        <childnode refid="12562" relation="include">
        </childnode>
        <childnode refid="12559" relation="include">
        </childnode>
        <childnode refid="12518" relation="include">
        </childnode>
        <childnode refid="12565" relation="include">
        </childnode>
        <childnode refid="12571" relation="include">
        </childnode>
        <childnode refid="12516" relation="include">
        </childnode>
        <childnode refid="12568" relation="include">
        </childnode>
        <childnode refid="12547" relation="include">
        </childnode>
      </node>
      <node id="12550">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="12513" relation="include">
        </childnode>
        <childnode refid="12540" relation="include">
        </childnode>
        <childnode refid="12546" relation="include">
        </childnode>
      </node>
      <node id="12526">
        <label>stdexcept</label>
      </node>
      <node id="12587">
        <label>ATen/TensorOperators.h</label>
        <link refid="_tensor_operators_8h_source"/>
        <childnode refid="12553" relation="include">
        </childnode>
        <childnode refid="12574" relation="include">
        </childnode>
        <childnode refid="12562" relation="include">
        </childnode>
        <childnode refid="12525" relation="include">
        </childnode>
        <childnode refid="12526" relation="include">
        </childnode>
      </node>
      <node id="12561">
        <label>numeric</label>
      </node>
      <node id="12557">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="12532" relation="include">
        </childnode>
        <childnode refid="12516" relation="include">
        </childnode>
        <childnode refid="12531" relation="include">
        </childnode>
        <childnode refid="12534" relation="include">
        </childnode>
        <childnode refid="12519" relation="include">
        </childnode>
      </node>
      <node id="12545">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="12513" relation="include">
        </childnode>
        <childnode refid="12546" relation="include">
        </childnode>
        <childnode refid="12525" relation="include">
        </childnode>
        <childnode refid="12547" relation="include">
        </childnode>
        <childnode refid="12526" relation="include">
        </childnode>
        <childnode refid="12520" relation="include">
        </childnode>
        <childnode refid="12548" relation="include">
        </childnode>
        <childnode refid="12549" relation="include">
        </childnode>
        <childnode refid="12550" relation="include">
        </childnode>
      </node>
      <node id="12531">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="12532" relation="include">
        </childnode>
      </node>
      <node id="12556">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="12557" relation="include">
        </childnode>
        <childnode refid="12558" relation="include">
        </childnode>
      </node>
      <node id="12525">
        <label>string</label>
      </node>
      <node id="12590">
        <label>ATen/DimVector.h</label>
        <link refid="_dim_vector_8h_source"/>
        <childnode refid="12536" relation="include">
        </childnode>
        <childnode refid="12555" relation="include">
        </childnode>
      </node>
      <node id="12591">
        <label>ATen/OptionsGuard.h</label>
        <link refid="_options_guard_8h_source"/>
        <childnode refid="12533" relation="include">
        </childnode>
        <childnode refid="12577" relation="include">
        </childnode>
        <childnode refid="12534" relation="include">
        </childnode>
        <childnode refid="12584" relation="include">
        </childnode>
        <childnode refid="12519" relation="include">
        </childnode>
      </node>
      <node id="12510">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp</label>
        <link refid="half__test_8cpp"/>
        <childnode refid="12511" relation="include">
        </childnode>
        <childnode refid="12512" relation="include">
        </childnode>
        <childnode refid="12551" relation="include">
        </childnode>
        <childnode refid="12546" relation="include">
        </childnode>
        <childnode refid="12530" relation="include">
        </childnode>
        <childnode refid="12521" relation="include">
        </childnode>
      </node>
      <node id="12515">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="12516" relation="include">
        </childnode>
        <childnode refid="12517" relation="include">
        </childnode>
        <childnode refid="12518" relation="include">
        </childnode>
        <childnode refid="12531" relation="include">
        </childnode>
        <childnode refid="12533" relation="include">
        </childnode>
        <childnode refid="12552" relation="include">
        </childnode>
      </node>
      <node id="12571">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="12583">
        <label>ATen/DeviceGuard.h</label>
        <link refid="_device_guard_8h_source"/>
        <childnode refid="12533" relation="include">
        </childnode>
        <childnode refid="12518" relation="include">
        </childnode>
        <childnode refid="12534" relation="include">
        </childnode>
        <childnode refid="12574" relation="include">
        </childnode>
        <childnode refid="12565" relation="include">
        </childnode>
        <childnode refid="12527" relation="include">
        </childnode>
      </node>
      <node id="12528">
        <label>exception</label>
      </node>
      <node id="12517">
        <label>stddef.h</label>
      </node>
      <node id="12558">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="12557" relation="include">
        </childnode>
      </node>
      <node id="12589">
        <label>ATen/Dispatch.h</label>
        <link refid="_dispatch_8h_source"/>
        <childnode refid="12518" relation="include">
        </childnode>
        <childnode refid="12545" relation="include">
        </childnode>
        <childnode refid="12562" relation="include">
        </childnode>
      </node>
      <node id="12537">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="12527" relation="include">
        </childnode>
      </node>
      <node id="12572">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="12553" relation="include">
        </childnode>
        <childnode refid="12573" relation="include">
        </childnode>
      </node>
      <node id="12529">
        <label>ostream</label>
      </node>
      <node id="12514">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="12513" relation="include">
        </childnode>
      </node>
      <node id="12562">
        <label>ATen/Type.h</label>
      </node>
      <node id="12535">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="12518" relation="include">
        </childnode>
        <childnode refid="12536" relation="include">
        </childnode>
        <childnode refid="12543" relation="include">
        </childnode>
        <childnode refid="12541" relation="include">
        </childnode>
        <childnode refid="12544" relation="include">
        </childnode>
      </node>
      <node id="12578">
        <label>ATen/TensorGeometry.h</label>
        <link refid="_tensor_geometry_8h_source"/>
        <childnode refid="12562" relation="include">
        </childnode>
        <childnode refid="12579" relation="include">
        </childnode>
      </node>
      <node id="12575">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="12513">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="12579">
        <label>ATen/WrapDimUtils.h</label>
        <link refid="_wrap_dim_utils_8h_source"/>
        <childnode refid="12557" relation="include">
        </childnode>
        <childnode refid="12530" relation="include">
        </childnode>
      </node>
      <node id="12576">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="12527" relation="include">
        </childnode>
        <childnode refid="12555" relation="include">
        </childnode>
        <childnode refid="12534" relation="include">
        </childnode>
      </node>
      <node id="12560">
        <label>typeinfo</label>
      </node>
      <node id="12567">
        <label>cstdio</label>
      </node>
      <node id="12552">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="12516" relation="include">
        </childnode>
        <childnode refid="12513" relation="include">
        </childnode>
      </node>
      <node id="12544">
        <label>vector</label>
      </node>
      <node id="12588">
        <label>ATen/TensorMethods.h</label>
      </node>
      <node id="12585">
        <label>THNN/Reduction.h</label>
      </node>
      <node id="12542">
        <label>new</label>
      </node>
      <node id="12520">
        <label>utility</label>
      </node>
      <node id="12543">
        <label>array</label>
      </node>
      <node id="12530">
        <label>sstream</label>
      </node>
      <node id="12580">
        <label>ATen/Functions.h</label>
        <link refid="build_2aten_2src_2_a_ten_2_functions_8h_source"/>
        <childnode refid="12553" relation="include">
        </childnode>
        <childnode refid="12562" relation="include">
        </childnode>
        <childnode refid="12574" relation="include">
        </childnode>
        <childnode refid="12572" relation="include">
        </childnode>
        <childnode refid="12563" relation="include">
        </childnode>
        <childnode refid="12581" relation="include">
        </childnode>
        <childnode refid="12582" relation="include">
        </childnode>
        <childnode refid="12583" relation="include">
        </childnode>
        <childnode refid="12584" relation="include">
        </childnode>
        <childnode refid="12585" relation="include">
        </childnode>
      </node>
      <node id="12582">
        <label>ATen/NativeFunctions.h</label>
      </node>
      <node id="12549">
        <label>iosfwd</label>
      </node>
      <node id="12539">
        <label>cstdlib</label>
      </node>
      <node id="12551">
        <label>iostream</label>
      </node>
      <node id="12527">
        <label>cstddef</label>
      </node>
      <node id="12569">
        <label>unordered_map</label>
      </node>
      <node id="12568">
        <label>mutex</label>
      </node>
      <node id="12512">
        <label>ATen/ATen.h</label>
        <link refid="_a_ten_8h_source"/>
        <childnode refid="12513" relation="include">
        </childnode>
        <childnode refid="12514" relation="include">
        </childnode>
        <childnode refid="12515" relation="include">
        </childnode>
        <childnode refid="12553" relation="include">
        </childnode>
        <childnode refid="12562" relation="include">
        </childnode>
        <childnode refid="12563" relation="include">
        </childnode>
        <childnode refid="12564" relation="include">
        </childnode>
        <childnode refid="12572" relation="include">
        </childnode>
        <childnode refid="12574" relation="include">
        </childnode>
        <childnode refid="12533" relation="include">
        </childnode>
        <childnode refid="12578" relation="include">
        </childnode>
        <childnode refid="12580" relation="include">
        </childnode>
        <childnode refid="12586" relation="include">
        </childnode>
        <childnode refid="12587" relation="include">
        </childnode>
        <childnode refid="12588" relation="include">
        </childnode>
        <childnode refid="12589" relation="include">
        </childnode>
        <childnode refid="12590" relation="include">
        </childnode>
        <childnode refid="12583" relation="include">
        </childnode>
        <childnode refid="12584" relation="include">
        </childnode>
        <childnode refid="12577" relation="include">
        </childnode>
        <childnode refid="12591" relation="include">
        </childnode>
        <childnode refid="12592" relation="include">
        </childnode>
      </node>
      <node id="12566">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="12538" relation="include">
        </childnode>
        <childnode refid="12567" relation="include">
        </childnode>
        <childnode refid="12539" relation="include">
        </childnode>
        <childnode refid="12524" relation="include">
        </childnode>
        <childnode refid="12516" relation="include">
        </childnode>
        <childnode refid="12568" relation="include">
        </childnode>
        <childnode refid="12569" relation="include">
        </childnode>
        <childnode refid="12525" relation="include">
        </childnode>
        <childnode refid="12544" relation="include">
        </childnode>
        <childnode refid="12570" relation="include">
        </childnode>
        <childnode refid="12513" relation="include">
        </childnode>
      </node>
      <node id="12518">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="12513" relation="include">
        </childnode>
        <childnode refid="12519" relation="include">
        </childnode>
        <childnode refid="12527" relation="include">
        </childnode>
        <childnode refid="12528" relation="include">
        </childnode>
        <childnode refid="12529" relation="include">
        </childnode>
        <childnode refid="12530" relation="include">
        </childnode>
        <childnode refid="12525" relation="include">
        </childnode>
      </node>
      <node id="12584">
        <label>ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="12564" relation="include">
        </childnode>
        <childnode refid="12533" relation="include">
        </childnode>
        <childnode refid="12583" relation="include">
        </childnode>
        <childnode refid="12577" relation="include">
        </childnode>
        <childnode refid="12534" relation="include">
        </childnode>
        <childnode refid="12574" relation="include">
        </childnode>
        <childnode refid="12562" relation="include">
        </childnode>
        <childnode refid="12527" relation="include">
        </childnode>
        <childnode refid="12549" relation="include">
        </childnode>
        <childnode refid="12520" relation="include">
        </childnode>
      </node>
      <node id="12574">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="12563" relation="include">
        </childnode>
        <childnode refid="12553" relation="include">
        </childnode>
        <childnode refid="12534" relation="include">
        </childnode>
        <childnode refid="12575" relation="include">
        </childnode>
        <childnode refid="12572" relation="include">
        </childnode>
        <childnode refid="12576" relation="include">
        </childnode>
        <childnode refid="12556" relation="include">
        </childnode>
        <childnode refid="12557" relation="include">
        </childnode>
        <childnode refid="12559" relation="include">
        </childnode>
        <childnode refid="12533" relation="include">
        </childnode>
        <childnode refid="12577" relation="include">
        </childnode>
        <childnode refid="12519" relation="include">
        </childnode>
      </node>
      <node id="12521">
        <label>type_traits</label>
      </node>
      <node id="12577">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="12534" relation="include">
        </childnode>
        <childnode refid="12518" relation="include">
        </childnode>
        <childnode refid="12551" relation="include">
        </childnode>
      </node>
      <node id="12536">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="12537" relation="include">
        </childnode>
        <childnode refid="12538" relation="include">
        </childnode>
        <childnode refid="12523" relation="include">
        </childnode>
        <childnode refid="12527" relation="include">
        </childnode>
        <childnode refid="12539" relation="include">
        </childnode>
        <childnode refid="12540" relation="include">
        </childnode>
        <childnode refid="12522" relation="include">
        </childnode>
        <childnode refid="12541" relation="include">
        </childnode>
        <childnode refid="12516" relation="include">
        </childnode>
        <childnode refid="12542" relation="include">
        </childnode>
        <childnode refid="12521" relation="include">
        </childnode>
        <childnode refid="12520" relation="include">
        </childnode>
        <childnode refid="12513" relation="include">
        </childnode>
      </node>
      <node id="12538">
        <label>algorithm</label>
      </node>
      <node id="12563">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="12555" relation="include">
        </childnode>
      </node>
      <node id="12540">
        <label>cstring</label>
      </node>
      <node id="12516">
        <label>memory</label>
      </node>
      <node id="12522">
        <label>initializer_list</label>
      </node>
      <node id="12586">
        <label>ATen/Formatting.h</label>
        <link refid="_formatting_8h_source"/>
        <childnode refid="12551" relation="include">
        </childnode>
        <childnode refid="12562" relation="include">
        </childnode>
        <childnode refid="12553" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="half__test_8cpp_1a656eb5868e824d59f489f910db438420" prot="public" static="no">
        <name>CATCH_CONFIG_MAIN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" line="1" column="9" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="half__test_8cpp_1a82cb115ee3a82a335c06ecd880001a62" prot="public" static="no">
        <name>ASSERT_SAME_TYPE</name>
        <param><defname>name</defname></param>
        <initializer>static_assert( \
      std::is_same&lt; \
          decltype(std::numeric_limits&lt;<ref refid="structat_1_1_half" kindref="compound">Half</ref>&gt;::name), \
          decltype(std::numeric_limits&lt;float&gt;::name)&gt;::value, \
      &quot;decltype(&quot; #name &quot;) differs&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" line="88" column="9" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="half__test_8cpp_1a0a4aa9fadc284f21f83242b9917f96a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;half arithmetic&quot;, &quot;[]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;half arithmetic&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" line="12" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" bodystart="12" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="half__test_8cpp_1a110c0220fe9b84df6fbc91fa57397fd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;half comparisons&quot;, &quot;[]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;half comparisons&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" line="27" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" bodystart="27" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="half__test_8cpp_1a670ce688b89eb9027ba3f41f5180cf7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;half cast&quot;, &quot;[]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;half cast&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" line="40" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" bodystart="40" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="half__test_8cpp_1a940ac096e82943d8669f62170bea1e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;half construction&quot;, &quot;[]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;half construction&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" line="51" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" bodystart="51" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="half__test_8cpp_1a8009375954c4af32ae62f688a85aa71d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string to_string</definition>
        <argsstring>(const Half &amp;h)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" line="61" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="half__test_8cpp_1a7ac18b2dcdb34d9be9094e3f740bacdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;half to string&quot;, &quot;[]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;half to string&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" line="67" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="half__test_8cpp_1ab4981b7b61108d0dd6114eda33259d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;half numeric limits&quot;, &quot;[]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;half numeric limits&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" line="72" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp" bodystart="72" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#define<sp/>CATCH_CONFIG_MAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;catch.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/ATen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">TEST_CASE(<sp/></highlight><highlight class="stringliteral">&quot;half<sp/>arithmetic&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref><sp/>zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref><sp/>one<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>REQUIRE(zero<sp/>+<sp/>one<sp/>==<sp/>one);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>REQUIRE(zero<sp/>+<sp/>zero<sp/>==<sp/>zero);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>REQUIRE(zero<sp/>*<sp/>one<sp/>==<sp/>zero);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>REQUIRE(one<sp/>*<sp/>one<sp/>==<sp/>one);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>REQUIRE(one<sp/>/<sp/>one<sp/>==<sp/>one);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>REQUIRE(one<sp/>-<sp/>one<sp/>==<sp/>zero);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>REQUIRE(one<sp/>-<sp/>zero<sp/>==<sp/>one);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>REQUIRE(zero<sp/>-<sp/>one<sp/>==<sp/>-one);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>REQUIRE(one<sp/>+<sp/>one<sp/>==<sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref>(2));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>REQUIRE(one<sp/>+<sp/>one<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">TEST_CASE(<sp/></highlight><highlight class="stringliteral">&quot;half<sp/>comparisons&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref><sp/>zero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref><sp/>one<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>REQUIRE(zero<sp/>&lt;<sp/>one);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>REQUIRE(zero<sp/>&lt;<sp/>1);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>REQUIRE(1<sp/>&gt;<sp/>zero);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>REQUIRE(0<sp/>&gt;=<sp/>zero);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>REQUIRE(0<sp/>!=<sp/>one);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>REQUIRE(zero<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>REQUIRE(zero<sp/>==<sp/>zero);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>REQUIRE(zero<sp/>==<sp/>-zero);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">TEST_CASE(<sp/></highlight><highlight class="stringliteral">&quot;half<sp/>cast&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref><sp/>value<sp/>=<sp/>1.5f;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>REQUIRE((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)value<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>REQUIRE((</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)value<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>REQUIRE((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)value<sp/>==<sp/>1LL);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>REQUIRE((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)value<sp/>==<sp/>1.5f);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>REQUIRE((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)value<sp/>==<sp/>1.5);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>REQUIRE((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)value<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>REQUIRE((</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<ref refid="structat_1_1_half" kindref="compound">Half</ref>(0.0f)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">TEST_CASE(<sp/></highlight><highlight class="stringliteral">&quot;half<sp/>construction&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>REQUIRE(<ref refid="structat_1_1_half" kindref="compound">Half</ref>((</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)3)<sp/>==<sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref>(3.0f));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>REQUIRE(<ref refid="structat_1_1_half" kindref="compound">Half</ref>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)3)<sp/>==<sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref>(3.0f));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>REQUIRE(<ref refid="structat_1_1_half" kindref="compound">Half</ref>(3)<sp/>==<sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref>(3.0f));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>REQUIRE(<ref refid="structat_1_1_half" kindref="compound">Half</ref>(3U)<sp/>==<sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref>(3.0f));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>REQUIRE(<ref refid="structat_1_1_half" kindref="compound">Half</ref>(3LL)<sp/>==<sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref>(3.0f));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>REQUIRE(<ref refid="structat_1_1_half" kindref="compound">Half</ref>(3ULL)<sp/>==<sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref>(3.0f));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>REQUIRE(<ref refid="structat_1_1_half" kindref="compound">Half</ref>(3.5)<sp/>==<sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref>(3.5f));</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>to_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_half" kindref="compound">Half</ref>&amp;<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>h;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">TEST_CASE(<sp/></highlight><highlight class="stringliteral">&quot;half<sp/>to<sp/>string&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>REQUIRE(to_string(<ref refid="structat_1_1_half" kindref="compound">Half</ref>(3.5f))<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;3.5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>REQUIRE(to_string(<ref refid="structat_1_1_half" kindref="compound">Half</ref>(-100.0f))<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-100&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">TEST_CASE(<sp/></highlight><highlight class="stringliteral">&quot;half<sp/>numeric<sp/>limits&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>limits<sp/>=<sp/>std::numeric_limits&lt;Half&gt;;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>REQUIRE(limits::lowest()<sp/>==<sp/>-65504.0f);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>REQUIRE(limits::max()<sp/>==<sp/>65504.0f);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>REQUIRE(limits::min()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>REQUIRE(limits::min()<sp/>&lt;<sp/>1);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>REQUIRE(limits::denorm_min()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>REQUIRE(limits::denorm_min()<sp/>/<sp/>2<sp/><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>REQUIRE(limits::infinity()<sp/>==<sp/>std::numeric_limits&lt;float&gt;::infinity());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>REQUIRE(limits::quiet_NaN()<sp/>!=<sp/>limits::quiet_NaN());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>REQUIRE(limits::signaling_NaN()<sp/>!=<sp/>limits::signaling_NaN());</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>declared<sp/>type<sp/>of<sp/>members<sp/>of<sp/>numeric_limits&lt;Half&gt;<sp/>matches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>declared<sp/>type<sp/>of<sp/>that<sp/>member<sp/>on<sp/>numeric_limits&lt;float&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_SAME_TYPE(name)<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/>static_assert(<sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;<sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decltype(std::numeric_limits&lt;Half&gt;::name),<sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decltype(std::numeric_limits&lt;float&gt;::name)&gt;::value,<sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;decltype(&quot;<sp/>#name<sp/>&quot;)<sp/>differs&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">ASSERT_SAME_TYPE(is_specialized);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">ASSERT_SAME_TYPE(is_signed);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">ASSERT_SAME_TYPE(is_integer);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">ASSERT_SAME_TYPE(is_exact);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">ASSERT_SAME_TYPE(has_infinity);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">ASSERT_SAME_TYPE(has_quiet_NaN);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">ASSERT_SAME_TYPE(has_signaling_NaN);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">ASSERT_SAME_TYPE(has_denorm);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">ASSERT_SAME_TYPE(has_denorm_loss);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">ASSERT_SAME_TYPE(round_style);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">ASSERT_SAME_TYPE(is_iec559);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">ASSERT_SAME_TYPE(is_bounded);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">ASSERT_SAME_TYPE(is_modulo);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">ASSERT_SAME_TYPE(digits);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">ASSERT_SAME_TYPE(digits10);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">ASSERT_SAME_TYPE(max_digits10);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">ASSERT_SAME_TYPE(radix);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">ASSERT_SAME_TYPE(min_exponent);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">ASSERT_SAME_TYPE(min_exponent10);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">ASSERT_SAME_TYPE(max_exponent);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">ASSERT_SAME_TYPE(max_exponent10);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">ASSERT_SAME_TYPE(traps);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">ASSERT_SAME_TYPE(tinyness_before);</highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/half_test.cpp"/>
  </compounddef>
</doxygen>
