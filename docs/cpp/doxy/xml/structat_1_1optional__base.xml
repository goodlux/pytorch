<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structat_1_1optional__base" kind="struct" language="C++" prot="public">
    <compoundname>at::optional_base</compoundname>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structat_1_1optional__base_1a7547991064b2cd572f7f1b898ab5e517" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool at::optional_base&lt; T &gt;::init_</definition>
        <argsstring></argsstring>
        <name>init_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="232" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structat_1_1optional__base_1a8ad033c8179ba2aab64ea677bd621064" prot="public" static="no" mutable="no">
        <type><ref refid="unionat_1_1storage__t" kindref="compound">storage_t</ref>&lt; T &gt;</type>
        <definition>storage_t&lt;T&gt; at::optional_base&lt; T &gt;::storage_</definition>
        <argsstring></argsstring>
        <name>storage_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="233" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structat_1_1optional__base_1aa00cf17277e1a3824c235e7b98af9f8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr at::optional_base&lt; T &gt;::optional_base</definition>
        <argsstring>() noexcept</argsstring>
        <name>optional_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="235" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="structat_1_1optional__base_1a9992c453b7a2654f373ce3d3bf426015" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr at::optional_base&lt; T &gt;::optional_base</definition>
        <argsstring>(const T &amp;v)</argsstring>
        <name>optional_base</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="237" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="structat_1_1optional__base_1a90712ba10444b6134548b7425c94d86b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr at::optional_base&lt; T &gt;::optional_base</definition>
        <argsstring>(T &amp;&amp;v)</argsstring>
        <name>optional_base</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="239" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="structat_1_1optional__base_1a3b49b3a9178c3a5cd12aa2ee72de0f0b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>at::optional_base&lt; T &gt;::optional_base</definition>
        <argsstring>(in_place_t, Args &amp;&amp;... args)</argsstring>
        <name>optional_base</name>
        <param>
          <type><ref refid="structat_1_1in__place__t" kindref="compound">in_place_t</ref></type>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="241" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="241" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="structat_1_1optional__base_1a39e151bc6f13e961b5323a4a5777df37" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename std::enable_if&lt; std::is_constructible&lt; T, std::initializer_list&lt; U &gt;&gt; ::value, bool &gt;::type</type>
            <defval>false</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>at::optional_base&lt; T &gt;::optional_base</definition>
        <argsstring>(in_place_t, std::initializer_list&lt; U &gt; il, Args &amp;&amp;... args)</argsstring>
        <name>optional_base</name>
        <param>
          <type><ref refid="structat_1_1in__place__t" kindref="compound">in_place_t</ref></type>
        </param>
        <param>
          <type>std::initializer_list&lt; U &gt;</type>
          <declname>il</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="245" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="245" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="structat_1_1optional__base_1ab70e5113e8e72ca22d0074b616064642" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>at::optional_base&lt; T &gt;::~optional_base</definition>
        <argsstring>()</argsstring>
        <name>~optional_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="248" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="248" bodyend="248"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="231" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="230" bodyend="249"/>
    <listofallmembers>
      <member refid="structat_1_1optional__base_1a7547991064b2cd572f7f1b898ab5e517" prot="public" virt="non-virtual"><scope>at::optional_base</scope><name>init_</name></member>
      <member refid="structat_1_1optional__base_1aa00cf17277e1a3824c235e7b98af9f8c" prot="public" virt="non-virtual"><scope>at::optional_base</scope><name>optional_base</name></member>
      <member refid="structat_1_1optional__base_1a9992c453b7a2654f373ce3d3bf426015" prot="public" virt="non-virtual"><scope>at::optional_base</scope><name>optional_base</name></member>
      <member refid="structat_1_1optional__base_1a90712ba10444b6134548b7425c94d86b" prot="public" virt="non-virtual"><scope>at::optional_base</scope><name>optional_base</name></member>
      <member refid="structat_1_1optional__base_1a3b49b3a9178c3a5cd12aa2ee72de0f0b" prot="public" virt="non-virtual"><scope>at::optional_base</scope><name>optional_base</name></member>
      <member refid="structat_1_1optional__base_1a39e151bc6f13e961b5323a4a5777df37" prot="public" virt="non-virtual"><scope>at::optional_base</scope><name>optional_base</name></member>
      <member refid="structat_1_1optional__base_1a8ad033c8179ba2aab64ea677bd621064" prot="public" virt="non-virtual"><scope>at::optional_base</scope><name>storage_</name></member>
      <member refid="structat_1_1optional__base_1ab70e5113e8e72ca22d0074b616064642" prot="public" virt="non-virtual"><scope>at::optional_base</scope><name>~optional_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
