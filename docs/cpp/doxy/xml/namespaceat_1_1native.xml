<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="namespaceat_1_1native" kind="namespace" language="C++">
    <compoundname>at::native</compoundname>
    <innerclass refid="unionat_1_1native_1_1_constant" prot="public">at::native::Constant</innerclass>
    <innerclass refid="structat_1_1native_1_1_convolution_descriptor" prot="public">at::native::ConvolutionDescriptor</innerclass>
    <innerclass refid="structat_1_1native_1_1_conv_params" prot="public">at::native::ConvParams</innerclass>
    <innerclass refid="structat_1_1native_1_1_cpu_engine" prot="public">at::native::CpuEngine</innerclass>
    <innerclass refid="classat_1_1native_1_1_descriptor" prot="public">at::native::Descriptor</innerclass>
    <innerclass refid="structat_1_1native_1_1_descriptor_deleter" prot="public">at::native::DescriptorDeleter</innerclass>
    <innerclass refid="classat_1_1native_1_1_dfti_descriptor" prot="public">at::native::DftiDescriptor</innerclass>
    <innerclass refid="structat_1_1native_1_1_dfti_descriptor_deleter" prot="public">at::native::DftiDescriptorDeleter</innerclass>
    <innerclass refid="structat_1_1native_1_1_dispatch_stub" prot="public">at::native::DispatchStub</innerclass>
    <innerclass refid="structat_1_1native_1_1_dropout_descriptor" prot="public">at::native::DropoutDescriptor</innerclass>
    <innerclass refid="classat_1_1native_1_1_filter_descriptor" prot="public">at::native::FilterDescriptor</innerclass>
    <innerclass refid="structat_1_1native_1_1_params_equal" prot="public">at::native::ParamsEqual</innerclass>
    <innerclass refid="structat_1_1native_1_1_params_hash" prot="public">at::native::ParamsHash</innerclass>
    <innerclass refid="structat_1_1native_1_1_r_n_n_descriptor" prot="public">at::native::RNNDescriptor</innerclass>
    <innerclass refid="structat_1_1native_1_1_spatial_transformer_descriptor" prot="public">at::native::SpatialTransformerDescriptor</innerclass>
    <innerclass refid="structat_1_1native_1_1_stream" prot="public">at::native::Stream</innerclass>
    <innerclass refid="classat_1_1native_1_1_tensor_descriptor" prot="public">at::native::TensorDescriptor</innerclass>
    <innernamespace refid="namespaceat_1_1native_1_1detail">at::native::detail</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_dispatch_stub_8h_1a37188df404ba5f81f315f7ab982f6081" prot="public" static="no" strong="yes">
        <type></type>
        <name>CPUCapability</name>
        <enumvalue id="dummy_1a37188df404ba5f81f315f7ab982f6081a5b39c8b553c821e7cddc6da64b5bd2ee" prot="public">
          <name>DEFAULT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a37188df404ba5f81f315f7ab982f6081a4863502abea45861b9ed022e66d66cb2" prot="public">
          <name>AVX</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a37188df404ba5f81f315f7ab982f6081aee6ecd3e091cdefd02e783f9b9869388" prot="public">
          <name>AVX2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dummy_1a37188df404ba5f81f315f7ab982f6081abc3a40a7d496063f5bcf423c12dda0ce" prot="public">
          <name>NUM_OPTIONS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/DispatchStub.h" line="39" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/DispatchStub.h" bodystart="39" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_reduce_ops_kernel_8h_1af7fb67b753fbddc147a7f15defa6ffeb" prot="public" static="no">
        <type>void(*)(<ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="classat_1_1optional" kindref="compound">at::optional</ref>&lt; int64_t &gt;)</type>
        <definition>using at::native::reduce_fn = typedef void(*)(Tensor &amp;, const Tensor &amp;, at::optional&lt;int64_t&gt;)</definition>
        <argsstring></argsstring>
        <name>reduce_fn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/ReduceOpsKernel.h" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/ReduceOpsKernel.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_softmax_kernel_8h_1a0f0aaf7d7d1f509417d51a0162f5b727" prot="public" static="no">
        <type>void(*)(<ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;)</type>
        <definition>using at::native::forward_fn = typedef void(*)(Tensor &amp;, const Tensor &amp;)</definition>
        <argsstring></argsstring>
        <name>forward_fn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftmaxKernel.h" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftmaxKernel.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_softmax_kernel_8h_1ad66b9e4379901faa8d082b75e7554c5b" prot="public" static="no">
        <type>void(*)(<ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;)</type>
        <definition>using at::native::backward_fn = typedef void(*)(Tensor &amp;, const Tensor &amp;, const Tensor&amp;)</definition>
        <argsstring></argsstring>
        <name>backward_fn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftmaxKernel.h" line="10" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftmaxKernel.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_unary_ops_kernel_8h_1a6e3b5d0084b0c499c1d611e575224476" prot="public" static="no">
        <type>void(*)(<ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;)</type>
        <definition>using at::native::unary_fn = typedef void(*)(Tensor&amp;, const Tensor&amp;)</definition>
        <argsstring></argsstring>
        <name>unary_fn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_sparse_utils_8h_1a9e9ea44a12fc1f4a62db750a767de6f9" prot="public" static="no">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>using at::native::SparseTensor = typedef Tensor</definition>
        <argsstring></argsstring>
        <name>SparseTensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseUtils.h" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseUtils.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_sparse_utils_8h_1ad79c2f82647d8ae6a542ab26c574e698" prot="public" static="no">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>using at::native::LongTensor = typedef Tensor</definition>
        <argsstring></argsstring>
        <name>LongTensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseUtils.h" line="10" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseUtils.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_sparse_utils_8h_1aaee97ca184af52e723853fdd290762de" prot="public" static="no">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>using at::native::IntTensor = typedef Tensor</definition>
        <argsstring></argsstring>
        <name>IntTensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseUtils.h" line="11" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseUtils.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_sparse_utils_8h_1abdfc470acca07569af9cbf64ebf00b6e" prot="public" static="no">
        <type><ref refid="structat_1_1_type" kindref="compound">Type</ref></type>
        <definition>using at::native::SparseType = typedef Type</definition>
        <argsstring></argsstring>
        <name>SparseType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseUtils.h" line="12" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseUtils.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_limits_8h_1a2e1b75e7c6d94749f22ee9dcf496db6f" prot="public" static="yes" mutable="no">
        <type>int64_t</type>
        <definition>int64_t at::native::MKL_LONG_MAX</definition>
        <argsstring></argsstring>
        <name>MKL_LONG_MAX</name>
        <initializer>= ((1LL &lt;&lt; (sizeof(MKL_LONG) * 8 - 2)) - 1) * 2 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/mkl/Limits.h" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/mkl/Limits.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_activation_8cpp_1ae5bf3afe99e3e37a197fff021e805d5b" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double at::native::SELU_ALPHA</definition>
        <argsstring></argsstring>
        <name>SELU_ALPHA</name>
        <initializer>= 1.6732632423543772848170429916717</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_activation_8cpp_1aac2688000fe2f3dfbe7f37a48f704f46" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double at::native::SELU_SCALE</definition>
        <argsstring></argsstring>
        <name>SELU_SCALE</name>
        <initializer>= 1.0507009873554804934193349852946</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" line="10" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_unary_ops_kernel_8cpp_1a9b9230a0e856d1f5df1b2afb39c19143" prot="public" static="no" mutable="no">
        <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>const Tensor &amp; at::native::self</definition>
        <argsstring></argsstring>
        <name>self</name>
        <initializer>{   AT_DISPATCH_FLOATING_TYPES(self.type(), &quot;acos&quot;, [&amp;] {   if (self.is_contiguous() &amp;&amp; result.is_contiguous()) {   vml::vacos (   result.data&lt;scalar_t&gt;(), self.data&lt;scalar_t&gt;(), self.numel());     } else {   static constexpr int64_t WIDTH = 131072 / sizeof(scalar_t);   CPU_tensor_parallel_kernel_apply2&lt;scalar_t, scalar_t&gt;(   result,   self,   [](int64_t size,   scalar_t* x,   scalar_t* y,   int64_t stridex,   int64_t stridey) {   if (stridex == 1 &amp;&amp; stridey == 1) {   vml::vacos (x, y, size);   } else {   for (int64_t i = 0; i &lt; size; i += WIDTH) {   scalar_t buffer[WIDTH];   int64_t width = WIDTH;   width = std::min(width, size - i);   for (int64_t j = 0; j &lt; width; j++)   buffer[j] = y[stridey * (i + j)];   vml::vacos (buffer, buffer, width);   for (int64_t j = 0; j &lt; width; j++)   x[stridex * (i + j)] = buffer[j];   }   }   });   }   })</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="147" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_cu_f_f_t_utils_8h_1a78cdb3965e41f8afa479ac1167b7d883" prot="public" static="no" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int at::native::max_rank</definition>
        <argsstring></argsstring>
        <name>max_rank</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CuFFTUtils.h" line="16" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CuFFTUtils.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_descriptors_8cpp_1ab96fe2dc4eb3813191ca51bab89c489a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string at::native::cudnnTypeToString</definition>
        <argsstring>(cudnnDataType_t dtype)</argsstring>
        <name>cudnnTypeToString</name>
        <param>
          <type>cudnnDataType_t</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.cpp" line="57" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.cpp" bodystart="57" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="_descriptors_8cpp_1a485f066a379a22598cf84ce1d14bb0bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; at::native::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const TensorDescriptor &amp;d)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1native_1_1_tensor_descriptor" kindref="compound">TensorDescriptor</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.cpp" line="84" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.cpp" bodystart="84" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="cudnn_2_descriptors_8h_1a81589a3c27d72e220e1db6b8a82d8422" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int at::native::dataSize</definition>
        <argsstring>(cudnnDataType_t dataType)</argsstring>
        <name>dataSize</name>
        <param>
          <type>cudnnDataType_t</type>
          <declname>dataType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.h" line="55" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.h" bodystart="55" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="cudnn_2_descriptors_8h_1aafb71c4d8728b97c7b16eea71b8df65f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::fixSizeOneDimStride</definition>
        <argsstring>(int dim, const int *size, int *stride)</argsstring>
        <name>fixSizeOneDimStride</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.h" line="74" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.h" bodystart="74" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="cudnn_2_descriptors_8h_1a8eb9fa7d5f5a83b527d4ebd38a4c713b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>cudnnStatus_t</type>
        <definition>cudnnStatus_t at::native::cudnnRestoreDropoutDescriptor</definition>
        <argsstring>(cudnnDropoutDescriptor_t dropoutDesc, cudnnHandle_t handle, float dropout, void *states, size_t stateSizeInBytes, unsigned long long seed)</argsstring>
        <name>cudnnRestoreDropoutDescriptor</name>
        <param>
          <type>cudnnDropoutDescriptor_t</type>
          <declname>dropoutDesc</declname>
        </param>
        <param>
          <type>cudnnHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>float</type>
          <declname>dropout</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>states</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>stateSizeInBytes</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.h" line="218" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.h" bodystart="218" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="_handles_8cpp_1a8a5a17bfab7db3dba6bc8b43c7e46cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cudnnHandle_t</type>
        <definition>AT_CUDA_API cudnnHandle_t at::native::getCudnnHandle</definition>
        <argsstring>()</argsstring>
        <name>getCudnnHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Handles.cpp" line="42" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Handles.cpp" bodystart="42" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="_types_8cpp_1a87a2e96ae531020599198dbe44d7b535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cudnnDataType_t</type>
        <definition>cudnnDataType_t at::native::getCudnnDataType</definition>
        <argsstring>(const at::Tensor &amp;tensor)</argsstring>
        <name>getCudnnDataType</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Types.cpp" line="7" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Types.cpp" bodystart="7" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="_types_8cpp_1a9bd3ca7b059ba8a4e1e03b6eb02f05ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::cudnn_version</definition>
        <argsstring>()</argsstring>
        <name>cudnn_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Types.cpp" line="20" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Types.cpp" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2cudnn_2utils_8h_1af839a6fe2f661871679d39bbbec58bb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::native::setCuDNNStreamToCurrent</definition>
        <argsstring>()</argsstring>
        <name>setCuDNNStreamToCurrent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Utils.h" line="11" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Utils.h" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2cudnn_2utils_8h_1a0e01e51d44c55a0d941d740df28c4acc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::contiguousIfZeroInStrides</definition>
        <argsstring>(const Tensor &amp;t)</argsstring>
        <name>contiguousIfZeroInStrides</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Utils.h" line="20" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Utils.h" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="mkl_2_exceptions_8h_1acef5265c7815cb3103bb4cdbffd19ca2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::MKL_DFTI_CHECK</definition>
        <argsstring>(MKL_INT status)</argsstring>
        <name>MKL_DFTI_CHECK</name>
        <param>
          <type>MKL_INT</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/mkl/Exceptions.h" line="10" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/mkl/Exceptions.h" bodystart="10" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="_activation_8cpp_1a27ed5879ea717c06ab48ef393d38a291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::relu</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>relu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" line="12" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="_activation_8cpp_1a8bc9cfed0d46b74ead9c4b425c9ec424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::relu_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>relu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" line="16" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="_activation_8cpp_1a8440d302f50a05235525b7b2263e851b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::selu</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>selu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" line="20" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="_activation_8cpp_1a4afa939ce138c2ab37e7042a31f116c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::selu_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>selu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" line="24" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="_activation_8cpp_1adb4eb212732127b2f9dc3ba8fb727797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::rrelu</definition>
        <argsstring>(const Tensor &amp;self, Scalar lower, Scalar upper, bool training, Generator *generator)</argsstring>
        <name>rrelu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>upper</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" line="28" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="_activation_8cpp_1afc73ed601db54d194e517bc949ad7598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::rrelu_</definition>
        <argsstring>(Tensor &amp;self, Scalar lower, Scalar upper, bool training, Generator *generator)</argsstring>
        <name>rrelu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>upper</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" line="32" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="_activation_8cpp_1a28dec37483b8f2949d2b64c03562548e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::hardshrink_cpu</definition>
        <argsstring>(const Tensor &amp;self, Scalar lambd)</argsstring>
        <name>hardshrink_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lambd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" line="36" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" bodystart="36" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="_activation_8cpp_1a20d5856f7b1251a857b03a64db7c5be3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::hardshrink_backward_cpu</definition>
        <argsstring>(const Tensor &amp;grad, const Tensor &amp;self, Scalar lambd)</argsstring>
        <name>hardshrink_backward_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lambd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Activation.cpp" bodystart="53" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1ab494bdcb965b59a9dc48de66e3bd14a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; at::native::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const ConvParams &amp;params)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1native_1_1_conv_params" kindref="compound">ConvParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="31" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="31" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1ab7c9ae77303052c08112119264ce1d71" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::check_input_shape_forward</definition>
        <argsstring>(const at::Tensor &amp;input, const at::Tensor &amp;weight, const at::Tensor &amp;bias, int64_t groups, bool transposed)</argsstring>
        <name>check_input_shape_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="145" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="145" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1a869c4da022ebff9b78ffb43f5f465697" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>static auto at::native::view4d</definition>
        <argsstring>(const at::Tensor &amp;tensor) -&gt; at::Tensor</argsstring>
        <name>view4d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="201" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1a07557c7e48d4929832e7af88884601af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>static auto at::native::view3d</definition>
        <argsstring>(const at::Tensor &amp;tensor) -&gt; at::Tensor</argsstring>
        <name>view3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="206" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1afa8997f6e2727f4b40eaf684fe976796" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>static at::Tensor at::native::subtensor</definition>
        <argsstring>(at::Tensor &amp;tensor, int dim, int groups, int g)</argsstring>
        <name>subtensor</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>int</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="212" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="212" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1ad5d520e21721a1bd4e1e68452e0d3523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::conv1d</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation, int64_t groups)</argsstring>
        <name>conv1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="221" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="221" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1ab2de8fe36411169888f12cbdca038ae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::conv2d</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation, int64_t groups)</argsstring>
        <name>conv2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="228" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="228" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1a83efac84fa642e3de2bdf497b835962c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::conv3d</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation, int64_t groups)</argsstring>
        <name>conv3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="235" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="235" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1acd29691001fc58306d89c7af734797f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::conv_transpose1d</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, IntList stride, IntList padding, IntList output_padding, int64_t groups, IntList dilation)</argsstring>
        <name>conv_transpose1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="242" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="242" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1aafbc0af0b4f4fb4827bec71f7e8a1f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::conv_transpose2d</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, IntList stride, IntList padding, IntList output_padding, int64_t groups, IntList dilation)</argsstring>
        <name>conv_transpose2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="249" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="249" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1ab398af001def3bbdcb770cd8a45668a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::conv_transpose3d</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, IntList stride, IntList padding, IntList output_padding, int64_t groups, IntList dilation)</argsstring>
        <name>conv_transpose3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="256" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="256" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1ac6ebd75a318b2db108b587dd968b0895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::convolution</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation, bool transposed, IntList output_padding, int64_t groups)</argsstring>
        <name>convolution</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="263" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="263" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1ab1bac2aab09d0b001c12ea19fa68a538" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; int64_t &gt;</type>
        <definition>static std::vector&lt;int64_t&gt; at::native::convolution_expand_param_if_needed</definition>
        <argsstring>(IntList list_param, const char *param_name, int64_t expected_dim)</argsstring>
        <name>convolution_expand_param_if_needed</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>list_param</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>param_name</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>expected_dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="273" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="273" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1a25b3cc049cff2a2d27f3819888bbd1ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::_convolution</definition>
        <argsstring>(const Tensor &amp;input_r, const Tensor &amp;weight_r, const Tensor &amp;bias_r, IntList stride_, IntList padding_, IntList dilation_, bool transposed_, IntList output_padding_, int64_t groups_, bool benchmark, bool deterministic, bool cudnn_enabled)</argsstring>
        <name>_convolution</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input_r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight_r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias_r</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding_</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cudnn_enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="288" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="288" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1a52bd9d476322fcb83e9821a1d4e4c669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::_convolution_nogroup</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation, bool transposed, IntList output_padding)</argsstring>
        <name>_convolution_nogroup</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="399" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="399" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1aa6975829e028d7df23c924f47bb62a06" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::subvariable</definition>
        <argsstring>(const Tensor &amp;var, int dim, int groups, int g)</argsstring>
        <name>subvariable</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>int</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="458" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="458" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_8cpp_1af148b1623491f641fe2578dbdd464b3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor,Tensor,Tensor&gt; at::native::_convolution_double_backward</definition>
        <argsstring>(const Tensor &amp;ggI, const Tensor &amp;ggW_r, const Tensor &amp;ggb, const Tensor &amp;gO_r, const Tensor &amp;weight_r, const Tensor &amp;input, IntList stride_, IntList padding_, IntList dilation_, bool transposed_, IntList output_padding_, int64_t groups_, bool benchmark, bool deterministic, bool cudnn_enabled, std::array&lt; bool, 3 &gt; output_mask)</argsstring>
        <name>_convolution_double_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ggI</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ggW_r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ggb</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>gO_r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight_r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding_</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cudnn_enabled</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" line="464" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Convolution.cpp" bodystart="464" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_t_b_c_8cpp_1aef94647f9ab3327f40279605d6cbdab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::conv_tbc</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, const Tensor &amp;bias, int64_t pad)</argsstring>
        <name>conv_tbc</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ConvolutionTBC.cpp" line="8" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ConvolutionTBC.cpp" bodystart="8" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="_convolution_t_b_c_8cpp_1a1d1463c5c62f9d607a241a8f73ec8fcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor, Tensor&gt; at::native::conv_tbc_backward</definition>
        <argsstring>(const Tensor &amp;dOutput, const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, int64_t pad)</argsstring>
        <name>conv_tbc_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dOutput</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ConvolutionTBC.cpp" line="60" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ConvolutionTBC.cpp" bodystart="60" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_kernel_8cpp_1adc3b16a818365ae44a0289437c42829c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(sum_kernel, &amp;sum_kernel_impl)</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>sum_kernel</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>sum_kernel_impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/ReduceOpsKernel.cpp" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_kernel_8cpp_1ab8353e5e37a9e786d0a96ce285cff7c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(prod_kernel, &amp;prod_kernel_impl)</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>prod_kernel</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>prod_kernel_impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/ReduceOpsKernel.cpp" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_kernel_8h_1af7af4a6729f8b049a5f78eacd0259404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(reduce_fn, sum_kernel)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>reduce_fn</type>
        </param>
        <param>
          <type>sum_kernel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/ReduceOpsKernel.h" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_kernel_8h_1a008c9183677a605e231c7ff748313e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(reduce_fn, prod_kernel)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>reduce_fn</type>
        </param>
        <param>
          <type>prod_kernel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/ReduceOpsKernel.h" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_soft_max_kernel_8cpp_1ad8a74fc6981ea9f911f15205df32835b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(softmax_lastdim_kernel, &amp;softmax_lastdim_kernel_impl)</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>softmax_lastdim_kernel</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>softmax_lastdim_kernel_impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftMaxKernel.cpp" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_soft_max_kernel_8cpp_1a3fe31bd62c958b72cab6015b47ea8b26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(log_softmax_lastdim_kernel, &amp;log_softmax_lastdim_kernel_impl)</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>log_softmax_lastdim_kernel</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>log_softmax_lastdim_kernel_impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftMaxKernel.cpp" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_soft_max_kernel_8cpp_1acb511b83c1899d271c59e389ada96e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(softmax_backward_lastdim_kernel, &amp;softmax_backward_lastdim_kernel_impl)</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>softmax_backward_lastdim_kernel</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>softmax_backward_lastdim_kernel_impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftMaxKernel.cpp" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_soft_max_kernel_8cpp_1a262eb0ea0ef3c530ee7f2fdcac06abcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(log_softmax_backward_lastdim_kernel, &amp;log_softmax_backward_lastdim_kernel_impl)</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>log_softmax_backward_lastdim_kernel</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>log_softmax_backward_lastdim_kernel_impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftMaxKernel.cpp" line="264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_softmax_kernel_8h_1abe4c7e8860e812e9a49e4780744b1ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(forward_fn, softmax_lastdim_kernel)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>forward_fn</type>
        </param>
        <param>
          <type>softmax_lastdim_kernel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftmaxKernel.h" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_softmax_kernel_8h_1a8561b0cdd26dfdbfe2cf6d71eedd1ee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(forward_fn, log_softmax_lastdim_kernel)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>forward_fn</type>
        </param>
        <param>
          <type>log_softmax_lastdim_kernel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftmaxKernel.h" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_softmax_kernel_8h_1afba50c5841e9feffccc69dd4960fccbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(backward_fn, softmax_backward_lastdim_kernel)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>backward_fn</type>
        </param>
        <param>
          <type>softmax_backward_lastdim_kernel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftmaxKernel.h" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_softmax_kernel_8h_1a6ce4d0dbc4abc65b01c643b4830fe367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(backward_fn, log_softmax_backward_lastdim_kernel)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>backward_fn</type>
        </param>
        <param>
          <type>log_softmax_backward_lastdim_kernel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftmaxKernel.h" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1a16a3c7c0e0fb7680aa350405e59258bb" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(sigmoidImpl, &amp;sigmoid_kernel) static void acos_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>sigmoidImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>sigmoid_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1a354ba5555036d6ff5b78e28fa609b262" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(acosImpl, &amp;acos_kernel) static void asin_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>acosImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>acos_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1ac23fea00d1d68b1e4e58279bf72ffe4d" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(asinImpl, &amp;asin_kernel) static void atan_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>asinImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>asin_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1ad5feb9fb7b1f36f7c425d768e98764da" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(atanImpl, &amp;atan_kernel) static void ceil_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>atanImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>atan_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1aee284aa3579100417e72c83e16dc99af" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(ceilImpl, &amp;ceil_kernel) static void cos_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>ceilImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>ceil_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1a04c98e57c520eaaac1ed112ee9ad550e" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(cosImpl, &amp;cos_kernel) static void erf_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>cosImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>cos_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1afd24ccd58142ef5d71eda877271dcbb3" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(erfImpl, &amp;erf_kernel) static void erfc_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>erfImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>erf_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1a6f1a21455705a3260c9f69ccf950c9c3" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(erfcImpl, &amp;erfc_kernel) static void exp_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>erfcImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>erfc_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1af7be2beb0502ef303155555e6f007a64" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(expImpl, &amp;exp_kernel) static void expm1_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>expImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>exp_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1ab5a6d62283990b1eb436c5611b553f0c" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(expm1Impl, &amp;expm1_kernel) static void floor_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>expm1Impl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>expm1_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1a3a5f894c73650d8a0fc89c29a6b01d7c" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(floorImpl, &amp;floor_kernel) static void log_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>floorImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>floor_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1a97cf7e07da6ea9e380d6aaeee1a75621" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(logImpl, &amp;log_kernel) static void log10_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>logImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>log_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1afa2aa1562f921eaf002de415e5caa567" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(log10Impl, &amp;log10_kernel) static void log1p_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>log10Impl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>log10_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1a8231d2a6838ff3cacad2be23373af056" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(log1pImpl, &amp;log1p_kernel) static void log2_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>log1pImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>log1p_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1adfcf2834a863da2880cbc6ad3dc444c3" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(log2Impl, &amp;log2_kernel) static void round_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>log2Impl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>log2_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1a81deba143f847c34db57f61367405f8b" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(roundImpl, &amp;round_kernel) static void rsqrt_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>roundImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>round_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1ad82948a9e5e4b887ebf8bf847cc52416" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(rsqrtImpl, &amp;rsqrt_kernel) static void sin_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>rsqrtImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>rsqrt_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1a829c0e9637e5b1c6f7c27d4e3dfc32e7" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(sinImpl, &amp;sin_kernel) static void sqrt_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>sinImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>sin_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1a81520965ac5756dffe4f7f0569603228" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(sqrtImpl, &amp;sqrt_kernel) static void tan_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>sqrtImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>sqrt_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1ae702ab85518cb322976e32d7763de772" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(tanImpl, &amp;tan_kernel) static void tanh_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>tanImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>tan_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8cpp_1aef4ca4664e6a9b4d036c4194d59213c3" prot="public" static="no" const="no" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::REGISTER_DISPATCH</definition>
        <argsstring>(tanhImpl, &amp;tanh_kernel) static void trunc_kernel(Tensor &amp;result</argsstring>
        <name>REGISTER_DISPATCH</name>
        <param>
          <type>tanhImpl</type>
        </param>
        <param>
          <type>&amp;</type>
          <declname>tanh_kernel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.cpp" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a8fcad3ad12b66e9409411aa45f7bf590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, absImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>absImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1ae4237129bc57823a2322886a37775902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, acosImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>acosImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a9d142939311733efeca546c5f076610f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, asinImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>asinImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a0e9107e77b706395f1440b5df25053ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, atanImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>atanImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="14" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a50491ae13d458c5fd7c5645da407482f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, ceilImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>ceilImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1ac4428d24a09f7c5759f2e86aff7368e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, cosImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>cosImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a40e2fe3d326e3cd172a6d901c1fc0d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, erfImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>erfImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1aa20f7d18c4910f36ed3ab9a0c6c6cee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, erfcImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>erfcImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a4ddb0798b151f8730f402075b9e2492c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, expImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>expImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a13646372394d9cbac7b1925fbbc08578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, expm1Impl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>expm1Impl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a0bb761b696bec869d577802ed253c4ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, floorImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>floorImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a89956cfcc75c7d7606d32c29a3181007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, logImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>logImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1af2bc41bb64cd6b1223c3c81a7ce95ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, log10Impl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>log10Impl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1ac8d2e8966171ed214fe87de99ea4ecbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, log1pImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>log1pImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a0b7e0574eace21e998a90a5865918ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, log2Impl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>log2Impl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a42fe2ecafb509cc2a96d562a8a4b1a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, roundImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>roundImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a8f2a64344ded9d9615489f20d2ddf3e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, rsqrtImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>rsqrtImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1af301e5ef201123b6d5c852293f7a6167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, sigmoidImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>sigmoidImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a3f797457ef2bf91ea0a901027829cae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, sinImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>sinImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a77c77f260b81b3a4ff7ac1f6517d864e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, sqrtImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>sqrtImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1ad5ace61c9da87e0b708d33c5a3ca2151" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, tanImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>tanImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1a3d60a4efae97831ed22672dddbea3835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, tanhImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>tanhImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_kernel_8h_1adead5b72279f3e2cc758ecae954b6f39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DECLARE_DISPATCH</definition>
        <argsstring>(unary_fn, truncImpl)</argsstring>
        <name>DECLARE_DISPATCH</name>
        <param>
          <type>unary_fn</type>
        </param>
        <param>
          <type>truncImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_reduce_ops_8cpp_1a50ff3812d7de0d24fe860b39fbd6cf29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_sum_cuda</definition>
        <argsstring>(const Tensor &amp;self_)</argsstring>
        <name>_sum_cuda</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAReduceOps.cpp" line="6" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAReduceOps.cpp" bodystart="6" bodyend="6"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_reduce_ops_8cpp_1abf38d0817a267bfcac52d24dbdaaf5b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_prod_cuda</definition>
        <argsstring>(const Tensor &amp;self_)</argsstring>
        <name>_prod_cuda</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAReduceOps.cpp" line="8" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAReduceOps.cpp" bodystart="8" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_reduce_ops_8cpp_1afe57083a1af0537a71edee81e9176103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sum_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>_sum_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAReduceOps.cpp" line="10" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAReduceOps.cpp" bodystart="10" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_reduce_ops_8cpp_1a9c3b245b5f8b3bd1fc1dcd35eb0854cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_prod_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>_prod_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAReduceOps.cpp" line="19" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAReduceOps.cpp" bodystart="19" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a4fe8f7b339fe4a3b893a38d9c13d7f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_clamp__cuda</definition>
        <argsstring>(Tensor &amp;self, Scalar min, Scalar max)</argsstring>
        <name>_clamp__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="5" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="5" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1ab1e031c52afcb7b3bb687071d249e7df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_clamp_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar min, Scalar max)</argsstring>
        <name>_clamp_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="9" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a1e4a96367503728b1e68f1fba294ff48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_clamp_max__cuda</definition>
        <argsstring>(Tensor &amp;self, Scalar max)</argsstring>
        <name>_clamp_max__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="19" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a619e6c9333cefb01e217db2c5c0a21a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_clamp_max_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar max)</argsstring>
        <name>_clamp_max_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="23" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1ab1c6c56fcc7d71c94c0444cfeeb1887d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_clamp_min__cuda</definition>
        <argsstring>(Tensor &amp;self, Scalar min)</argsstring>
        <name>_clamp_min__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="29" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1aa1286faf21a74c125cacfaf16947dd35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_clamp_min_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar min)</argsstring>
        <name>_clamp_min_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="33" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a701c8878e295d6be704b616a6e111998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_abs__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_abs__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="50" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a52dd1e7556d71541ac0d9bb85cdf622c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_abs_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_abs_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="50" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a72d666b631bb1876c3490440c7e13841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_acos__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_acos__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="51" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1aba784de74a84671220e1ef506997e311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_acos_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_acos_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="51" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a413d7732ec2a51ff8b63937c653c36bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_asin__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_asin__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="52" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1aab96fa20929da82e57cd287941e6e8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_asin_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_asin_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="52" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a97f39a9410358c44b8980e8254889143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_atan__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_atan__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a27df1d0bf07cc72bd7a1660156ddf454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_atan_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_atan_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a2a7aac03a87334d118dbc6ba01c4bec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_ceil__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_ceil__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="54" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1aacce9d7a8773ede9a917babc476d8c53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_ceil_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_ceil_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="54" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a003a5c5e8fe20061919861013ee3cb16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_cos__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_cos__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="55" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1af79d70a6e1ffb3f94d51449bc05aa3c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_cos_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_cos_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="55" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1adad2332f2afdfa9da6dd3d2873f232ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_cosh__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_cosh__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="56" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a915d2a712d03822356697c5506bd017b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_cosh_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_cosh_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="56" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a7a50784261ceaf77005e3db0e4dde630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_erf__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_erf__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="57" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a21f7cc0801c86e02ba3454f5a8e88c31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_erf_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_erf_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="57" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1afbc6033ec0ab9a859c427b11899955f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_erfc__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_erfc__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="58" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1ae74c52910cb247092349bb1fc829b218" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_erfc_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_erfc_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="58" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a785d7add9057c16cb245861237f1d3a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_exp__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_exp__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="59" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a0d6ca894d67d49e110de53f71a080e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_exp_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_exp_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="59" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a370deff6e1d82464cf4e8389d01d4a9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_expm1__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_expm1__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="60" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1aaec880dfb6cfcef52af68f45dd8bc1a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_expm1_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_expm1_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="60" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a0c7a95bb8902d7fcc81002a52aae1e9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_floor__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_floor__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="61" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a9b4def2cdf7e14854a4b1f645fd10b43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_floor_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_floor_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="61" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a925c4b367c5415865c18ba176ea5cbab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_log__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="62" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1ab17c7e15c067651870731c514fd78711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_log_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="62" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a2db70bb265836e6c59d5efd72ec2a8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log10__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_log10__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="63" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a177212bb61db6978bda3296630c6ed94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log10_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_log10_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="63" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a270496e8256b068a18779cf28667af36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log1p__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_log1p__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="64" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a0cd2b1f763995a472c08583a60833cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log1p_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_log1p_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="64" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a58a68c5b7c36160c566469edb80a9d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log2__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_log2__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="65" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1ae2b3f95140860b5687a41eed34030ec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log2_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_log2_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="65" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a9bbc30bf39db56918a94897bb6f3f30f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_round__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_round__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="66" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1abccbe5c7be944bf7ba867315405e176e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_round_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_round_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="66" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a024fad3dc9f39b5b13c2fbfaf94ddef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_rsqrt__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_rsqrt__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="67" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a394bc61442863d23a279e4b4850bfae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_rsqrt_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_rsqrt_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="67" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a8286cfa5200aba27c54e959542962932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sigmoid__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_sigmoid__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="68" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1ad642917fac663a9a8bbb135b8b5e24b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sigmoid_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_sigmoid_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="68" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a0fca1bb2a242738f910d27c52f6dbcbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sin__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_sin__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="69" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a8c0882da22a40a6221e7e5fe63818736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sin_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_sin_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="69" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1aaaafb5992194ea029c147d84da8b57c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sinh__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_sinh__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="70" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a16a76398edc08a00e9b39ccf8f0662a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sinh_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_sinh_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="70" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1ac1fe5bc714c7def089ffb8aee8ddbc79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sqrt__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_sqrt__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="71" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1ac123513059f89cac6229c7bf2b9b1f81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sqrt_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_sqrt_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="71" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a4af71ebc91822f1befea832e8abcc0f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_tan__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_tan__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="72" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a7d4d2da4abd7bc097265c701de0ebd4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_tan_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_tan_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="72" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a9defb5580c4d6e9d0c33a735d3ab831b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_tanh__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_tanh__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="73" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1abbf3650c564d6385be5edbec6ebf99f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_tanh_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_tanh_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="73" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1a6fa913529edae3a19e4951101bbdaae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_trunc__cuda</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_trunc__cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="74" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="_c_u_d_a_unary_ops_8cpp_1aaea2301c8135f14a43b5ecedbf8390ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_trunc_out_cuda</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_trunc_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" line="74" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CUDAUnaryOps.cpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="_cu_f_f_t_utils_8h_1a70272e4e847afab449356edebc332230" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string at::native::_cudaGetErrorEnum</definition>
        <argsstring>(cufftResult error)</argsstring>
        <name>_cudaGetErrorEnum</name>
        <param>
          <type>cufftResult</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CuFFTUtils.h" line="18" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CuFFTUtils.h" bodystart="18" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="_cu_f_f_t_utils_8h_1a3f328f07eb3ddd91719c1fe72abc4cfd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::CUFFT_CHECK</definition>
        <argsstring>(cufftResult error)</argsstring>
        <name>CUFFT_CHECK</name>
        <param>
          <type>cufftResult</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CuFFTUtils.h" line="63" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CuFFTUtils.h" bodystart="63" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="_affine_grid_generator_8cpp_1a7aef0be5cbe672523e5277d6c21755e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::cudnn_affine_grid_generator_forward</definition>
        <argsstring>(const Tensor &amp;theta, int64_t N, int64_t C, int64_t H, int64_t W)</argsstring>
        <name>cudnn_affine_grid_generator_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>C</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>H</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>W</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/AffineGridGenerator.cpp" line="12" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/AffineGridGenerator.cpp" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="_affine_grid_generator_8cpp_1a008d49539a4f1ee20a6d1b5e81e9f7bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::cudnn_affine_grid_generator_backward</definition>
        <argsstring>(const Tensor &amp;grad_theta, int64_t N, int64_t C, int64_t H, int64_t W)</argsstring>
        <name>cudnn_affine_grid_generator_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_theta</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>C</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>H</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>W</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/AffineGridGenerator.cpp" line="18" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/AffineGridGenerator.cpp" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2batchnorm_8cpp_1aa3a9d3ad2f6a2fe36f4197a390b28c2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor, Tensor&gt; at::native::cudnn_batch_norm</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, const Tensor &amp;running_mean, const Tensor &amp;running_var, bool training, double exponential_average_factor, double epsilon)</argsstring>
        <name>cudnn_batch_norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type>double</type>
          <declname>exponential_average_factor</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/BatchNorm.cpp" line="12" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/BatchNorm.cpp" bodystart="12" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2batchnorm_8cpp_1acb6f09e03badcd87f63267850af86eda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor, Tensor&gt; at::native::cudnn_batch_norm_backward</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;grad_output, const Tensor &amp;weight, const Tensor &amp;running_mean, const Tensor &amp;running_var, const Tensor &amp;save_mean, const Tensor &amp;save_var, double epsilon)</argsstring>
        <name>cudnn_batch_norm_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_var</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>save_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>save_var</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/BatchNorm.cpp" line="19" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/BatchNorm.cpp" bodystart="19" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2conv_8cpp_1ac1d2ee51b7ca7628bd0fb957b7e268f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::cudnn_convolution</definition>
        <argsstring>(const at::Tensor &amp;input, const at::Tensor &amp;weight, const at::Tensor &amp;bias, IntList padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic)</argsstring>
        <name>cudnn_convolution</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" line="13" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" bodystart="13" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2conv_8cpp_1a6762c7bd9309eb9e5aa14f2e35ebc4ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::cudnn_convolution_backward_input</definition>
        <argsstring>(IntList input_size, const at::Tensor &amp;grad_output, const at::Tensor &amp;weight, IntList padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic)</argsstring>
        <name>cudnn_convolution_backward_input</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" line="20" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2conv_8cpp_1afe818e42ea95caaee08945e9b579c58c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::cudnn_convolution_backward_weight</definition>
        <argsstring>(IntList weight_size, const at::Tensor &amp;grad_output, const at::Tensor &amp;input, IntList padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic)</argsstring>
        <name>cudnn_convolution_backward_weight</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>weight_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" line="27" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" bodystart="27" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2conv_8cpp_1aa74e4fc5116187c757d7eb790aa68d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::cudnn_convolution_backward_bias</definition>
        <argsstring>(const at::Tensor &amp;grad_output)</argsstring>
        <name>cudnn_convolution_backward_bias</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" line="34" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2conv_8cpp_1a4f571d108ebd0930501ec5605f3bbccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;at::Tensor,at::Tensor,at::Tensor&gt; at::native::cudnn_convolution_backward</definition>
        <argsstring>(const at::Tensor &amp;input, const at::Tensor &amp;grad_output, const at::Tensor &amp;weight, IntList padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic, std::array&lt; bool, 3 &gt; output_mask)</argsstring>
        <name>cudnn_convolution_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" line="39" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2conv_8cpp_1a2964874cb828e9dc9ca7dda37deb4792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::cudnn_convolution_transpose</definition>
        <argsstring>(const at::Tensor &amp;input, const at::Tensor &amp;weight, const at::Tensor &amp;bias, IntList padding, IntList output_padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic)</argsstring>
        <name>cudnn_convolution_transpose</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" line="46" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2conv_8cpp_1a4cf7d2ce18a9b6310e9f9c8f9ed0d5b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::cudnn_convolution_transpose_backward_input</definition>
        <argsstring>(const at::Tensor &amp;grad_output, const at::Tensor &amp;weight, IntList padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic)</argsstring>
        <name>cudnn_convolution_transpose_backward_input</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2conv_8cpp_1a91d93f2fedf021bd94b2cf2e0e4c30a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::cudnn_convolution_transpose_backward_weight</definition>
        <argsstring>(IntList weight_size, const at::Tensor &amp;grad_output, const at::Tensor &amp;input, IntList padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic)</argsstring>
        <name>cudnn_convolution_transpose_backward_weight</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>weight_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" line="60" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2conv_8cpp_1a259b95f11b4da08d4ad48cc228d2560d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;at::Tensor,at::Tensor,at::Tensor&gt; at::native::cudnn_convolution_transpose_backward</definition>
        <argsstring>(const at::Tensor &amp;input, const at::Tensor &amp;grad_output, const at::Tensor &amp;weight, IntList padding, IntList output_padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic, std::array&lt; bool, 3 &gt; output_mask)</argsstring>
        <name>cudnn_convolution_transpose_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" line="67" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/Conv.cpp" bodystart="67" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="_grid_sampler_8cpp_1acc454187850ba0a650f4a1ddf0c53f9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::cudnn_grid_sampler_forward</definition>
        <argsstring>(const Tensor &amp;input_t, const Tensor &amp;grid_t)</argsstring>
        <name>cudnn_grid_sampler_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input_t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid_t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/GridSampler.cpp" line="12" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/GridSampler.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="_grid_sampler_8cpp_1aab1edb2373d9310fd245a54c920bb406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::native::cudnn_grid_sampler_backward</definition>
        <argsstring>(const Tensor &amp;input_t, const Tensor &amp;grid_t, const Tensor &amp;grad_output_t)</argsstring>
        <name>cudnn_grid_sampler_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input_t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid_t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output_t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/GridSampler.cpp" line="17" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/GridSampler.cpp" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2rnn_8cpp_1a0e77cedf7dab17af4107fce794c6d0f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_cudnn_rnn_flatten_weight</definition>
        <argsstring>(TensorList weight_arr, int64_t weight_stride0, int64_t input_size, int64_t fn_mode, int64_t fn_hidden_size, int64_t fn_num_layers, bool batch_first, bool fn_bidirectional)</argsstring>
        <name>_cudnn_rnn_flatten_weight</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>weight_arr</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>weight_stride0</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>input_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fn_mode</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fn_hidden_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fn_num_layers</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>batch_first</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fn_bidirectional</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/RNN.cpp" line="16" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/RNN.cpp" bodystart="16" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2rnn_8cpp_1a3ff687ef52e2839a0992be9fd89770d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor, Tensor, Tensor, Tensor&gt; at::native::_cudnn_rnn</definition>
        <argsstring>(const Tensor &amp;input_r, TensorList weight, int64_t weight_stride0, const Tensor &amp;weight_buf_r, const Tensor &amp;hx, const Tensor &amp;cx, int64_t fn_mode, int64_t fn_hidden_size, int64_t fn_num_layers, bool batch_first, double fn_dropout, bool fn_train, bool fn_bidirectional, IntList fn_batch_sizes, const Tensor &amp;fn_dropout_state)</argsstring>
        <name>_cudnn_rnn</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input_r</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>weight_stride0</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight_buf_r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>hx</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fn_mode</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fn_hidden_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fn_num_layers</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>batch_first</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fn_dropout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fn_train</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fn_bidirectional</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>fn_batch_sizes</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>fn_dropout_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/RNN.cpp" line="26" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/RNN.cpp" bodystart="26" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2rnn_8cpp_1a3862d455599af6c484d206d0a9c8ffa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt; &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor, Tensor, std::vector&lt;Tensor&gt; &gt; at::native::_cudnn_rnn_backward</definition>
        <argsstring>(const Tensor &amp;input, TensorList weight, int64_t weight_stride0, const Tensor &amp;weight_buf, const Tensor &amp;hx, const Tensor &amp;cx, const Tensor &amp;output, const Tensor &amp;grad_output_r, const Tensor &amp;grad_hy_r, const Tensor &amp;grad_cy_r, int64_t mode, int64_t hidden_size, int64_t num_layers, bool batch_first, double dropout, bool train, bool bidirectional, IntList batch_sizes, const Tensor &amp;dropout_state, const Tensor &amp;reserve, std::array&lt; bool, 4 &gt; output_mask)</argsstring>
        <name>_cudnn_rnn_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>weight_stride0</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight_buf</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>hx</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output_r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_hy_r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_cy_r</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>hidden_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_layers</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>batch_first</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dropout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>train</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bidirectional</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>batch_sizes</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dropout_state</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>reserve</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 4 &gt;</type>
          <declname>output_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/RNN.cpp" line="38" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/RNN.cpp" bodystart="38" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2cudnn_2rnn_8cpp_1a1abfecdc27c48d5729cf187e9c08f24a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_cudnn_init_dropout_state</definition>
        <argsstring>(const Type &amp;ty, double dropout, bool train, int64_t dropout_seed)</argsstring>
        <name>_cudnn_init_dropout_state</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>ty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dropout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>train</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dropout_seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/RNN.cpp" line="51" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/RNN.cpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="_dispatch_stub_8cpp_1a4db6f0dbe0a021d40c788225ab8068b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CPUCapability</type>
        <definition>static CPUCapability at::native::compute_cpu_capability</definition>
        <argsstring>()</argsstring>
        <name>compute_cpu_capability</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/DispatchStub.cpp" line="11" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/DispatchStub.cpp" bodystart="11" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="_dispatch_stub_8cpp_1ae379d1292ec5bc4ca28f31485842c0dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CPUCapability</type>
        <definition>CPUCapability at::native::get_cpu_capability</definition>
        <argsstring>()</argsstring>
        <name>get_cpu_capability</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/DispatchStub.cpp" line="39" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/DispatchStub.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="_distance_8cpp_1ae8a9a1ff6d5b46fd3e7957466fdb3de3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::pairwise_distance</definition>
        <argsstring>(const Tensor &amp;x1, const Tensor &amp;x2, double p, double eps, bool keepdim)</argsstring>
        <name>pairwise_distance</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distance.cpp" line="7" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distance.cpp" bodystart="7" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="_distributions_8cpp_1a6c1acb6bb2577d40cfed6b6c9e7487bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::bernoulli</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;p, Generator *gen)</argsstring>
        <name>bernoulli</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>gen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" line="112" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" bodystart="112" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="_distributions_8cpp_1ae4dc57a252bc1b0916aa9fb4a6117ab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::bernoulli</definition>
        <argsstring>(const Tensor &amp;self, double p, Generator *gen)</argsstring>
        <name>bernoulli</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>gen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" line="118" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" bodystart="118" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="_distributions_8cpp_1af0e2008cada5efa60de05201d3b2fd41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::bernoulli</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>bernoulli</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" line="124" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="_distributions_8cpp_1ae604cf2028afcdd52ab0eb2f9d8d041a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::bernoulli_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;p_, Generator *gen)</argsstring>
        <name>bernoulli_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>p_</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>gen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" line="130" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" bodystart="130" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="_distributions_8cpp_1a7e8995bbb8d7af04160fc342e73e67b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::bernoulli_</definition>
        <argsstring>(Tensor &amp;self, double p, Generator *gen)</argsstring>
        <name>bernoulli_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>gen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" line="147" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="_distributions_8cpp_1aee65adcf0a72fe3c60c9493db4b7e454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::bernoulli_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>bernoulli_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" line="152" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="_distributions_8cpp_1af95deb1642152ba5fd03f38de4b88843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_standard_gamma_grad_cpu</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;output)</argsstring>
        <name>_standard_gamma_grad_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" line="156" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" bodystart="156" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="_distributions_8cpp_1ad7961f9b9837e259d490b7e297614371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_s_poisson_cpu</definition>
        <argsstring>(const Tensor &amp;lambda, Generator *gen)</argsstring>
        <name>_s_poisson_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>lambda</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>gen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" line="172" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" bodystart="172" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="_distributions_8cpp_1aaa17cfbfca05742d837c55aedbf929d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_s_gamma_cpu</definition>
        <argsstring>(const Tensor &amp;alpha, Generator *gen)</argsstring>
        <name>_s_gamma_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>gen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" line="186" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Distributions.cpp" bodystart="186" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2embedding_8cpp_1ab71bcbe3e3e89c956c090dde004766d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::embedding</definition>
        <argsstring>(const Tensor &amp;weight, const Tensor &amp;indices, int64_t padding_idx, bool scale_grad_by_freq, bool sparse)</argsstring>
        <name>embedding</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_idx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sparse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Embedding.cpp" line="17" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Embedding.cpp" bodystart="17" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2embedding_8cpp_1a434f90f4536549f6c2415adf3bbfc005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::embedding_backward</definition>
        <argsstring>(const Tensor &amp;grad, const Tensor &amp;indices, int64_t num_weights, int64_t padding_idx, bool scale_grad_by_freq, bool sparse)</argsstring>
        <name>embedding_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_weights</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_idx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sparse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Embedding.cpp" line="34" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Embedding.cpp" bodystart="34" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2embedding_8cpp_1aa2f391d4f8db4ac6674da713e4b00ddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::embedding_sparse_backward</definition>
        <argsstring>(const Tensor &amp;grad_, const Tensor &amp;indices_, int64_t num_weights, int64_t padding_idx, bool scale_grad_by_freq)</argsstring>
        <name>embedding_sparse_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices_</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_weights</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_idx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Embedding.cpp" line="46" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Embedding.cpp" bodystart="46" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2embedding_8cpp_1af5f762d249438263926e3a895a97af1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::embedding_dense_backward_cpu</definition>
        <argsstring>(const Tensor &amp;grad_, const Tensor &amp;indices, int64_t num_weights, int64_t padding_idx, bool scale_grad_by_freq)</argsstring>
        <name>embedding_dense_backward_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_weights</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_idx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Embedding.cpp" line="84" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Embedding.cpp" bodystart="84" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2embedding_8cpp_1ad3e44c24946f5130c697b1fd9ac14c5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::embedding_renorm_cpu_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;indices, double max_norm, double norm_type)</argsstring>
        <name>embedding_renorm_cpu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_norm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>norm_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Embedding.cpp" line="152" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Embedding.cpp" bodystart="152" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="_embedding_bag_8cpp_1aa19c428ba4a5f29400314db52a2ac30e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::make_offset2bag</definition>
        <argsstring>(const Tensor &amp;offsets, const Tensor &amp;indices, Tensor &amp;offset2bag)</argsstring>
        <name>make_offset2bag</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offset2bag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" line="26" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="_embedding_bag_8cpp_1ad50e8877484d79c2b5e05bdee56730aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void at::native::index_select_add</definition>
        <argsstring>(const Tensor &amp;select_indices, const Tensor &amp;add_indices, const Tensor &amp;src, Tensor &amp;output)</argsstring>
        <name>index_select_add</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>select_indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>add_indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" line="38" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" bodystart="38" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="_embedding_bag_8cpp_1a46a3b1747d6863940de5a5774b8b246d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::make_bag_size</definition>
        <argsstring>(const Tensor &amp;offsets, const Tensor &amp;indices, const int64_t mode, Tensor &amp;bag_size)</argsstring>
        <name>make_bag_size</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bag_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" line="59" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" bodystart="59" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="_embedding_bag_8cpp_1adaaa9bc99a5b1bd33bfc1c1511575aff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::apply_bag_size</definition>
        <argsstring>(const Tensor &amp;offsets, const Tensor &amp;indices, const int64_t mode, Tensor &amp;output, const Tensor &amp;bag_size)</argsstring>
        <name>apply_bag_size</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bag_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" line="72" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" bodystart="72" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="_embedding_bag_8cpp_1ad0c84a21b709e6b29b81fe0912d29f63" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::apply_bag_size_backward</definition>
        <argsstring>(const Tensor &amp;offsets, const Tensor &amp;indices, const int64_t mode, Tensor &amp;output, const Tensor &amp;offset2bag, const Tensor &amp;bag_size)</argsstring>
        <name>apply_bag_size_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offset2bag</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bag_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" line="92" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" bodystart="92" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="_embedding_bag_8cpp_1a37e74fe599e8b0e5f62b562cc4466d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename scalar_t</type>
          </param>
        </templateparamlist>
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor, Tensor, Tensor&gt; at::native::embedding_bag_cpu_max</definition>
        <argsstring>(const Tensor &amp;weight, const Tensor &amp;indices, const Tensor &amp;offset2bag, const Tensor &amp;output, const Tensor &amp;bag_size, const Tensor &amp;offsets)</argsstring>
        <name>embedding_bag_cpu_max</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offset2bag</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bag_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" line="112" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" bodystart="112" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="_embedding_bag_8cpp_1a5ce77781d7b9733af32d96a684ec9a9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor, Tensor, Tensor&gt; at::native::embedding_bag</definition>
        <argsstring>(const Tensor &amp;weight, const Tensor &amp;indices, const Tensor &amp;offsets, const bool scale_grad_by_freq, const int64_t mode, bool sparse)</argsstring>
        <name>embedding_bag</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sparse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" line="156" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="_embedding_bag_8cpp_1aca5d1bcb7ca9f3a59aec831c3d50b8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor, Tensor, Tensor&gt; at::native::_embedding_bag_cpu</definition>
        <argsstring>(const Tensor &amp;weight, const Tensor &amp;indices, const Tensor &amp;offsets, const bool scale_grad_by_freq, const int64_t mode, bool sparse)</argsstring>
        <name>_embedding_bag_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sparse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" line="166" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" bodystart="166" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="_embedding_bag_8cpp_1a6b8696257f5ceefc61c306776733987f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_embedding_bag_backward</definition>
        <argsstring>(const Tensor &amp;grad, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;offset2bag, const Tensor &amp;bag_size_, const Tensor &amp;max_indices_, int64_t num_weights, bool scale_grad_by_freq, int64_t mode, bool sparse)</argsstring>
        <name>_embedding_bag_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offset2bag</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bag_size_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>max_indices_</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_weights</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sparse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" line="211" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" bodystart="211" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="_embedding_bag_8cpp_1ab978c061d8ff58f3500c6bcb602868de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_embedding_bag_dense_backward_cpu</definition>
        <argsstring>(const Tensor &amp;grad_, const Tensor &amp;indices_, const Tensor &amp;offsets_, const Tensor &amp;offset2bag__, const Tensor &amp;bag_size_, const Tensor &amp;max_indices_, int64_t num_weights, bool scale_grad_by_freq, int64_t mode)</argsstring>
        <name>_embedding_bag_dense_backward_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offset2bag__</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bag_size_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>max_indices_</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_weights</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" line="240" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" bodystart="240" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="_embedding_bag_8cpp_1a66a8d5e46ae3d94531bdb6e747a62408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_embedding_bag_sparse_backward</definition>
        <argsstring>(const Tensor &amp;grad_, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;offset2bag, const Tensor &amp;bag_size_, int64_t num_weights, bool scale_grad_by_freq, int64_t mode)</argsstring>
        <name>_embedding_bag_sparse_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offset2bag</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bag_size_</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_weights</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" line="339" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/EmbeddingBag.cpp" bodystart="339" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="_gesv_8cpp_1ad5dfda4acd212cf40f18c4ff42f2c8b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class scalar_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::native::lapackGesv</definition>
        <argsstring>(int n, int nrhs, scalar_t *a, int lda, int *ipiv, scalar_t *b, int ldb, int *info)</argsstring>
        <name>lapackGesv</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nrhs</declname>
        </param>
        <param>
          <type>scalar_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lda</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ipiv</declname>
        </param>
        <param>
          <type>scalar_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ldb</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.cpp" line="26" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.cpp" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="_gesv_8cpp_1aee0474bc53cc3b8273c92a66be1d371f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename scalar_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void at::native::applyGesv</definition>
        <argsstring>(Tensor &amp;b, Tensor &amp;A, std::vector&lt; int64_t &gt; infos)</argsstring>
        <name>applyGesv</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>std::vector&lt; int64_t &gt;</type>
          <declname>infos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.cpp" line="47" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.cpp" bodystart="47" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="_gesv_8cpp_1a6234a5d01756b1d54e37b3e43ef77023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor,Tensor&gt; at::native::_gesv_helper_cpu</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;A)</argsstring>
        <name>_gesv_helper_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.cpp" line="75" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.cpp" bodystart="75" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="_gesv_8cpp_1a1853e8865362e6d905a469b2784cc82e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor,Tensor&gt; at::native::gesv</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;A)</argsstring>
        <name>gesv</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.cpp" line="87" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.cpp" bodystart="87" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="_gesv_8cpp_1a7f2e21189de87b7f0acbcd759c557423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>std::tuple&lt;Tensor&amp;,Tensor&amp;&gt; at::native::gesv_out</definition>
        <argsstring>(Tensor &amp;solution, Tensor &amp;lu, const Tensor &amp;self, const Tensor &amp;A)</argsstring>
        <name>gesv_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>solution</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>lu</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.cpp" line="116" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.cpp" bodystart="116" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="_gesv_8h_1a4f12a972d9fe1221cd4d2f5b579b3319" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::checkInputs</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;A)</argsstring>
        <name>checkInputs</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.h" line="5" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.h" bodystart="5" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="_gesv_8h_1aa5fc3601ccaccfc36b7991d210f612af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::checkErrors</definition>
        <argsstring>(std::vector&lt; int64_t &gt; infos)</argsstring>
        <name>checkErrors</name>
        <param>
          <type>std::vector&lt; int64_t &gt;</type>
          <declname>infos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.h" line="19" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.h" bodystart="19" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1a95a033fa5f7a79a45e87def34e982ed0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::invalid_mask</definition>
        <argsstring>(const Tensor &amp;self, int64_t idx, const Tensor &amp;mask, int64_t maskIdx)</argsstring>
        <name>invalid_mask</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>maskIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="37" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="37" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1ae2221d8aa50946f2a6863eb0e251b2d2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::checkIndexTensorTypes</definition>
        <argsstring>(TensorList indices)</argsstring>
        <name>checkIndexTensorTypes</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="45" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="45" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1ac370f651e4f1b82ee1fee85bb8b4c711" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::vector&lt;Tensor&gt; at::native::expandByteTensors</definition>
        <argsstring>(const Tensor &amp;self, TensorList indices)</argsstring>
        <name>expandByteTensors</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="57" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="57" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1a5a8556ab9a0aae86852b746b8f06e6ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::native::hasContiguousSubspace</definition>
        <argsstring>(TensorList tl)</argsstring>
        <name>hasContiguousSubspace</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="93" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="93" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1a0c7acc3c4e9d4af90398f7570ffec3ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt; &gt;</type>
        <definition>static std::tuple&lt;Tensor, std::vector&lt;Tensor&gt; &gt; at::native::transposeToFront</definition>
        <argsstring>(Tensor self, TensorList indices)</argsstring>
        <name>transposeToFront</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="110" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="110" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1a0632e7a650ba8c0df96d9dfb05f8a382" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int64_t &gt;</type>
        <definition>static std::vector&lt;int64_t&gt; at::native::computeLinearStride</definition>
        <argsstring>(const Tensor &amp;tensor)</argsstring>
        <name>computeLinearStride</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="129" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="129" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1aa3f4705af4c1eb4d6d8739fc259f9925" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::unsqueezeN</definition>
        <argsstring>(const Tensor &amp;src, int64_t before, int64_t after)</argsstring>
        <name>unsqueezeN</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>before</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="139" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="139" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1ae920c69762467fce84314944e71aa6dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::wrapIndexOnce</definition>
        <argsstring>(const Tensor &amp;index, int64_t dim, int64_t dim_size)</argsstring>
        <name>wrapIndexOnce</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="149" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="149" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1ae3794db01831ca9ee8614faf7dd80cfc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::computeLinearIndex</definition>
        <argsstring>(const Tensor &amp;src, TensorList indices)</argsstring>
        <name>computeLinearIndex</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="163" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="163" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1a48c63acc38876d68f1444acf52e0992a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::native::hasEmptyTensor</definition>
        <argsstring>(TensorList tensors)</argsstring>
        <name>hasEmptyTensor</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="218" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="218" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1a28f413155dc5556823f753479cd58ba7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt;Tensor, Tensor&gt; at::native::makeLinearIndex</definition>
        <argsstring>(Tensor self, TensorList orig)</argsstring>
        <name>makeLinearIndex</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>orig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="228" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="228" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1a35a4f94c2798c2b55f715d091c8ad2db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::index</definition>
        <argsstring>(const Tensor &amp;self, TensorList indices)</argsstring>
        <name>index</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="252" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="252" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1a3883dbdbc5baefb7f31efcecb230f8cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::index_put</definition>
        <argsstring>(const Tensor &amp;self, TensorList indices, const Tensor &amp;value)</argsstring>
        <name>index_put</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="262" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="262" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1a9e5ebf5d096e5a1e58dbe153eab8899a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::index_put_</definition>
        <argsstring>(Tensor &amp;self, TensorList indices, const Tensor &amp;value)</argsstring>
        <name>index_put_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="274" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="274" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="_indexing_8cpp_1a16797cbd4c76bf5a269a8d4e3424ced1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::index_copy_</definition>
        <argsstring>(Tensor &amp;self, int64_t dim, const Tensor &amp;index, const Tensor &amp;source)</argsstring>
        <name>index_copy_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" line="285" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Indexing.cpp" bodystart="285" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1aa57e7078fa508a3849d8cf8e9bb85a81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::norm</definition>
        <argsstring>(const Tensor &amp;self, Scalar p)</argsstring>
        <name>norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="25" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a5fea32fbb71d6a76c24f1f17752c0f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::clone</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>clone</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="33" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a3895249b154a31b2047e3bbe2497a46c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::resize_as_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;the_template)</argsstring>
        <name>resize_as_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>the_template</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="41" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="41" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a18c59034caa9dd3a6fb38711ee1b8523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::pow_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar exponent)</argsstring>
        <name>pow_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="49" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1af47c66b93b1e15a6ef7bb315c469fe39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::pow</definition>
        <argsstring>(const Tensor &amp;self, Scalar exponent)</argsstring>
        <name>pow</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="57" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a6c74087f8369ace473e9bbded8ea062a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::zero_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>zero_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="65" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1ad7fff441c0a18c348912828d22e47185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::add_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other, Scalar alpha)</argsstring>
        <name>add_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="102" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="102" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a093e6e2f84b8150da8a3f871b0dcfc7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::add</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, Scalar alpha)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="129" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="129" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1aca2c5358ec4dc69753e5ad773da13009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::add_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;other, Scalar alpha)</argsstring>
        <name>add_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="144" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="144" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a9ddd557d3d2e2fc12bd69518850f66bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::sub_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other, Scalar alpha)</argsstring>
        <name>sub_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="160" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="160" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a573d227b9ab78063b31f3bcc45c217c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sub</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, Scalar alpha)</argsstring>
        <name>sub</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="170" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="170" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a03afaf9bf59e1bac267a5d2fd8b8d085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::sub_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;other, Scalar alpha)</argsstring>
        <name>sub_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="180" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="180" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1aa92b395e8792755f1b98fb2394bb17b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::mul_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>mul_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="191" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="191" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a8a512786c527a5ed394cbd6c1a1fb397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::mul</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>mul</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="201" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="201" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a9d422c4ecd7f4559381ed8e582c7347a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::mul_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>mul_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="211" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="211" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a13f487e61648abb49bc1ff5f87727fee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::mul_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>mul_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="221" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="221" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a05d640fa631772f84c037dd59bd309de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::mul</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>mul</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="229" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="229" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a2b6dc4bdda24647b49c73475b73372b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::mul_</definition>
        <argsstring>(Tensor &amp;self, Scalar other)</argsstring>
        <name>mul_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="237" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="237" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1afa1d6e9073af6b2ab9808719f5548b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::div_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>div_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="246" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="246" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a2d111f2f9703779d99fecc0c5f8e50be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::div</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>div</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="254" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="254" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a347b3af6e204a7ab97395ec61e5ca661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::div_</definition>
        <argsstring>(Tensor &amp;self, Scalar other)</argsstring>
        <name>div_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="262" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="262" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1ab8dafb5e22a62abfa662008ef596b20b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::addmm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta, Scalar alpha)</argsstring>
        <name>addmm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="270" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="270" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a824efd032e8e621668342d9db157760f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::addmm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta, Scalar alpha)</argsstring>
        <name>addmm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="282" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="282" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a6ee66efb873a64223d8cc18340604c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::addmm_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta, Scalar alpha)</argsstring>
        <name>addmm_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="294" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="294" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a13a41c5f21862dce0affd2520a042715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::tensor</definition>
        <argsstring>(const Type &amp;dtype)</argsstring>
        <name>tensor</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="306" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="306" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a7fc03bc5f9e6046477793587aca94457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::tensor</definition>
        <argsstring>(const Type &amp;dtype, ArrayRef&lt; int64_t &gt; size)</argsstring>
        <name>tensor</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="314" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="314" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a0a983a81525a84e347e969808ccf49d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sparse_coo_tensor</definition>
        <argsstring>(const Tensor &amp;indices, const Tensor &amp;values)</argsstring>
        <name>sparse_coo_tensor</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="322" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="322" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1ab11ca79193b13e9e69cf6c7950e99aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sparse_coo_tensor</definition>
        <argsstring>(const Tensor &amp;indices, const Tensor &amp;values, ArrayRef&lt; int64_t &gt; size)</argsstring>
        <name>sparse_coo_tensor</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="326" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="326" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1a2b02c3f66456b3e775ccb4df71b9b369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_sparse_coo_tensor_unsafe</definition>
        <argsstring>(const Tensor &amp;indices, const Tensor &amp;values, ArrayRef&lt; int64_t &gt; size)</argsstring>
        <name>_sparse_coo_tensor_unsafe</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="330" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="330" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="_legacy_bridge_8cpp_1ab905a2f551fb0808ff125ee85af43083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::get_device</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>get_device</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" line="334" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LegacyBridge.cpp" bodystart="334" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2linear_8cpp_1aee833f26e50b095a7b391f61f9647461" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::sumproduct_pair</definition>
        <argsstring>(const Tensor &amp;left_, const Tensor &amp;right_, IntList sum_dims_, bool keepdim)</argsstring>
        <name>sumproduct_pair</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>left_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>right_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>sum_dims_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Linear.cpp" line="11" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Linear.cpp" bodystart="11" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2linear_8cpp_1a86f47b1999d7961f5135151e3e5e4358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::einsum</definition>
        <argsstring>(std::string eqn, TensorList tensors)</argsstring>
        <name>einsum</name>
        <param>
          <type>std::string</type>
          <declname>eqn</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Linear.cpp" line="107" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Linear.cpp" bodystart="107" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2linear_8cpp_1a32f42b4f01aceccb97f1e5d1c4c80c3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_trilinear</definition>
        <argsstring>(const Tensor &amp;i1_, const Tensor &amp;i2_, const Tensor &amp;i3_, IntList expand1_, IntList expand2_, IntList expand3_, IntList sumdim_, int64_t unroll_dim)</argsstring>
        <name>_trilinear</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>i1_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>i2_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>i3_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>expand1_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>expand2_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>expand3_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>sumdim_</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>unroll_dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Linear.cpp" line="342" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Linear.cpp" bodystart="342" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2linear_8cpp_1ac4c7ac925e838890733c969b110a0c98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::bilinear</definition>
        <argsstring>(const Tensor &amp;input1, const Tensor &amp;input2, const Tensor &amp;weight, const Tensor &amp;bias)</argsstring>
        <name>bilinear</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Linear.cpp" line="411" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Linear.cpp" bodystart="411" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a9650b6ddafe771173512f062339646f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; double, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, int &gt;</type>
        <definition>static std::tuple&lt;double, Tensor, int&gt; at::native::_lu_det_P_diag_U_info</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_lu_det_P_diag_U_info</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="16" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="16" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1afff51e425bc5c6a2368378e4669f69e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::det</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>det</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="32" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="32" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a9067b097b682e2b5af1e12bbb8c1a29b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::logdet</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>logdet</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="48" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="48" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1ad5935557b4668437c7d9acdf09d662e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::native::slogdet</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>slogdet</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="69" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="69" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a3433b2018e734ef5307d9f34e49a39e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::inverse</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>inverse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="86" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1abc1cc27d6f201bd9a5b1a37588d83045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::inverse_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>inverse_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="91" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="91" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1acda212d4085717d2e9c8635d90a650a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::pinverse</definition>
        <argsstring>(const Tensor &amp;self, double rcond)</argsstring>
        <name>pinverse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rcond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="104" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="104" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a2f5d65c748d15f86765f50d986ce2cac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::check_1d</definition>
        <argsstring>(const Tensor &amp;t, const char *arg, const char *fn)</argsstring>
        <name>check_1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="120" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a0bf0570b2071c4cf5e66aa45f1e849ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::ger</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;vec2)</argsstring>
        <name>ger</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="124" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a9ac6744aaffba85d647e244c7c9b983c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::ger_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;vec2)</argsstring>
        <name>ger_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="130" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1acba6e6f712c8d4b7fee21243a2db5ee6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::mm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat2)</argsstring>
        <name>mm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="136" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a3e3d241428e6e23ca5ebf825dd893ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::mm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat2)</argsstring>
        <name>mm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="143" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="143" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a1e997e47e451209a59b3dfc65001a869" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::mv</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;vec)</argsstring>
        <name>mv</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="150" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a2290ce19196ef219968037cc6b725acf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::mv_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;vec)</argsstring>
        <name>mv_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="155" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1aec6c7dc0875081718b5d54035955a142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::addmv</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat, const Tensor &amp;vec, Scalar beta, Scalar alpha)</argsstring>
        <name>addmv</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="160" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1aa35955aebf676384def2c44daee7c4cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::addmv_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;mat, const Tensor &amp;vec, Scalar beta, Scalar alpha)</argsstring>
        <name>addmv_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="165" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a620300ba2f4691c8d42d981b9011056c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::addmv_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat, const Tensor &amp;vec, Scalar beta, Scalar alpha)</argsstring>
        <name>addmv_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="170" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a76f1fc080c6de8901f8e09e41fc181c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::addr</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;vec1, const Tensor &amp;vec2, Scalar beta, Scalar alpha)</argsstring>
        <name>addr</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="175" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1adc06d0d3e6ddc464aec9b9acb724ecdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::addr_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;vec1, const Tensor &amp;vec2, Scalar beta, Scalar alpha)</argsstring>
        <name>addr_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="181" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a9f6e7ebc7ae69f750cf051a980d3296e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::addr_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;vec1, const Tensor &amp;vec2, Scalar beta, Scalar alpha)</argsstring>
        <name>addr_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="187" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="187" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a0f4d00b68e569289a3827d17c6b87c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::dot</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;tensor)</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="193" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="193" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1af9db60647a525a7a39046e1a0f66d4d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::dot_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;tensor)</argsstring>
        <name>dot_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="199" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="199" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1ac25ce14872a05d9df5ba9acffb513e88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::matmul</definition>
        <argsstring>(at::optional&lt; Tensor &gt; out_opt, const Tensor &amp;tensor1, const Tensor &amp;tensor2)</argsstring>
        <name>matmul</name>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">at::optional</ref>&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
          <declname>out_opt</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="224" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="224" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a5aa37815e771a5fe643c6619fd613dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::matmul</definition>
        <argsstring>(const Tensor &amp;tensor1, const Tensor &amp;tensor2)</argsstring>
        <name>matmul</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="309" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_8cpp_1a21dffb94cc3ec29c8a55f2e1b92ed954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::matmul_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;tensor1, const Tensor &amp;tensor2)</argsstring>
        <name>matmul_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" line="313" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebra.cpp" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_utils_8h_1a79f72b50a513df3d0e195cce60a9815a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::cloneBatchedColumnMajor</definition>
        <argsstring>(const Tensor &amp;src)</argsstring>
        <name>cloneBatchedColumnMajor</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebraUtils.h" line="15" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebraUtils.h" bodystart="15" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_utils_8h_1ad8ce23fd330ef2ad6f0052d9cf8cf0db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::native::batchCount</definition>
        <argsstring>(const Tensor &amp;batched_matrices)</argsstring>
        <name>batchCount</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>batched_matrices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebraUtils.h" line="29" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebraUtils.h" bodystart="29" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="_linear_algebra_utils_8h_1a88a572dbfa1c4fed7afcbd9223ea9e30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::native::matrixStride</definition>
        <argsstring>(const Tensor &amp;batched_matrices)</argsstring>
        <name>matrixStride</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>batched_matrices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebraUtils.h" line="38" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebraUtils.h" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="_loss_8cpp_1acfedd0fde91637dac97b8d1a2ab55cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::cosine_embedding_loss</definition>
        <argsstring>(const Tensor &amp;input1, const Tensor &amp;input2, const Tensor &amp;target, double margin, int64_t reduction)</argsstring>
        <name>cosine_embedding_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>double</type>
          <declname>margin</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Loss.cpp" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Loss.cpp" bodystart="9" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="_loss_8cpp_1a3eb22f7d0ef6e63a36c6cdf33e7c07fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::hinge_embedding_loss</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, double margin, int64_t reduction)</argsstring>
        <name>hinge_embedding_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>double</type>
          <declname>margin</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Loss.cpp" line="31" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Loss.cpp" bodystart="31" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="_loss_8cpp_1a4d7ddb55c3f7cae8ccc18de80808d3a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::triplet_margin_loss</definition>
        <argsstring>(const Tensor &amp;anchor, const Tensor &amp;positive, const Tensor &amp;negative, double margin, double p, double eps, bool swap, int64_t reduction)</argsstring>
        <name>triplet_margin_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>anchor</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>positive</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>negative</declname>
        </param>
        <param>
          <type>double</type>
          <declname>margin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>swap</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Loss.cpp" line="46" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Loss.cpp" bodystart="46" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="_loss_8cpp_1a579734a7d2996f5f91c6bff0227fff0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::margin_ranking_loss</definition>
        <argsstring>(const Tensor &amp;input1, const Tensor &amp;input2, const Tensor &amp;target, double margin, int64_t reduction)</argsstring>
        <name>margin_ranking_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>double</type>
          <declname>margin</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Loss.cpp" line="64" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Loss.cpp" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="_memory_8cpp_1adb5f87c687376404405ce418321b42a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::pin_memory</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>pin_memory</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Memory.cpp" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Memory.cpp" bodystart="9" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="mkl_2_spectral_ops_8cpp_1a485f62ff737b288216ad7c3aebc6c5ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_fft_mkl</definition>
        <argsstring>(const Tensor &amp;input, int64_t signal_ndim, bool complex_input, bool complex_output, bool inverse, IntList checked_signal_sizes, bool normalized, bool onesided, IntList output_sizes)</argsstring>
        <name>_fft_mkl</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>signal_ndim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>complex_input</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>complex_output</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inverse</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>checked_signal_sizes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>normalized</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onesided</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/mkl/SpectralOps.cpp" line="10" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/mkl/SpectralOps.cpp" bodystart="10" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2mkldnn_2conv_8cpp_1aa5ac8f214d73c7b0643b92701ae1759c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::mkldnn_convolution</definition>
        <argsstring>(const at::Tensor &amp;input, const at::Tensor &amp;weight, const at::Tensor &amp;bias, IntList padding, IntList stride, IntList dilation, int64_t groups)</argsstring>
        <name>mkldnn_convolution</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/mkldnn/Conv.cpp" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/mkldnn/Conv.cpp" bodystart="9" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2mkldnn_2conv_8cpp_1a9877b54349f7ac52be6f3becb9528dde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition>at::Tensor at::native::mkldnn_convolution_backward_input</definition>
        <argsstring>(IntList input_size, const at::Tensor &amp;grad_output, const at::Tensor &amp;weight, IntList padding, IntList stride, IntList dilation, int64_t groups, bool bias_defined)</argsstring>
        <name>mkldnn_convolution_backward_input</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bias_defined</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/mkldnn/Conv.cpp" line="15" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/mkldnn/Conv.cpp" bodystart="15" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2mkldnn_2conv_8cpp_1a4c0db62c0dc7e81fa8acda0fa0ac9693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;at::Tensor,at::Tensor&gt; at::native::mkldnn_convolution_backward_weights</definition>
        <argsstring>(IntList weight_size, const at::Tensor &amp;grad_output, const at::Tensor &amp;input, IntList padding, IntList stride, IntList dilation, int64_t groups, bool bias_defined)</argsstring>
        <name>mkldnn_convolution_backward_weights</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>weight_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bias_defined</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/mkldnn/Conv.cpp" line="21" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/mkldnn/Conv.cpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="aten_2src_2_a_ten_2native_2mkldnn_2conv_8cpp_1a4c1df0fde64cf3c2425a595ad7e37eb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;at::Tensor,at::Tensor,at::Tensor&gt; at::native::mkldnn_convolution_backward</definition>
        <argsstring>(const at::Tensor &amp;input, const at::Tensor &amp;grad_output_t, const at::Tensor &amp;weight, IntList padding, IntList stride, IntList dilation, int64_t groups, std::array&lt; bool, 3 &gt; output_mask)</argsstring>
        <name>mkldnn_convolution_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>grad_output_t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/mkldnn/Conv.cpp" line="27" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/mkldnn/Conv.cpp" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="_normalization_8cpp_1abc364150e8011e6488bbfc3941b9a087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::batch_norm</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, const Tensor &amp;running_mean, const Tensor &amp;running_var, bool training, double momentum, double eps, bool cudnn_enabled)</argsstring>
        <name>batch_norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type>double</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cudnn_enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Normalization.cpp" line="22" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Normalization.cpp" bodystart="22" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="_normalization_8cpp_1a0cb8e47f5bc24e205435a2803340eaf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::layer_norm</definition>
        <argsstring>(const Tensor &amp;input, IntList normalized_shape, const Tensor &amp;weight, const Tensor &amp;bias, double eps, bool cudnn_enabled)</argsstring>
        <name>layer_norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>normalized_shape</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cudnn_enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Normalization.cpp" line="70" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Normalization.cpp" bodystart="70" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="_normalization_8cpp_1a649b2b80f5ffd73701ed90e104e84960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::group_norm</definition>
        <argsstring>(const Tensor &amp;input, int64_t num_groups, const Tensor &amp;weight, const Tensor &amp;bias, double eps, bool cudnn_enabled)</argsstring>
        <name>group_norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_groups</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cudnn_enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Normalization.cpp" line="138" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Normalization.cpp" bodystart="138" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="_pooling_8cpp_1aa4f6ea02e3f00f973260aecd9b837ea2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::check1d</definition>
        <argsstring>(const char *function_name, const char *argument_name, IntList x)</argsstring>
        <name>check1d</name>
        <param>
          <type>const char *</type>
          <declname>function_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>argument_name</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" line="11" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" bodystart="11" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="_pooling_8cpp_1a07f782227980cc7cc537863f26c73ade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::adaptive_avg_pool1d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_avg_pool1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" line="21" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" bodystart="21" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="_pooling_8cpp_1ad962c6baf4538d4a4811e5c1a7a11378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor,Tensor&gt; at::native::adaptive_max_pool1d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_max_pool1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" line="32" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" bodystart="32" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="_pooling_8cpp_1a61051fd82716bef219c7fcd4eb9ea8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::native::max_pool1d_with_indices</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, IntList dilation, bool ceil_mode)</argsstring>
        <name>max_pool1d_with_indices</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" line="44" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" bodystart="44" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="_pooling_8cpp_1ae76c9a05a6ddfb64561ec4d329d1392d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::avg_pool1d</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, bool ceil_mode, bool count_include_pad)</argsstring>
        <name>avg_pool1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" line="72" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" bodystart="72" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="_pooling_8cpp_1a7682dfdfcc7c89a860f0df8583683957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::max_pool1d</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, IntList dilation, bool ceil_mode)</argsstring>
        <name>max_pool1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" line="98" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" bodystart="98" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="_pooling_8cpp_1a761536777233514e773c207148c02d92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::max_pool2d</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, IntList dilation, bool ceil_mode)</argsstring>
        <name>max_pool2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" line="110" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" bodystart="110" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="_pooling_8cpp_1a9ae5ff2cf8583bbce94bd3f662d04ce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::max_pool3d</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, IntList dilation, bool ceil_mode)</argsstring>
        <name>max_pool3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" line="122" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Pooling.cpp" bodystart="122" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a7cfe83d823f10e8e87ba1136550a567e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(sum_kernel)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>sum_kernel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a092e4f9ed25cf16c93a24c46f06fc14f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(prod_kernel)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>prod_kernel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ab5b7227bb62bed010b2186f441e0d7b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::integer_upcast</definition>
        <argsstring>(const Tensor &amp;self, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>integer_upcast</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="23" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a43e85ed7d92640b7a2b9bb8bb97b875c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::cumsum</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>cumsum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="29" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a33108003769825bfd386b92957e4af10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::cumsum</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>cumsum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="33" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a3d8c49b61333ce9e40c80ce28c54d0a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::cumsum</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>cumsum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="37" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ae3c5ac462efd3c532bf02f15c0c10015" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor&amp; at::native::cumsum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>cumsum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="41" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1aa78a19e8cabaf5ce87a06f6c0d4cb0e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::cumsum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>cumsum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ac653a8ccfd1c8814566cc664886a097d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::cumsum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim)</argsstring>
        <name>cumsum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="57" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a7b47da87128b4dbc517e2cd1575e7fcd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::cumprod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>cumprod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="61" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a5159d0cc122bcb1c4b8aa3990a9fcb0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::cumprod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>cumprod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="65" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ae99fa88ceaaae92f6389457d2fb1830a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::cumprod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>cumprod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="69" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a9622c0a855d164fd9f0427e8634d4854" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor&amp; at::native::cumprod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>cumprod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="73" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="73" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a61a00beb46499a3c2db2e9ca27c4608f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::cumprod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>cumprod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="85" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1aec60d298caf283394a7cde2bd099922b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::cumprod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim)</argsstring>
        <name>cumprod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a058e3cd106b85f46a013ce5a4594dbc6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::mean</definition>
        <argsstring>(const Tensor &amp;self, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>mean</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="95" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="95" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a7ae80445329b245891ce081e29527943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::mean</definition>
        <argsstring>(const Tensor &amp;self, ScalarType dtype)</argsstring>
        <name>mean</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="110" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a1606ecf44ac8c8fbbae975172dccc294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::mean</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>mean</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="114" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1afa0fbf0eeb334729fb12ec6b81445436" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::sum</definition>
        <argsstring>(const Tensor &amp;self, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="118" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ae8720cdf26b5461902dbb102f74a03ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sum</definition>
        <argsstring>(const Tensor &amp;self, ScalarType dtype)</argsstring>
        <name>sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="122" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a71e1fa71cc44721e2aad1c007eb6952f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sum</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="126" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1af5494627bd4a05b0279873a78aec6c45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_sum_cpu</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_sum_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="130" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="130" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a263ef7a8538de441de34e85906cf504a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::prod</definition>
        <argsstring>(const Tensor &amp;self, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="139" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a185ef042f3b48012b9fb2b720c2353ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::prod</definition>
        <argsstring>(const Tensor &amp;self, ScalarType dtype)</argsstring>
        <name>prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="143" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1afbb205b89b7c44f5cb95249cd845e66c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::prod</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="147" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a728ab681f829b4c8b930d3ef921051c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_prod_cpu</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_prod_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="151" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="151" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a1716104a28811d5ee30aa97ec75adff6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor&amp; at::native::mean_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>mean_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="164" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="164" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ac2ccab566e93628b5c418a54920c6d0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::mean_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim, ScalarType dtype)</argsstring>
        <name>mean_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="186" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a7f4ee8528efb79e03a5b0e2248efeb1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::mean_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>mean_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="189" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a41ab68f7b5e4a52258a5b32858f31acf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::mean_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>mean_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="193" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a2b7987122db5bb657fe3017ad776e252" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor&amp; at::native::sum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, IntList dim, bool keepdim, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>sum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="197" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="197" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1aae1811bfd14476308d6f987708d81f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::sum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, IntList dim, bool keepdim, ScalarType dtype)</argsstring>
        <name>sum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="210" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a29f1f980ab8ae33dded52ac482a6edc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::sum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, IntList dim, bool keepdim)</argsstring>
        <name>sum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="213" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a108f09b3c529219d2ebaa973dd1eee48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::sum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, IntList dim, ScalarType dtype)</argsstring>
        <name>sum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="217" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a7ba1d98805e978da3cf0fe4db3ad0abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sum_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim_, bool keepdim)</argsstring>
        <name>_sum_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="221" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="221" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a11b689c4fd85ce7fb93ac281ecdd8d35" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor&amp; at::native::prod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>prod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="235" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="235" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a8d0a6a5d606e433de61bcfc401cd83c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::prod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim, ScalarType dtype)</argsstring>
        <name>prod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="248" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a6b363de8839287bc1b99a7800cb235ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::prod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>prod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="251" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ab2377850a3ce0d854794a327f71b0063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::prod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>prod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="255" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ae0fb75718e89a01bbbf1e18bf5a64409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_prod_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim_, bool keepdim)</argsstring>
        <name>_prod_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="259" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="259" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a90fb7fa2a152495d0ff603cec7dd3cb6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::mean</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>mean</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="273" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="273" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ad4713df9f121345aed5d2df92d228cfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::mean</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim, ScalarType dtype)</argsstring>
        <name>mean</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="293" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="293" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1afa3e48f8fc85712270537306ff0ea585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::mean</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>mean</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="297" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="297" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ae520b6bd9a2a7fd762b5fd61bf93a527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::mean</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>mean</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="301" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="301" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ae5217908836baf9fc3cfe71aacefb208" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::sum</definition>
        <argsstring>(const Tensor &amp;self, IntList dim_, bool keepdim, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="305" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="305" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a9a6f387c05b0da137465747a6f9ef965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sum</definition>
        <argsstring>(const Tensor &amp;self, IntList dim, bool keepdim, ScalarType dtype)</argsstring>
        <name>sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="309" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="309" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a4a94946655409eb9cbb691b2b29c6f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sum</definition>
        <argsstring>(const Tensor &amp;self, IntList dim, bool keepdim)</argsstring>
        <name>sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="313" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="313" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a0f1dfdf78dd32d1a22b56d2d83244155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sum</definition>
        <argsstring>(const Tensor &amp;self, IntList dim, ScalarType dtype)</argsstring>
        <name>sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="317" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="317" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a9d73962019e96e9faa9fc9f07e15517a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_sum</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim_, bool keepdim)</argsstring>
        <name>_sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="321" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="321" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a658031b5442b51facf8d22d54471bb9f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::prod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim_, bool keepdim, optional&lt; ScalarType &gt; dtype)</argsstring>
        <name>prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; ScalarType &gt;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="327" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="327" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a248ca9e78759f09ab7f16e163c23917f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::prod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim, ScalarType dtype)</argsstring>
        <name>prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="331" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="331" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a4fa58ca80f812e672619752d1070da1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::prod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="335" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="335" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a04be50bbf09e6d0c095a662574c58ae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::prod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="339" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="339" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a2e940ca6ab23af8519b1596b5430d713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_prod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim_, bool keepdim)</argsstring>
        <name>_prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="343" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="343" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a7ec8d7e4c20d0e134dbd8b8176bfe419" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::logsumexp_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim_, bool keepdim)</argsstring>
        <name>logsumexp_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="349" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="349" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1aebcc541c0df1161988756ab8132acace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::logsumexp</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim_, bool keepdim)</argsstring>
        <name>logsumexp</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="365" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="365" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a1b17c2afe3a8141d06767b35af30b9a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>Tensor(reduce_1)(const Tensor &amp;, int64_t, bool)</type>
          </param>
          <param>
            <type>Tensor &amp;</type>
          </param>
        </templateparamlist>
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::reduce_multi_associative</definition>
        <argsstring>(const Tensor &amp;self, IntList dims_, bool keepdim)</argsstring>
        <name>reduce_multi_associative</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dims_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="458" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="458" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a3e0fca508bff0ea8239298d8f7e06da8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>Tensor(reduce_1)(const Tensor &amp;, int64_t, bool)</type>
          </param>
          <param>
            <type>Tensor &amp;</type>
          </param>
        </templateparamlist>
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::reduce_multi_associative_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, IntList dims_, bool keepdim)</argsstring>
        <name>reduce_multi_associative_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dims_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="513" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="513" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1aca5c8016e94954d88f030bbf3fdf6423" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>_sum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="570" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="570" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1af68c69ea8f9ab09b730460f976c943c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_sum</definition>
        <argsstring>(const Tensor &amp;self, IntList dims, bool keepdim)</argsstring>
        <name>_sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dims</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="578" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="578" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a2b03e637267cf36733059aa0273ce1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, IntList dims, bool keepdim)</argsstring>
        <name>_sum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dims</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="582" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="582" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a6da6edee13d25f79d523cb8443b5e54b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::norm</definition>
        <argsstring>(const Tensor &amp;self, Scalar p, int64_t dim, bool keepdim)</argsstring>
        <name>norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="587" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="587" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1aa5748e6f3355d41a2b746b0c0e7fc843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::norm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar p, int64_t dim, bool keepdim)</argsstring>
        <name>norm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="592" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="592" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a6353eb95c84443439adc16e8397684c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::all</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>all</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="604" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="604" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ac3f2771dce2f11faec6f81240e9d3735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::all_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>all_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="609" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="609" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1aef18452d82c5240bf3fe1118cb51a64e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::any</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>any</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="621" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="621" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a955761a6bf96d5d6290e2435741a9361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::any_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>any_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="626" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="626" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a8d1a642629a5295074e117ec9910fa3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::var</definition>
        <argsstring>(const Tensor &amp;self, bool unbiased)</argsstring>
        <name>var</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="638" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="638" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a03f23b12c08f816126403b43ea361100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::var</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool unbiased, bool keepdim)</argsstring>
        <name>var</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="646" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="646" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1ab460f0b3d4dd5deccff2b7bcbc41dc32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::var_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool unbiased, bool keepdim)</argsstring>
        <name>var_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="651" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="651" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1afe72e48ec80fe828f67323f964c47b56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::std</definition>
        <argsstring>(const Tensor &amp;self, bool unbiased)</argsstring>
        <name>std</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="663" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="663" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1aa92c000c06083a8b21b80246e7aeb372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::std</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool unbiased, bool keepdim)</argsstring>
        <name>std</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="671" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="671" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_8cpp_1a5d87a6bcdee2eeea08498290f61f7168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::std_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool unbiased, bool keepdim)</argsstring>
        <name>std_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" line="676" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOps.cpp" bodystart="676" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_utils_8h_1a10691635711ae7a34b31ffe23b0f3bc6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor&amp; at::native::_dimreduce_setup</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim)</argsstring>
        <name>_dimreduce_setup</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOpsUtils.h" line="5" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOpsUtils.h" bodystart="5" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_utils_8h_1ac553ca8d0e5d62f940c0103c70177e42" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::native::_dimreduce_return_trivial</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar ident, int64_t dim, bool keepdim)</argsstring>
        <name>_dimreduce_return_trivial</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>ident</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOpsUtils.h" line="15" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOpsUtils.h" bodystart="15" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_utils_8h_1a90617b9597e4faf45aeb0c80cb4f9f0f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::native::_dimreduce_return_trivial_no_ident</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim, const char *fn_name)</argsstring>
        <name>_dimreduce_return_trivial_no_ident</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fn_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOpsUtils.h" line="32" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOpsUtils.h" bodystart="32" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="_reduce_ops_utils_8h_1afb76422392a5ccca401be36f7600bdd6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classat_1_1optional" kindref="compound">at::optional</ref>&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static at::optional&lt;Tensor&gt; at::native::_allreduce_return_trivial</definition>
        <argsstring>(const Tensor &amp;self, Scalar ident)</argsstring>
        <name>_allreduce_return_trivial</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>ident</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOpsUtils.h" line="47" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/ReduceOpsUtils.h" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="_roi_pooling_8cpp_1ad3c7b1e6baf96cd29562f049c7778d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;at::Tensor, at::Tensor&gt; at::native::RoiPooling2d_forward_cpu</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;rois, int64_t pooledHeight, int64_t pooledWidth, double spatialScale)</argsstring>
        <name>RoiPooling2d_forward_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pooledHeight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pooledWidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spatialScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/RoiPooling.cpp" line="8" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/RoiPooling.cpp" bodystart="8" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="_roi_pooling_8cpp_1a1b92d889f5853a95136b65474fc0de2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::RoiPooling2d_backward_cpu</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;rois, int64_t pooledHeight, int64_t pooledWidth, double spatialScale, const Tensor &amp;gradOutput, const Tensor &amp;argmaxes)</argsstring>
        <name>RoiPooling2d_backward_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pooledHeight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pooledWidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spatialScale</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>gradOutput</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>argmaxes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/RoiPooling.cpp" line="129" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/RoiPooling.cpp" bodystart="129" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="_soft_max_8cpp_1a5f25807bd66c9600eb3f6e183445121a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::softmax_cpu</definition>
        <argsstring>(const Tensor &amp;input_, const int64_t dim_)</argsstring>
        <name>softmax_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input_</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>dim_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp" line="121" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp" bodystart="121" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="_soft_max_8cpp_1a7daa99716a6303b1b7fed5fee56c70c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::log_softmax_cpu</definition>
        <argsstring>(const Tensor &amp;input_, const int64_t dim_)</argsstring>
        <name>log_softmax_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input_</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>dim_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp" line="140" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp" bodystart="140" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="_soft_max_8cpp_1a6cd1a3c182b3e29fbaf37eb203fd3235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::softmax_backward_cpu</definition>
        <argsstring>(const Tensor &amp;grad_, const Tensor &amp;output_, int64_t dim_, const Tensor &amp;input_)</argsstring>
        <name>softmax_backward_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output_</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp" line="159" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp" bodystart="159" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="_soft_max_8cpp_1a08e12efe2c21aab6deda3f0d537301b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::log_softmax_backward_cpu</definition>
        <argsstring>(const Tensor &amp;grad_, const Tensor &amp;output_, int64_t dim_, const Tensor &amp;input_)</argsstring>
        <name>log_softmax_backward_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output_</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp" line="188" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp" bodystart="188" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="_soft_max_8cpp_1a25e256b28bd66e55a6b627dbc1013e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(softmax_lastdim_kernel)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>softmax_lastdim_kernel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_soft_max_8cpp_1a346fc7684940850d00992841befb04b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(log_softmax_lastdim_kernel)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>log_softmax_lastdim_kernel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_soft_max_8cpp_1ad48b1961a2ceca681dde2ff6ba3290a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(softmax_backward_lastdim_kernel)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>softmax_backward_lastdim_kernel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_soft_max_8cpp_1aa6387b21f5877639556a490167964dee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(log_softmax_backward_lastdim_kernel)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>log_softmax_backward_lastdim_kernel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SoftMax.cpp" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_c_u_d_a_tensor_8cpp_1aaafea0390f29f1d10c0e1baae36a3337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::sparse_mask_out_cuda</definition>
        <argsstring>(SparseTensor &amp;r, const Tensor &amp;t, const SparseTensor &amp;mask)</argsstring>
        <name>sparse_mask_out_cuda</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/cuda/SparseCUDATensor.cpp" line="8" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/cuda/SparseCUDATensor.cpp" bodystart="8" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_c_u_d_a_tensor_8cpp_1aa8b2bb142f2e15161c645014d4b8c530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::sparse_mask_cuda</definition>
        <argsstring>(const Tensor &amp;t, SparseTensorRef mask)</argsstring>
        <name>sparse_mask_cuda</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_sparse_tensor_ref" kindref="compound">SparseTensorRef</ref></type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/cuda/SparseCUDATensor.cpp" line="50" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/cuda/SparseCUDATensor.cpp" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_c_u_d_a_tensor_8cpp_1ad730b7094158659ad1b54ad006eb4675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::get_device_sparse_cuda</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>get_device_sparse_cuda</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/cuda/SparseCUDATensor.cpp" line="57" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/cuda/SparseCUDATensor.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a72d33622c09cdaeb981b28725c3bcc49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::_sparseDims_sparse</definition>
        <argsstring>(const SparseTensor &amp;self)</argsstring>
        <name>_sparseDims_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="16" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a2b8a45399e254dfeb11920c2060b69bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::_denseDims_sparse</definition>
        <argsstring>(const SparseTensor &amp;self)</argsstring>
        <name>_denseDims_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="20" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a7221f1426a6642b98d21b784736c6374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::native::is_coalesced_sparse</definition>
        <argsstring>(const SparseTensor &amp;self)</argsstring>
        <name>is_coalesced_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="24" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a4cd9a4aa8c3ac452b7cf5bacccc2735c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::_nnz_sparse</definition>
        <argsstring>(const SparseTensor &amp;self)</argsstring>
        <name>_nnz_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="28" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a76a12ac4412afcd2319ac106f33ec0df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_indices_sparse</definition>
        <argsstring>(const SparseTensor &amp;self)</argsstring>
        <name>_indices_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="36" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="36" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a5a9dbbe4cc464891aefabf06c260124c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_values_sparse</definition>
        <argsstring>(const SparseTensor &amp;self)</argsstring>
        <name>_values_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="47" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a9749b8aa930cfd1724c90acfa91bc5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::new_sparse</definition>
        <argsstring>(const SparseType &amp;dtype)</argsstring>
        <name>new_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">SparseType</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="61" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="61" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a3ff4e09d2089b03b343f2a3ecfbf126b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::new_with_tensor_sparse</definition>
        <argsstring>(const LongTensor &amp;indices, const Tensor &amp;values_)</argsstring>
        <name>new_with_tensor_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">LongTensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="72" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="72" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a98e66d44b0333baca079a3c99ea4f47d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::new_with_size_sparse</definition>
        <argsstring>(const SparseType &amp;dtype, ArrayRef&lt; int64_t &gt; size)</argsstring>
        <name>new_with_size_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">SparseType</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="113" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a1ed241cdb95432cdd051f5d6e459fdfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::new_with_tensor_and_size_unsafe_sparse</definition>
        <argsstring>(const LongTensor &amp;indices, const Tensor &amp;values_, ArrayRef&lt; int64_t &gt; sizes)</argsstring>
        <name>new_with_tensor_and_size_unsafe_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">LongTensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
          <declname>sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="120" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="120" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a6716ed21c32f555ed0fa574bedad488c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::new_with_tensor_and_size_sparse</definition>
        <argsstring>(const LongTensor &amp;indices, const Tensor &amp;values_, ArrayRef&lt; int64_t &gt; sizes)</argsstring>
        <name>new_with_tensor_and_size_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">LongTensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
          <declname>sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="141" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="141" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1ac87d89b433efe043e7ea17796f39077f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::clone_sparse</definition>
        <argsstring>(const SparseTensor &amp;self)</argsstring>
        <name>clone_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="189" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="189" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a70a62e2ab766568ad9f0fd6984b6063c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at::native::resize_sparse</definition>
        <argsstring>(const SparseTensor &amp;self, ArrayRef&lt; int64_t &gt; size)</argsstring>
        <name>resize_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="212" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1af73ec0659a5f2456889a64a8b64a373a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::raw_resize_sparse_</definition>
        <argsstring>(SparseTensor &amp;self, ArrayRef&lt; int64_t &gt; size, int64_t sparseDims, int64_t denseDims)</argsstring>
        <name>raw_resize_sparse_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sparseDims</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>denseDims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="216" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="216" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a5fdcaa5bb1d63aba5e957e933e6234c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::resize_as_sparse_</definition>
        <argsstring>(SparseTensor &amp;self, const SparseTensor &amp;src)</argsstring>
        <name>resize_as_sparse_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="233" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="233" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a586e2d04e65ffd4e5088ab06b205f8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sparse_to_dense</definition>
        <argsstring>(const SparseTensor &amp;self)</argsstring>
        <name>sparse_to_dense</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="242" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1ab8cfd7c563080db39e3d140da4cf1a93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::copy_sparse_</definition>
        <argsstring>(SparseTensor &amp;self, const SparseTensor &amp;src)</argsstring>
        <name>copy_sparse_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="247" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="247" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a6b55757fc9e4241fce5a3400065d0626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::coalesce_sparse_cpu</definition>
        <argsstring>(const SparseTensor &amp;self)</argsstring>
        <name>coalesce_sparse_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="257" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="257" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a60fad2847d6b0bb3145ca953e6448e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::sparse_mask_out_cpu</definition>
        <argsstring>(SparseTensor &amp;r, const Tensor &amp;t, const SparseTensor &amp;mask)</argsstring>
        <name>sparse_mask_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="329" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="329" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_8cpp_1a6b4a33210c3f6fb0cc6ccf0fd010ba85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::sparse_mask_cpu</definition>
        <argsstring>(const Tensor &amp;t, SparseTensorRef mask)</argsstring>
        <name>sparse_mask_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_sparse_tensor_ref" kindref="compound">SparseTensorRef</ref></type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" line="384" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp" bodystart="384" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1af2743e3dab7820b9c096861ce2b831ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::zero_sparse_</definition>
        <argsstring>(SparseTensor &amp;self)</argsstring>
        <name>zero_sparse_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="43" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="43" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a48a5c2114d578b1caf2d0ceb71fc614a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::mul_out_sparse_scalar</definition>
        <argsstring>(SparseTensor &amp;r, const SparseTensor &amp;t, Scalar value)</argsstring>
        <name>mul_out_sparse_scalar</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="69" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="69" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a8b87f635332409a31832967ff2622b7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::mul_sparse_scalar</definition>
        <argsstring>(const SparseTensor &amp;t, Scalar value)</argsstring>
        <name>mul_sparse_scalar</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="87" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1af514d36d31457a9730b8b8ee32147b0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::mul_sparse_scalar_</definition>
        <argsstring>(SparseTensor &amp;t, Scalar v)</argsstring>
        <name>mul_sparse_scalar_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="93" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a3c044ef6933e9da929c1901f6f927597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::log1p_out_sparse</definition>
        <argsstring>(SparseTensor &amp;r, const SparseTensor &amp;t)</argsstring>
        <name>log1p_out_sparse</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="103" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="103" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a3365044b1fc9377785349ea768910c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::log1p_sparse_</definition>
        <argsstring>(SparseTensor &amp;t)</argsstring>
        <name>log1p_sparse_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="119" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1ad13eecaa4b4f282f60590d8f5c94ab97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::pow_out_sparse_scalar</definition>
        <argsstring>(SparseTensor &amp;r, const SparseTensor &amp;t_, Scalar value)</argsstring>
        <name>pow_out_sparse_scalar</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t_</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="130" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="130" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a347792fbeda2cdb5ff89ffd85d414d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::pow_sparse_scalar</definition>
        <argsstring>(const SparseTensor &amp;t, Scalar value)</argsstring>
        <name>pow_sparse_scalar</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="149" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a2158433317c0de70e006ffef456e9cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::div_out_sparse_scalar</definition>
        <argsstring>(SparseTensor &amp;r, const SparseTensor &amp;t, Scalar value)</argsstring>
        <name>div_out_sparse_scalar</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="159" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="159" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a8200e94f76ee5c1c0b4f049273b5734b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::div_sparse_scalar</definition>
        <argsstring>(const SparseTensor &amp;t, Scalar value)</argsstring>
        <name>div_sparse_scalar</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="177" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="177" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a14c2792261114fb4d91f7ef0f58e0d45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::div_sparse_scalar_</definition>
        <argsstring>(SparseTensor &amp;t, Scalar value)</argsstring>
        <name>div_sparse_scalar_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="183" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="183" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a55dc81e3c3ea1afa43c0ea9507f88154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::norm_sparse</definition>
        <argsstring>(const SparseTensor &amp;self, Scalar value)</argsstring>
        <name>norm_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="192" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="192" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1ada254b8e0326d61ca423d4ff32c1b5c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::s_add_out_sparse_cpu</definition>
        <argsstring>(SparseTensor &amp;r, const SparseTensor &amp;t, const SparseTensor &amp;src, Scalar value)</argsstring>
        <name>s_add_out_sparse_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="202" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="202" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a0bd35572dfcfecde4ed32f9dbb28cb7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::s_add_sparse_cpu</definition>
        <argsstring>(const SparseTensor &amp;t, const SparseTensor &amp;src, Scalar alpha)</argsstring>
        <name>s_add_sparse_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="299" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="299" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a2c18a4b409b4eaf55593ba21a9fb25f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::s_add_sparse_cpu_</definition>
        <argsstring>(SparseTensor &amp;t, const SparseTensor &amp;src, Scalar alpha)</argsstring>
        <name>s_add_sparse_cpu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="305" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="305" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a5e89ddb170048c98ccd242a1da48ac5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename scalar_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::native::add_dense_sparse_worker_cpu</definition>
        <argsstring>(Tensor &amp;r, Scalar value, const SparseTensor &amp;sparse, const Tensor &amp;indices, const Tensor &amp;values)</argsstring>
        <name>add_dense_sparse_worker_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>sparse</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="315" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="315" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1ad31b5f95931c3e27acd4dc14e6446dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::add_out_dense_sparse_cpu</definition>
        <argsstring>(Tensor &amp;r, const Tensor &amp;dense, SparseTensorRef sparse__, Scalar value)</argsstring>
        <name>add_out_dense_sparse_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dense</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_sparse_tensor_ref" kindref="compound">SparseTensorRef</ref></type>
          <declname>sparse__</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="334" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="334" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1aa8bf0403dde156224f9d2cfe947cec53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::add_dense_sparse_cpu</definition>
        <argsstring>(const Tensor &amp;t, SparseTensorRef src, Scalar alpha)</argsstring>
        <name>add_dense_sparse_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_sparse_tensor_ref" kindref="compound">SparseTensorRef</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="379" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="379" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a6c09c4ccda848d7f8950734f0c58b778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::add_dense_sparse_cpu_</definition>
        <argsstring>(Tensor &amp;t, SparseTensorRef src, Scalar alpha)</argsstring>
        <name>add_dense_sparse_cpu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_sparse_tensor_ref" kindref="compound">SparseTensorRef</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="385" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="385" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a11458a80a59790f92569f21c5d72c3af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::s_sub_out_sparse_cpu</definition>
        <argsstring>(SparseTensor &amp;r, const SparseTensor &amp;t, const SparseTensor &amp;src, Scalar value)</argsstring>
        <name>s_sub_out_sparse_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="394" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="394" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a34f7291f5e2d8500bb49dce4e8f68fbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::s_sub_sparse_cpu</definition>
        <argsstring>(const SparseTensor &amp;t, const SparseTensor &amp;src, Scalar alpha)</argsstring>
        <name>s_sub_sparse_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="411" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="411" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1ac3b1da0f91066719d41dbbc80aafd8e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::s_sub_sparse_cpu_</definition>
        <argsstring>(SparseTensor &amp;t, const SparseTensor &amp;src, Scalar alpha)</argsstring>
        <name>s_sub_sparse_cpu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="417" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="417" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1ae2543723c0b059436ae7b8d09aa48452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::s_mul_out_sparse_cpu</definition>
        <argsstring>(SparseTensor &amp;r, const SparseTensor &amp;t_, const SparseTensor &amp;src_)</argsstring>
        <name>s_mul_out_sparse_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>src_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="425" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="425" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a780e73025bf5e57224d6d901bcc8e357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::s_mul_sparse_cpu</definition>
        <argsstring>(const SparseTensor &amp;t, const SparseTensor &amp;src)</argsstring>
        <name>s_mul_sparse_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="517" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="517" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a5db0fc34dba7121b0c4df26470385ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::s_mul_sparse_cpu_</definition>
        <argsstring>(SparseTensor &amp;t, const SparseTensor &amp;src)</argsstring>
        <name>s_mul_sparse_cpu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="523" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="523" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a4135defba130245621a8fed1ee674619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename scalar_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::native::s_addmm_out_sparse_dense_worker</definition>
        <argsstring>(int64_t nnz, int64_t dim_i, int64_t dim_j, int64_t dim_k, Tensor &amp;r, Scalar beta, const Tensor &amp;t, Scalar alpha, const Tensor &amp;csr, const Tensor &amp;indices, const Tensor &amp;values, const Tensor &amp;dense)</argsstring>
        <name>s_addmm_out_sparse_dense_worker</name>
        <param>
          <type>int64_t</type>
          <declname>nnz</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_i</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_j</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_k</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>csr</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dense</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="533" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="533" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1af29f1338f3675e7b76edff6eee76b62b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::s_addmm_out_sparse_dense_cpu</definition>
        <argsstring>(Tensor &amp;r, const Tensor &amp;t, const SparseTensor &amp;sparse_, const Tensor &amp;dense, Scalar beta, Scalar alpha)</argsstring>
        <name>s_addmm_out_sparse_dense_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>sparse_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dense</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="579" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="579" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1ac70c07bc7f778482090b43a29f0e771d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::s_addmm_sparse_dense_cpu</definition>
        <argsstring>(const Tensor &amp;t, const SparseTensor &amp;sparse, const Tensor &amp;dense, Scalar beta, Scalar alpha)</argsstring>
        <name>s_addmm_sparse_dense_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>sparse</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dense</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="635" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="635" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a31810ffaa450553355da28c06647995c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::s_addmm_sparse_dense_cpu_</definition>
        <argsstring>(Tensor &amp;t, const SparseTensor &amp;sparse, const Tensor &amp;dense, Scalar beta, Scalar alpha)</argsstring>
        <name>s_addmm_sparse_dense_cpu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>sparse</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dense</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="647" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="647" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a7c7f755cbf41433923a5155a58c876d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::hspmm_out_sparse_cpu</definition>
        <argsstring>(SparseTensor &amp;r, const SparseTensor &amp;sparse_, const Tensor &amp;dense)</argsstring>
        <name>hspmm_out_sparse_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>sparse_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dense</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="662" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="662" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a880789568e8c84e5fb9908073705463c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref></type>
        <definition>SparseTensor at::native::hspmm_sparse_cpu</definition>
        <argsstring>(const SparseTensor &amp;sparse, const Tensor &amp;dense)</argsstring>
        <name>hspmm_sparse_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>sparse</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dense</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="728" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="728" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1aef81b4c661588d10cb0ada1ccd061fe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
        <definition>SparseTensor&amp; at::native::_sspaddmm_out_cpu</definition>
        <argsstring>(SparseTensor &amp;r, const SparseTensor &amp;t, const SparseTensor &amp;sparse_, const Tensor &amp;dense, Scalar beta, Scalar alpha)</argsstring>
        <name>_sspaddmm_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">SparseTensor</ref> &amp;</type>
          <declname>sparse_</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dense</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="738" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="738" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a5905ec602a6748ce9fd1af5f94ae19e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sspaddmm_out_only_sparse</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta, Scalar alpha)</argsstring>
        <name>_sspaddmm_out_only_sparse</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="850" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="850" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1ad916eb2204a04e62686c6da35d5ede2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::smm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat2)</argsstring>
        <name>smm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="856" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="856" bodyend="860"/>
      </memberdef>
      <memberdef kind="function" id="_sparse_tensor_math_8cpp_1a6609fd5b7673945934c16485ec709c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sspaddmm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta, Scalar alpha)</argsstring>
        <name>sspaddmm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" line="863" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp" bodystart="863" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="_spectral_ops_8cpp_1a645c24147dbd8bffbda6f8a7e6579c27" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native::_fft</definition>
        <argsstring>(const Tensor &amp;self, const int64_t signal_ndim, const bool complex_input, const bool complex_output, const bool inverse, IntList signal_sizes, const bool normalized, const bool onesided)</argsstring>
        <name>_fft</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>signal_ndim</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>complex_input</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>complex_output</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>inverse</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>signal_sizes</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>normalized</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>onesided</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" line="22" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" bodystart="22" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="_spectral_ops_8cpp_1afe21b4289ad1e20054b717cfc1e268b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::_cufft_get_plan_cache_max_size</definition>
        <argsstring>()</argsstring>
        <name>_cufft_get_plan_cache_max_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" line="148" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="_spectral_ops_8cpp_1a3074da40cb8449eea615fb387346ede4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at::native::_cufft_set_plan_cache_max_size</definition>
        <argsstring>(int64_t max_size)</argsstring>
        <name>_cufft_set_plan_cache_max_size</name>
        <param>
          <type>int64_t</type>
          <declname>max_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" line="152" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="_spectral_ops_8cpp_1abddb0f8af3453748a472de6e6dc9dcf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::_cufft_get_plan_cache_size</definition>
        <argsstring>()</argsstring>
        <name>_cufft_get_plan_cache_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" line="156" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="_spectral_ops_8cpp_1a16e35559d284b8f8eec6531c44b950c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at::native::_cufft_clear_plan_cache</definition>
        <argsstring>()</argsstring>
        <name>_cufft_clear_plan_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" line="160" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="_spectral_ops_8cpp_1abb21d76421ac07a1be492352026dc4bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::fft</definition>
        <argsstring>(const Tensor &amp;self, const int64_t signal_ndim, const bool normalized)</argsstring>
        <name>fft</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>signal_ndim</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>normalized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" line="164" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="_spectral_ops_8cpp_1a15c155925fd26fc6486c99e9c1f60240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::ifft</definition>
        <argsstring>(const Tensor &amp;self, const int64_t signal_ndim, const bool normalized)</argsstring>
        <name>ifft</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>signal_ndim</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>normalized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" line="170" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" bodystart="170" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="_spectral_ops_8cpp_1ae5d04d3ee0389645ee5d646a3d9191e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::rfft</definition>
        <argsstring>(const Tensor &amp;self, const int64_t signal_ndim, const bool normalized, const bool onesided)</argsstring>
        <name>rfft</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>signal_ndim</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>normalized</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>onesided</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" line="176" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" bodystart="176" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="_spectral_ops_8cpp_1a7d0f386c19216022bd253cf4b71a324a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::irfft</definition>
        <argsstring>(const Tensor &amp;self, const int64_t signal_ndim, const bool normalized, const bool onesided, IntList signal_sizes)</argsstring>
        <name>irfft</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>signal_ndim</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>normalized</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>onesided</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>signal_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" line="183" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" bodystart="183" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="_spectral_ops_8cpp_1ae6530b3fe6183417cba07b057fca8697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::stft</definition>
        <argsstring>(const Tensor &amp;self, const int64_t n_fft, const int64_t hop_length, const int64_t win_length, const Tensor &amp;window, const bool normalized, const bool onesided)</argsstring>
        <name>stft</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>n_fft</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>hop_length</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>win_length</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>normalized</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>onesided</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" line="191" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOps.cpp" bodystart="191" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="_spectral_ops_utils_8h_1a89f02620c0603d0a87bc554c046d7bbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::infer_ft_real_to_complex_onesided_size</definition>
        <argsstring>(int64_t real_size)</argsstring>
        <name>infer_ft_real_to_complex_onesided_size</name>
        <param>
          <type>int64_t</type>
          <declname>real_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOpsUtils.h" line="37" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOpsUtils.h" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="_spectral_ops_utils_8h_1ab4395f563a2a36e10493719b5b756c6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::infer_ft_complex_to_real_onesided_size</definition>
        <argsstring>(int64_t complex_size, int64_t expected_size=-1)</argsstring>
        <name>infer_ft_complex_to_real_onesided_size</name>
        <param>
          <type>int64_t</type>
          <declname>complex_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>expected_size</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOpsUtils.h" line="41" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SpectralOpsUtils.h" bodystart="41" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="_summary_ops_8cpp_1a4cc3a43dd6e72de0d3a01fe7956da8c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_bincount_cpu</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weights, int64_t minlength)</argsstring>
        <name>_bincount_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>minlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SummaryOps.cpp" line="54" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/SummaryOps.cpp" bodystart="54" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1a62b6a19a74a4ba1aa7bd974aafddd456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::native::allclose</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, double rtol, double atol, bool equal_nan)</argsstring>
        <name>allclose</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rtol</declname>
        </param>
        <param>
          <type>double</type>
          <declname>atol</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>equal_nan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="32" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1ad59558717aa5c91d37ecf906bfa5d65f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::isclose</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, double rtol, double atol, bool equal_nan)</argsstring>
        <name>isclose</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rtol</declname>
        </param>
        <param>
          <type>double</type>
          <declname>atol</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>equal_nan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="36" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="36" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1a0b11486943a3a56958046b30797cabf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::native::is_nonzero</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>is_nonzero</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="53" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1a41f88b80271a11936e112cd96d6a42a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::where</definition>
        <argsstring>(const Tensor &amp;condition, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>where</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="71" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="71" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1aa98d6a19dbb927d91c015b53f96919d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_s_where_cpu</definition>
        <argsstring>(const Tensor &amp;condition, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>_s_where_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="81" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="81" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1a01ec4ba5b2c217531f801f9abaa777ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::native::kthvalue</definition>
        <argsstring>(const Tensor &amp;self, int64_t k, int64_t dim, bool keepdim)</argsstring>
        <name>kthvalue</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1aad3bda68768fa27df6eff32b9bd3c3a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>std::tuple&lt;Tensor &amp;,Tensor &amp;&gt; at::native::kthvalue_out</definition>
        <argsstring>(Tensor &amp;values, Tensor &amp;indices, const Tensor &amp;self, int64_t k, int64_t dim, bool keepdim)</argsstring>
        <name>kthvalue_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="95" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="95" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1a891c861598b3d11f4c105c540fcfdefa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::native::median</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>median</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="109" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1aa43be7b50b020c92cb8928aa02c94c93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>std::tuple&lt;Tensor &amp;,Tensor &amp;&gt; at::native::median_out</definition>
        <argsstring>(Tensor &amp;values, Tensor &amp;indices, const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>median_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="115" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="115" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1a9dfcb0968c6c16ccca66787df80bde47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::native::mode</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>mode</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="129" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="129" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1a325c42a46b154291200bc9572361a4e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>std::tuple&lt;Tensor &amp;,Tensor &amp;&gt; at::native::mode_out</definition>
        <argsstring>(Tensor &amp;values, Tensor &amp;indices, const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>mode_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="135" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="135" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1a9dc4c044eed424978fee5420c4b176ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::native::max</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>max</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="149" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1aa98348a8be35372c55ccb721ae8ff36a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>std::tuple&lt;Tensor &amp;,Tensor &amp;&gt; at::native::max_out</definition>
        <argsstring>(Tensor &amp;max, Tensor &amp;max_indices, const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>max_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>max_indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="155" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="155" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1aee775250a26f9b04a213900107cb13d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::max_values</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>max_values</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="169" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1ae45e8788b37b0f97800051316b646eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::native::min</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>min</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="173" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="173" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1a59d3336e42ad6e6344e03dff2147b277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>std::tuple&lt;Tensor &amp;,Tensor &amp;&gt; at::native::min_out</definition>
        <argsstring>(Tensor &amp;min, Tensor &amp;min_indices, const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>min_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>min_indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="179" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="179" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1abffb478aac4f06aa8eda027464ccf760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::min_values</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>min_values</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="193" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1ae6fa4eacd28fe6eb5dbe5dc484f23acd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::argmax</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>argmax</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="199" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1a612a28368bfb4a9c0f6805f32d558300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::argmax</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>argmax</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="203" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1a6c11bc112bcd5e6ac4e5b85d29489945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::argmin</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>argmin</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="207" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1ac4549e8f459e551b3a3e844da0f7fd66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::argmin</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>argmin</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="211" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1ad1a1a42df5baf0730ef5a603c31b98c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_argmax</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>_argmax</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="220" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_compare_8cpp_1a789d91865ba072c7c27ea51f0ef50b14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_argmin</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim)</argsstring>
        <name>_argmin</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" line="224" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorCompare.cpp" bodystart="224" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1aa5851709ef112951254b57016f8c9376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::arange</definition>
        <argsstring>(Scalar start, Scalar end, const TensorOptions &amp;options)</argsstring>
        <name>arange</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="49" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1accc73a9a305c98c11f78978dbf2a9fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::arange</definition>
        <argsstring>(Scalar start, Scalar end, Scalar step, const TensorOptions &amp;options)</argsstring>
        <name>arange</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>step</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1afc05dfe5081c288e6d63b3d11fd02fab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::arange_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end)</argsstring>
        <name>arange_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="61" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a580a4ec29698e666d18a929e21b7b3df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::arange_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end, Scalar step)</argsstring>
        <name>arange_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="65" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1ae6ea605a41ddae2ff9f3701a87ce6bc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::arange</definition>
        <argsstring>(Scalar end, const TensorOptions &amp;options)</argsstring>
        <name>arange</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="69" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a72d09a4cc2b1f195e5dd35211f487235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::arange_out</definition>
        <argsstring>(Tensor &amp;result, Scalar end)</argsstring>
        <name>arange_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="73" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a992523f3f09cda951d39339911d06b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_dim_arange</definition>
        <argsstring>(const Tensor &amp;like, int64_t dim)</argsstring>
        <name>_dim_arange</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>like</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="77" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a847e99cffb5bc8067b188c40c8bc58fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::empty</definition>
        <argsstring>(IntList size, const TensorOptions &amp;options)</argsstring>
        <name>empty</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="83" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1aa316cf6c55c906288fc885dacbafc8df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::empty_out</definition>
        <argsstring>(Tensor &amp;result, IntList size)</argsstring>
        <name>empty_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="87" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="87" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1ae1d5054edd8bd07716f0dbcb80f7c490" prot="public" static="no" const="yes" explicit="no" inline="no" refqual="lvalue" virt="non-virtual">
        <type></type>
        <definition>at::native::AT_FORALL_SCALAR_TYPES</definition>
        <argsstring>(DEFINE_CAST_OP) Tensor empty_like(const Tensor &amp;self)</argsstring>
        <name>AT_FORALL_SCALAR_TYPES</name>
        <param>
          <type>DEFINE_CAST_OP</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="109" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="109" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a02c8add1bc598183e39e752e89490c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::empty_like</definition>
        <argsstring>(const Tensor &amp;self, const TensorOptions &amp;options)</argsstring>
        <name>empty_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="117" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="117" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a370dbb92b72a11f01c5d75f25854b11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::eye</definition>
        <argsstring>(int64_t n, const TensorOptions &amp;options)</argsstring>
        <name>eye</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="130" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a2468f63f3e3f505025c9a6144bdaacee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::eye</definition>
        <argsstring>(int64_t n, int64_t m, const TensorOptions &amp;options)</argsstring>
        <name>eye</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="134" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a316ced72eeaa2a8aede979ebbf17367d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::eye_out_cpu</definition>
        <argsstring>(Tensor &amp;result, int64_t n)</argsstring>
        <name>eye_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="139" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1abfbd7b95d981df27921c8b189b927bc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::eye_out_cpu</definition>
        <argsstring>(Tensor &amp;result, int64_t n, int64_t m)</argsstring>
        <name>eye_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="143" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="143" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1aa2cfcc6326f4138266bc62695d35c7df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::full</definition>
        <argsstring>(IntList size, Scalar fill_value, const TensorOptions &amp;options)</argsstring>
        <name>full</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>fill_value</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="174" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a4dc83df5b60d1938c76eb081b1f9db63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::full_out</definition>
        <argsstring>(Tensor &amp;result, IntList size, Scalar fill_value)</argsstring>
        <name>full_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>fill_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="182" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="182" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a2b6301beb47b92e03f7f7da0be1029b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::full_like</definition>
        <argsstring>(const Tensor &amp;self, Scalar fill_value)</argsstring>
        <name>full_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>fill_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="190" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a3ebe7293b253623c2194076d6196a0b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::full_like</definition>
        <argsstring>(const Tensor &amp;self, Scalar fill_value, const TensorOptions &amp;options)</argsstring>
        <name>full_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>fill_value</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="194" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a22aaa036fbd10539e9b5c9e7af960b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::linspace</definition>
        <argsstring>(Scalar start, Scalar end, const TensorOptions &amp;options)</argsstring>
        <name>linspace</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="200" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a8cd8d998fe985011f3016fa0e5597300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::linspace</definition>
        <argsstring>(Scalar start, Scalar end, int64_t steps, const TensorOptions &amp;options)</argsstring>
        <name>linspace</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>steps</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="204" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="204" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a24380a321428bda05be4d369b1a6c946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::linspace_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end)</argsstring>
        <name>linspace_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="212" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a2eb013608097eb539977b66d77e4c97b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::linspace_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end, int64_t steps)</argsstring>
        <name>linspace_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="216" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1aca2a60750a6f6fa436ac0d72416e2403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::logspace</definition>
        <argsstring>(Scalar start, Scalar end, const TensorOptions &amp;options)</argsstring>
        <name>logspace</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="222" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a6e18be6e4b8e3859e5c0ad9393d850fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::logspace</definition>
        <argsstring>(Scalar start, Scalar end, int64_t steps, const TensorOptions &amp;options)</argsstring>
        <name>logspace</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>steps</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="226" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="226" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a2afa042ae44cca2ea5b73ba933d4a3e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::logspace_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end)</argsstring>
        <name>logspace_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="234" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="234" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a2a440908aefec4592b2bcdfe4914ac1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::logspace_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end, int64_t steps)</argsstring>
        <name>logspace_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="238" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a738adee49fde8c0b7ceeb3db223cdaf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::ones</definition>
        <argsstring>(IntList size, const TensorOptions &amp;options)</argsstring>
        <name>ones</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="244" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1ac4297ce15a2e0e43581fb266284591ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::ones_out</definition>
        <argsstring>(Tensor &amp;result, IntList size)</argsstring>
        <name>ones_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="248" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a3602e7467f26fd3998d588454f687b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::ones_like</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>ones_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="252" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a06e8a715fce773c19c0390e0dcf09ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::ones_like</definition>
        <argsstring>(const Tensor &amp;self, const TensorOptions &amp;options)</argsstring>
        <name>ones_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="256" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a7fb19208328d6990cecc7bdb58c8a4da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::rand</definition>
        <argsstring>(IntList size, const TensorOptions &amp;options)</argsstring>
        <name>rand</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="262" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="262" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1aa5c714132c76ea91d11e876d11a8139a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::rand</definition>
        <argsstring>(IntList size, Generator *generator, const TensorOptions &amp;options)</argsstring>
        <name>rand</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="266" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1af836858e7792d8c86175c482d932cd6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::rand_out</definition>
        <argsstring>(Tensor &amp;result, IntList size)</argsstring>
        <name>rand_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="271" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a0c5c7d5ea925d62c32df6a24c146e753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::rand_out</definition>
        <argsstring>(Tensor &amp;result, IntList size, Generator *generator)</argsstring>
        <name>rand_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="275" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a787c98a5fe2e5874607039f7bc1197fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::rand_like</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>rand_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="280" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="280" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a8955ff22200d860f20c8c4044f66ef6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::rand_like</definition>
        <argsstring>(const Tensor &amp;self, const TensorOptions &amp;options)</argsstring>
        <name>rand_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="284" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="284" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a415b728a65a2198cfabbebbd233af7a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randint</definition>
        <argsstring>(int64_t high, IntList size, const TensorOptions &amp;options)</argsstring>
        <name>randint</name>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="290" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="290" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1adc0b5dd3b34d2e594e4d6f42f2dc9a04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randint</definition>
        <argsstring>(int64_t high, IntList size, Generator *generator, const TensorOptions &amp;options)</argsstring>
        <name>randint</name>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="294" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="294" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a76d8c45c7bb0ad6fd6ea68c342b164f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randint</definition>
        <argsstring>(int64_t low, int64_t high, IntList size, const TensorOptions &amp;options)</argsstring>
        <name>randint</name>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="302" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="302" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1ab3ddc74d2ec7d0d493057b319201cf79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randint</definition>
        <argsstring>(int64_t low, int64_t high, IntList size, Generator *generator, const TensorOptions &amp;options)</argsstring>
        <name>randint</name>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="310" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="310" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a46f53da32fe39a78e7fd695a447d7416" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::randint_out</definition>
        <argsstring>(Tensor &amp;result, int64_t high, IntList size)</argsstring>
        <name>randint_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="320" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="320" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1aa1dbcff6f55feb0af5282ab92183df6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::randint_out</definition>
        <argsstring>(Tensor &amp;result, int64_t high, IntList size, Generator *generator)</argsstring>
        <name>randint_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="324" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="324" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1ada8e5f6df490d5d3547dc241514cb55f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::randint_out</definition>
        <argsstring>(Tensor &amp;result, int64_t low, int64_t high, IntList size)</argsstring>
        <name>randint_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="333" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="333" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a1e41e5927ad81185132810821357dea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::randint_out</definition>
        <argsstring>(Tensor &amp;result, int64_t low, int64_t high, IntList size, Generator *generator)</argsstring>
        <name>randint_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="337" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="337" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a2d07903d5c4dbaf5523ec77a54082fa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randint_like</definition>
        <argsstring>(const Tensor &amp;self, int64_t high)</argsstring>
        <name>randint_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="347" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="347" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1af58b5b2c7bb63d333d820fd7cdea1603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randint_like</definition>
        <argsstring>(const Tensor &amp;self, int64_t low, int64_t high)</argsstring>
        <name>randint_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="351" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="351" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a7cae6183e1dab45298c18e27082e6ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randint_like</definition>
        <argsstring>(const Tensor &amp;self, int64_t high, const TensorOptions &amp;options)</argsstring>
        <name>randint_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="355" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="355" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a71d0f3cb3536e9a976e256ee158abfa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randint_like</definition>
        <argsstring>(const Tensor &amp;self, int64_t low, int64_t high, const TensorOptions &amp;options)</argsstring>
        <name>randint_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="362" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="362" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1afa782833c813a54b1137a5459877d3a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randn</definition>
        <argsstring>(IntList size, const TensorOptions &amp;options)</argsstring>
        <name>randn</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="372" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="372" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1aad06c95c62003f24e6c1ffa666781ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randn</definition>
        <argsstring>(IntList size, Generator *generator, const TensorOptions &amp;options)</argsstring>
        <name>randn</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="376" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="376" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1afb916ae2b377d5eef04ea363e3349925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::randn_out</definition>
        <argsstring>(Tensor &amp;result, IntList size)</argsstring>
        <name>randn_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="381" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="381" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a46fbbacc9f1b4af5ed7ff573f183e845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::randn_out</definition>
        <argsstring>(Tensor &amp;result, IntList size, Generator *generator)</argsstring>
        <name>randn_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="385" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="385" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a9943d572bae1f78307f1f42ef8b29a5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randn_like</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>randn_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="390" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="390" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a76daefa063794e96a842afa4caca808f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randn_like</definition>
        <argsstring>(const Tensor &amp;self, const TensorOptions &amp;options)</argsstring>
        <name>randn_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="394" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="394" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a524d308bd07c1b89e1d8d5fbaef798fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>THGenerator *</type>
        <definition>THGenerator* at::native::get_generator</definition>
        <argsstring>(at::Generator *gen)</argsstring>
        <name>get_generator</name>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">at::Generator</ref> *</type>
          <declname>gen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="423" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="423" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1acd0ce1c43b28260653396ed30a60401e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randperm</definition>
        <argsstring>(int64_t n, const TensorOptions &amp;options)</argsstring>
        <name>randperm</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="429" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="429" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a97336219bded1baad547bdde38dc3e88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::randperm</definition>
        <argsstring>(int64_t n, Generator *generator, const TensorOptions &amp;options)</argsstring>
        <name>randperm</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="433" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="433" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1ac04d9c1d0afa526fba54c5f61e4f5c96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::randperm_out</definition>
        <argsstring>(Tensor &amp;result, int64_t n)</argsstring>
        <name>randperm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="438" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="438" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1ae65553d5bb7d575806733982fb22c55a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::randperm_out_cpu</definition>
        <argsstring>(Tensor &amp;result, int64_t n, Generator *generator)</argsstring>
        <name>randperm_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="442" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="442" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a051f0dab98aaee25d3fde7907c72a471" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::range</definition>
        <argsstring>(Scalar start, Scalar end, const TensorOptions &amp;options)</argsstring>
        <name>range</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="455" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="455" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1abdbb3f0ce06a943499acb25fd9a50e68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::range</definition>
        <argsstring>(Scalar start, Scalar end, Scalar step, const TensorOptions &amp;options)</argsstring>
        <name>range</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>step</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="459" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="459" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a5cdc4a60b2b1421afe5ce4348b81c962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::range_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end)</argsstring>
        <name>range_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="467" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="467" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a1232f369043e4c20ae7f147bfeebc9b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::range_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end, Scalar step)</argsstring>
        <name>range_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="471" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="471" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a1e9f4fb36e10979e27011c2b8a02b761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::zeros</definition>
        <argsstring>(IntList size, const TensorOptions &amp;options)</argsstring>
        <name>zeros</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="477" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="477" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1ac118c5d6cbafbc4c44314b9b008938f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::zeros_out</definition>
        <argsstring>(Tensor &amp;result, IntList size)</argsstring>
        <name>zeros_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="482" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="482" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a2569e8d610bab6b618a9cd83317b3a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::zeros_like</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>zeros_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="491" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="491" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1ab35172192a2aeae4d7a0c72be63fa14b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::zeros_like</definition>
        <argsstring>(const Tensor &amp;self, const TensorOptions &amp;options)</argsstring>
        <name>zeros_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="495" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="495" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a4557c38548020c8220f4c0a5e1a3f5cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::bartlett_window</definition>
        <argsstring>(int64_t window_length, const TensorOptions &amp;options)</argsstring>
        <name>bartlett_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="507" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="507" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a039eb8aa978442f6eb4593162296af4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::bartlett_window</definition>
        <argsstring>(int64_t window_length, bool periodic, const TensorOptions &amp;options)</argsstring>
        <name>bartlett_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="511" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="511" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1ae9d500974302bb2f79364f4e2cb21828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::blackman_window</definition>
        <argsstring>(int64_t window_length, const TensorOptions &amp;options)</argsstring>
        <name>blackman_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="530" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="530" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a2ba86c18c36f5977a4960156f10d8a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::blackman_window</definition>
        <argsstring>(int64_t window_length, bool periodic, const TensorOptions &amp;options)</argsstring>
        <name>blackman_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="534" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="534" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1abc8fe85aa98c2f1188c280f50700dc0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::hamming_window</definition>
        <argsstring>(int64_t window_length, const TensorOptions &amp;options)</argsstring>
        <name>hamming_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="553" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="553" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a6e91b4d79f9839ebd5e6da60e12d3256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::hamming_window</definition>
        <argsstring>(int64_t window_length, bool periodic, const TensorOptions &amp;options)</argsstring>
        <name>hamming_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="557" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="557" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a620ad49c9de2e0685f54ee5ce70cf21d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::hamming_window</definition>
        <argsstring>(int64_t window_length, bool periodic, double alpha, const TensorOptions &amp;options)</argsstring>
        <name>hamming_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="565" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="565" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a9decfe91c7113070d24fc6ad74949a21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::hamming_window</definition>
        <argsstring>(int64_t window_length, bool periodic, double alpha, double beta, const TensorOptions &amp;options)</argsstring>
        <name>hamming_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="574" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="574" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a7416663fdedd578bb9b5c598b35700bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::hann_window</definition>
        <argsstring>(int64_t window_length, const TensorOptions &amp;options)</argsstring>
        <name>hann_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="594" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="594" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1ae16788310203577b278136e19d219390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::hann_window</definition>
        <argsstring>(int64_t window_length, bool periodic, const TensorOptions &amp;options)</argsstring>
        <name>hann_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="598" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="598" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a679387d9329fc7552e3a0572a3d47cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::tensor_cpu</definition>
        <argsstring>(ArrayRef&lt; T &gt; values, const TensorOptions &amp;options)</argsstring>
        <name>tensor_cpu</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; T &gt;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="610" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="610" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_factories_8cpp_1a4cba2330b8edc45cfd977f2dc5b30bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::tensor_cuda</definition>
        <argsstring>(ArrayRef&lt; T &gt; values, const TensorOptions &amp;options)</argsstring>
        <name>tensor_cuda</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; T &gt;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" line="620" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorFactories.cpp" bodystart="620" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_properties_8cpp_1ac02ccf3273626e90a4d55808d40bbc18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::native::is_same_size</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>is_same_size</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorProperties.cpp" line="10" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorProperties.cpp" bodystart="10" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_properties_8cpp_1a7a8370e77339f804feaaea188238b10b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::size</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>size</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorProperties.cpp" line="14" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorProperties.cpp" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_properties_8cpp_1a0625896c9166184718b6b728c41f55e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::stride</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>stride</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorProperties.cpp" line="20" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorProperties.cpp" bodystart="20" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_properties_8cpp_1a0a76defc870d6cf6eec1cebbaab030d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::native::cudnn_is_acceptable</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>cudnn_is_acceptable</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorProperties.cpp" line="26" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorProperties.cpp" bodystart="26" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a50f621b2c90127fd6b91ec438e601e6e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::check_cat_no_zero_dim</definition>
        <argsstring>(TensorList tensors)</argsstring>
        <name>check_cat_no_zero_dim</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="15" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="15" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1adb3caad0e462d5f4cc7e04c9a6b11063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::cat_out</definition>
        <argsstring>(Tensor &amp;result, TensorList tensors, int64_t dim)</argsstring>
        <name>cat_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="24" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a3f39a8892f2a033f10f55c3866a06197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::cat</definition>
        <argsstring>(TensorList tensors, int64_t dim)</argsstring>
        <name>cat</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="30" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a97cc6806d886e7a0da693dad98477be3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::vector&lt;Tensor&gt; at::native::chunk</definition>
        <argsstring>(const Tensor &amp;self, int64_t chunks, int64_t dim)</argsstring>
        <name>chunk</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>chunks</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="36" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="36" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a9934db62c09b7721311164a2699c1f36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::diagflat</definition>
        <argsstring>(const Tensor &amp;self, int64_t offset)</argsstring>
        <name>diagflat</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="58" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a1c6ae7dce35257f1a2874d59fed8cb6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::diagonal</definition>
        <argsstring>(const Tensor &amp;self, int64_t offset, int64_t dim1_, int64_t dim2_)</argsstring>
        <name>diagonal</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim1_</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim2_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="62" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="62" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1ac2495ab7cf82d4c547f9a08bab669100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::expand</definition>
        <argsstring>(const Tensor &amp;self, IntList size, bool implicit)</argsstring>
        <name>expand</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>implicit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="111" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="111" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1af42f262096286183bb73fa58604e1a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::expand_as</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>expand_as</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="134" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a0fed69978aee49d3472bf9200f902b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::as_strided</definition>
        <argsstring>(const Tensor &amp;self, IntList size, IntList stride, int64_t storage_offset)</argsstring>
        <name>as_strided</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>storage_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="138" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a4603663b8fb34d49e00caf69e0b2a8b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::as_strided_</definition>
        <argsstring>(Tensor &amp;self, IntList size, IntList stride, int64_t storage_offset)</argsstring>
        <name>as_strided_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>storage_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="142" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1abcb779cfbab0bbc9abe825cbc92afc6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::as_strided</definition>
        <argsstring>(const Tensor &amp;self, IntList size, IntList stride)</argsstring>
        <name>as_strided</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="146" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a83407349257473cda23fbb9f1025e2e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::as_strided_</definition>
        <argsstring>(Tensor &amp;self, IntList size, IntList stride)</argsstring>
        <name>as_strided_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="150" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1acb4503d2d6da910819d07e36a6a414a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::narrow</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, int64_t start, int64_t length)</argsstring>
        <name>narrow</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="154" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="154" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1ad0edac0dd7c7119f9bfcc7226112694c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::permute</definition>
        <argsstring>(const Tensor &amp;self, IntList dims)</argsstring>
        <name>permute</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="170" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="170" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a04d878816dfdb764d32640b1da052710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::repeat</definition>
        <argsstring>(const Tensor &amp;self, IntList repeats)</argsstring>
        <name>repeat</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>repeats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="192" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="192" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a24e6e803b2f80c7052e13015698ddc0a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int64_t &gt;</type>
        <definition>static std::vector&lt;int64_t&gt; at::native::infer_size</definition>
        <argsstring>(IntList shape, int64_t numel)</argsstring>
        <name>infer_size</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>shape</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="225" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="225" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1adf52d0775ceeaef8db7e424e61c91be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::reshape</definition>
        <argsstring>(const Tensor &amp;self, IntList proposed_shape)</argsstring>
        <name>reshape</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>proposed_shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="265" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="265" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1ae3885340dfadd414da8f14ec74c63e70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::reshape_as</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>reshape_as</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="276" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="276" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a803b2f4c85d7b7838b47ea518cd0ab15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::select</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, int64_t index)</argsstring>
        <name>select</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="280" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="280" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1ad8e2bb42e2f696f7eddfb46fa98b6676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::slice</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, int64_t start, int64_t end, int64_t step)</argsstring>
        <name>slice</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="302" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="302" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a268ffe8486ec1a31aaa6025de2c88de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::vector&lt;Tensor&gt; at::native::split</definition>
        <argsstring>(const Tensor &amp;self, int64_t split_size, int64_t dim)</argsstring>
        <name>split</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>split_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="341" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="341" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a1bc8da63f9bd6ba743a3aadfc4c55b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::vector&lt;Tensor&gt; at::native::split_with_sizes</definition>
        <argsstring>(const Tensor &amp;self, IntList split_sizes, int64_t dim)</argsstring>
        <name>split_with_sizes</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>split_sizes</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="365" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="365" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1aa0e9bfd62913359e41a22732e35222fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::vector&lt;Tensor&gt; at::native::get_stack_inputs</definition>
        <argsstring>(TensorList tensors, int64_t dim)</argsstring>
        <name>get_stack_inputs</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="394" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="394" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a28cc7baa9c5d3b2a2f365f8a58980687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::stack</definition>
        <argsstring>(TensorList tensors, int64_t dim)</argsstring>
        <name>stack</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="402" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="402" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1ac2ffe08b0309a41b706f6137fedfc815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::stack_out</definition>
        <argsstring>(Tensor &amp;result, TensorList tensors, int64_t dim)</argsstring>
        <name>stack_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="410" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="410" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a9d7e7a7a5847d25f70dca1b3361c65ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor&amp; at::native::sparse_transpose_</definition>
        <argsstring>(Tensor &amp;self, int64_t dim0, int64_t dim1)</argsstring>
        <name>sparse_transpose_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim0</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="418" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="418" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a5033785d3a9b0c0ae4ca0cef6473027b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::transpose_</definition>
        <argsstring>(Tensor &amp;self, int64_t dim0, int64_t dim1)</argsstring>
        <name>transpose_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim0</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="449" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="449" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1aa4e7c70fc6ff4b94120bb71b88b3e2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::transpose</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim0, int64_t dim1)</argsstring>
        <name>transpose</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim0</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="468" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="468" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1ac2c6a2b5986c3dc8dedece4c690b9357" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::check_t</definition>
        <argsstring>(const Tensor &amp;self, const char *fn)</argsstring>
        <name>check_t</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="488" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="488" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1ac54c100bfdab40da0a5b4bd01500b12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::t</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>t</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="501" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="501" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a56d6966202438303db1c4720a5ec6728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::t_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>t_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="506" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="506" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a732652b70cab21d216ef8d795a837b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; std::vector&lt; int64_t &gt;, std::vector&lt; int64_t &gt; &gt;</type>
        <definition>std::tuple&lt;std::vector&lt;int64_t&gt;, std::vector&lt;int64_t&gt; &gt; at::native::inferSqueezeGeometry</definition>
        <argsstring>(const Tensor &amp;tensor)</argsstring>
        <name>inferSqueezeGeometry</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="512" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="512" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1abc24d2ac3d9e55d84819a2230237fd5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; std::vector&lt; int64_t &gt;, std::vector&lt; int64_t &gt; &gt;</type>
        <definition>std::tuple&lt;std::vector&lt;int64_t&gt;, std::vector&lt;int64_t&gt; &gt; at::native::inferSqueezeGeometry</definition>
        <argsstring>(const Tensor &amp;tensor, int64_t dim)</argsstring>
        <name>inferSqueezeGeometry</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="527" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="527" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1adf905a47087acb2de705542397d2ea40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; std::vector&lt; int64_t &gt;, std::vector&lt; int64_t &gt; &gt;</type>
        <definition>std::tuple&lt;std::vector&lt;int64_t&gt;, std::vector&lt;int64_t&gt; &gt; at::native::inferUnsqueezeGeometry</definition>
        <argsstring>(const Tensor &amp;tensor, int64_t dim)</argsstring>
        <name>inferUnsqueezeGeometry</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="541" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="541" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1ad214a461d5a66f07e0244b870711c686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::squeeze</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>squeeze</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="556" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="556" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1aead8406298239150d9d2612551cd8109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::squeeze</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>squeeze</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="561" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="561" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a55bc0f6ce4b328aa3f758e75cb7d38e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::squeeze_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>squeeze_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="572" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="572" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a27a657f8ecbc2cd979206a10cbfc0ed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::squeeze_</definition>
        <argsstring>(Tensor &amp;self, int64_t dim)</argsstring>
        <name>squeeze_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="577" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="577" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1ae0fa8143d3035528a153aa72cf6ba88e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::_unsafe_view</definition>
        <argsstring>(const Tensor &amp;self, IntList size)</argsstring>
        <name>_unsafe_view</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="598" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="598" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1af64cb60f574e7243343b1c29463ffbb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::unsqueeze</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>unsqueeze</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="602" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="602" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1ae2936d64c221b19516d0390953b36936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::unsqueeze_</definition>
        <argsstring>(Tensor &amp;self, int64_t dim)</argsstring>
        <name>unsqueeze_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="609" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="609" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1afd791e735b17c529dce9af3bf701f0d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::flatten</definition>
        <argsstring>(const Tensor &amp;self, int64_t start_dim, int64_t end_dim)</argsstring>
        <name>flatten</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start_dim</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>end_dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="616" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="616" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1ad2a8661a7734a961b029f07d71b53dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::view_as</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>view_as</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="643" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="643" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a275204ac053494e4465c402d7d23b02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::native::numel</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>numel</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="647" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="647" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a91f24a835ca73075b4a43a64f07edf11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::vector&lt;Tensor&gt; at::native::unbind</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>unbind</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="651" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="651" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_shape_8cpp_1a97148e9a777666b154062c6c0b92a2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::vector&lt;Tensor&gt; at::native::meshgrid</definition>
        <argsstring>(TensorList tensors)</argsstring>
        <name>meshgrid</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" line="661" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorShape.cpp" bodystart="661" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_transformations_8cpp_1a6a77acb27404bd4d2a59e6815b0aabcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::flip_cpu</definition>
        <argsstring>(const Tensor &amp;self, IntList dims)</argsstring>
        <name>flip_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorTransformations.cpp" line="12" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorTransformations.cpp" bodystart="12" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="_tensor_transformations_8h_1a77b5bff6a284556aa1f9a3d8ab821c9f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::native::check_errors</definition>
        <argsstring>(int64_t total_dims, int64_t flip_dims_size, IntList dims)</argsstring>
        <name>check_errors</name>
        <param>
          <type>int64_t</type>
          <declname>total_dims</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>flip_dims_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorTransformations.h" line="11" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorTransformations.h" bodystart="11" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="_type_properties_8cpp_1af2d24f0fe257ed213961169096e9e27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::native::is_cuda</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>is_cuda</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TypeProperties.cpp" line="8" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TypeProperties.cpp" bodystart="8" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="_type_properties_8cpp_1ad55d09440c1d1a75ba9136a19e6ae97c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::native::is_distributed</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>is_distributed</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TypeProperties.cpp" line="12" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TypeProperties.cpp" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="_type_properties_8cpp_1a86ccce8f39815265be4f9f8e7f9fe292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::native::is_floating_point</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>is_floating_point</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TypeProperties.cpp" line="16" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TypeProperties.cpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="_type_properties_8cpp_1a3341a6930bf012416b25bcf346592128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::native::is_signed</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>is_signed</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TypeProperties.cpp" line="20" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TypeProperties.cpp" bodystart="20" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="_type_properties_8cpp_1a01dc6206959e6083351a4b8add1f1112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::native::is_sparse</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>is_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TypeProperties.cpp" line="29" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TypeProperties.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="_type_properties_8cpp_1a818e3d7898cdf4e813c6b9f892c1b2dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::type_as</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>type_as</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TypeProperties.cpp" line="33" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TypeProperties.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ac2e0abc473bdf48f859b1df764b59753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::clamp</definition>
        <argsstring>(const Tensor &amp;self, Scalar min, Scalar max)</argsstring>
        <name>clamp</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="27" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a05075687619316eb27f2d5169587190f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::clamp_max</definition>
        <argsstring>(const Tensor &amp;self, Scalar max)</argsstring>
        <name>clamp_max</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="32" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a53c3e20a8f4317467344be111a378673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::clamp_min</definition>
        <argsstring>(const Tensor &amp;self, Scalar min)</argsstring>
        <name>clamp_min</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="37" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a9d6ab89b60d10fc505babd8a64f68335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_clamp__cpu</definition>
        <argsstring>(Tensor &amp;self, Scalar min, Scalar max)</argsstring>
        <name>_clamp__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="42" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a1bc31d9586a907be426ab50eb2439876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_clamp_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar min, Scalar max)</argsstring>
        <name>_clamp_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="46" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="46" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1acb525970fd6ef41fed6481824e94e131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_clamp_max__cpu</definition>
        <argsstring>(Tensor &amp;self, Scalar max)</argsstring>
        <name>_clamp_max__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="56" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a4687315b58c4812a5e9a2ae867f8f55e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_clamp_max_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar max)</argsstring>
        <name>_clamp_max_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="60" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a91dcab8e711d7d34cacfa2977d54eecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_clamp_min__cpu</definition>
        <argsstring>(Tensor &amp;self, Scalar min)</argsstring>
        <name>_clamp_min__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="66" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1aabf559bd6dffb983818e3fbddf9d68d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_clamp_min_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar min)</argsstring>
        <name>_clamp_min_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="70" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a63f92d6e9d3cbdd21310b6749b43f03b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::fill_</definition>
        <argsstring>(Tensor &amp;self, Scalar value)</argsstring>
        <name>fill_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="76" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a29e1e13445d346c47d9a82abcd1ff369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::fill_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;value)</argsstring>
        <name>fill_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="80" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a4b362a3a60539ea908a5673599dba55f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::abs</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>abs</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="122" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a90dd53fd9db581abf5537d61b48ab92d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_abs__cpu</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_abs__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="122" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ab74ecda698d53421c1684c5ace93a63a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_abs_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_abs_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="122" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a2e2b3fa8ad9a4554866c390bfc9e2b0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::acos</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>acos</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="123" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a9ef6ecc67e710d55af03aad33fbbe2ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_acos__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_acos__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="123" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a958e908b8c4817ee3e5d9d298cae3f8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_acos_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_acos_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="123" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a86cefbdf086355d2857e478a1460d61f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::asin</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>asin</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="124" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a4148dca808b08d0081f216306ad9585a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_asin__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_asin__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="124" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a7392c1207eb99c28bdebe28053ab0d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_asin_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_asin_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="124" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a90efb3735bd1e10112763b8548856eff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::atan</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>atan</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="125" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a553388ba3313fceebe7a548c9e77a4a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_atan__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_atan__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="125" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a45c580ffe2ee838d213dba8d44801fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_atan_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_atan_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="125" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ada9215c4aa677a4bf153c3b1cc3fa1f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::ceil</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>ceil</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="126" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1aa6bd9c3f61d1e4d2c3336a62eeb0357c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_ceil__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_ceil__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="126" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a9f2499128eefcc57554b500848bfd019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_ceil_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_ceil_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="126" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1af262caf10899916103616b9db761343b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::cos</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>cos</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="127" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a1974b23a4f515deae5075cf5ccff42eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_cos__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_cos__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="127" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a495ae783c72427e75e41b8419762ebfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_cos_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_cos_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="127" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a8791c986deea21c827337800d09c4681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::cosh</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>cosh</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="128" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a951c4968cf24d58c50332bc3d19dff8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_cosh__cpu</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_cosh__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="128" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a008f68df5122a1889c3afd34056d1c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_cosh_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_cosh_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="128" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a0da485622a8799db2bc8c383ecce7c24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::erf</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>erf</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="129" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a0bc807bdfab1aad87a26babc4490034f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_erf__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_erf__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="129" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a273980b5f8eb51c95813a5dffea06f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_erf_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_erf_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="129" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a938327b47e4012aa35fe915c12939eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::erfc</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>erfc</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="130" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1aa92a31f426dc1ef88a0f5a89b02f6ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_erfc__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_erfc__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="130" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a47b0fd00b0c864190dee65831b724e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_erfc_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_erfc_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="130" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a639f90caa5c9d7c2ab01f73c0bb4fd14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::exp</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>exp</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="131" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a816d50dd97872f1925f5430bd2cc19e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_exp__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_exp__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="131" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a7ce338a6d5749d3fcb3533c82dbc5c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_exp_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_exp_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="131" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a47c38a241e13580403c033a7473ce283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::expm1</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>expm1</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="132" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a0c12a9ecf503ca1e01da15fd577c79b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_expm1__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_expm1__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="132" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a4f91ddc67d8f04ac98dc800193802fd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_expm1_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_expm1_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="132" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ab0c83f9832c56814299ead37aab005df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::floor</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>floor</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="133" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a8d72180075b04f82c50ae40fb57cb5af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_floor__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_floor__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="133" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a8be88813c16ba532dcf0d504f247e2d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_floor_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_floor_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="133" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1aeda6cdb88ce0b62863389886ba0e3fdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::log</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>log</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="134" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1aa2003e12c69fe2bb34b26392ecb4ed2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_log__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="134" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a3abe0c2799ebed42bca7ff8b8535226b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_log_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="134" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ac422c3281e6e9df2918c2451380456df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::log10</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>log10</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="135" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a606c3cacd26e7ac28d29c244974db528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log10__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_log10__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="135" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a36b09dab2c6ae2878289838eb36f45bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log10_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_log10_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="135" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ab5fb9a0d53c8cde369595bea2e899cd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::log1p</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>log1p</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="136" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ae421b8f43db3d70585e0968e37dec22f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log1p__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_log1p__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="136" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1aa23cc6d8b6c4523ffc5d610307490f6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log1p_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_log1p_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="136" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a4ef4def36dcff063dad00a5c6829b9e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::log2</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>log2</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="137" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a02aef24530a7107ffa3b471585c6ca9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log2__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_log2__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="137" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a7a47078c6d96ce8540113ceace82b635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_log2_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_log2_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="137" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a93667c73ce2c075ab9e3eeab983f87b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::round</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>round</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="138" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a314007c5382c184595449814fe0d3b64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_round__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_round__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="138" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a2ffa9fc54ba3a4e5e1b7627d55e135cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_round_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_round_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="138" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a02bdafd2a505c3c7836d3c051b712c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::rsqrt</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>rsqrt</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="139" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1aad8bedbc34901e624c42ccb8a448721d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_rsqrt__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_rsqrt__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="139" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ac10296f41b9bb4631e60bc9cbd4f914c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_rsqrt_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_rsqrt_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="139" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ad60bff10b1e3573e4aa2cfa114a71f70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sigmoid</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>sigmoid</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="140" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a57f0b7ad779859fbbc0213e3ea2efe20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sigmoid__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_sigmoid__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="140" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ac5a517df85e6d9da924794dfcc9a2d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sigmoid_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_sigmoid_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="140" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ae464c43748e2b1633f93d7c6d0dada2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sin</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>sin</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="141" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a3d53167c1bc2a1067930746d458b95a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sin__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_sin__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="141" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a1491000c184064aeb864666fe9c85378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sin_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_sin_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="141" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a939ae21710d352bd4cc83b17d845b593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sinh</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>sinh</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="142" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a2aaec27fcb99103df97bec21a928d6a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sinh__cpu</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>_sinh__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="142" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a4dde10b0822f040aa72b12d0435ddccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sinh_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_sinh_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="142" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a0bd29f998afb2ff1d7801395d30a3772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::sqrt</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>sqrt</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="143" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ae027ab88a3ec4c3c39d0124ea6f116ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sqrt__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_sqrt__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="143" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a009d35766e38e5782dca73f444fc46b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_sqrt_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_sqrt_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="143" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a3fdb7cadf0a304a3a68e38799aa218aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::tan</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>tan</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="144" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a00dfd219b9da1ea7442fff610b62209a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_tan__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_tan__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="144" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ad334963e645aa19893483a466c053782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_tan_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_tan_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="144" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1afe55a6ca1d715e2f93ec6ced8b73bf05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::tanh</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>tanh</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="145" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a173df6d0976fdf9e729faf4eaf3b7792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_tanh__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_tanh__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="145" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ab527e07c3823771ab4737935a466e56a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_tanh_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_tanh_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="145" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a6e1bf06764d76e13d5c160c1175dc2f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::trunc</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>trunc</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="146" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ae51757b502f822a66001d16275ce6ad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_trunc__cpu</definition>
        <argsstring>(Tensor &amp;self_)</argsstring>
        <name>_trunc__cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="146" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a6ba398e8a83ba633afa9d3db0baf5b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>Tensor&amp; at::native::_trunc_out_cpu</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_trunc_out_cpu</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="146" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1aa77290afad38f1dec24d41f05905c67a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(absImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>absImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1abd88f8a558bb9e151f27fbba9eb781ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(acosImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>acosImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1aa1456972fcf2665694839ee842ed5235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(asinImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>asinImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ae29c817ac88bb9273ad4cb16d08c6060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(atanImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>atanImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ae85b0ac0bcb7d34b8bb3758bb44e881c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(ceilImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>ceilImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a03043b0203e01180212ab103409a9b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(cosImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>cosImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ac374ce71b90155c7f2c26d4db58c837a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(erfImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>erfImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1aa5d7d0490352069a3282006929cc0538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(erfcImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>erfcImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ae9701e0fbaf75ca34fc824f40544f0f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(expImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>expImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ae066eebd56a67d8a5553b67953d66135" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(expm1Impl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>expm1Impl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a788f2b96671f955ae907cc878249f640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(floorImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>floorImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a74e3ceb1326858cd6ee75e7b58d3e277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(logImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>logImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a6e4b4bf6c13fca1ab5326c036ed4cc21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(log10Impl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>log10Impl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1af6efbdf33ec567a3811308ebe8b6902b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(log1pImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>log1pImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ad6f45c775e21c6172a27a80c46a171dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(log2Impl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>log2Impl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1aa69ebbbebcb146a122aa27b53b51d833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(roundImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>roundImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1ac1e58415eee34d0663ad0ecfac6a06c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(rsqrtImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>rsqrtImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a9d2182fb788585fdd2f902e1e86aced3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(sigmoidImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>sigmoidImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a5dc90a97f7108e5b10700e8678aa9d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(sinImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>sinImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a9a9684a63505a6142e51106b75d7717e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(sqrtImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>sqrtImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a6e2a801da6361884074012e3ab6a35f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(tanImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>tanImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1a2b8d20f2a7f502e89ca5c3b544687c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(tanhImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>tanhImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unary_ops_8cpp_1abc674630c32f3912d51a713052120e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::DEFINE_DISPATCH</definition>
        <argsstring>(truncImpl)</argsstring>
        <name>DEFINE_DISPATCH</name>
        <param>
          <type>truncImpl</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/UnaryOps.cpp" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_unique_8cpp_1a8389f70002031f45c4316fc512d11327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::native::_unique_cpu</definition>
        <argsstring>(const Tensor &amp;self, const bool sorted, const bool return_inverse)</argsstring>
        <name>_unique_cpu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>sorted</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>return_inverse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Unique.cpp" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Unique.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="_vision_8cpp_1ac0b4d40c12e23619957f260dc7b17ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::grid_sampler</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>grid_sampler</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Vision.cpp" line="11" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Vision.cpp" bodystart="11" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="_native_functions_8h_1a132a031cb9bb3a874876c2c713a653b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::from_blob</definition>
        <argsstring>(void *data, IntList sizes, const std::function&lt; void(void *)&gt; &amp;deleter, const TensorOptions &amp;options={})</argsstring>
        <name>from_blob</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>const std::function&lt; void(void *)&gt; &amp;</type>
          <declname>deleter</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/NativeFunctions.h" line="26" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/NativeFunctions.h" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="_native_functions_8h_1a386e5f129edda876ce7783b7c5c7c056" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::native::from_blob</definition>
        <argsstring>(void *data, IntList sizes, const TensorOptions &amp;options={})</argsstring>
        <name>from_blob</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/NativeFunctions.h" line="34" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/NativeFunctions.h" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="_native_functions_8h_1af22dadcbc107a2fee2178a7ff35e5776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::native::AT_FORALL_SCALAR_TYPES_EXCEPT_HALF</definition>
        <argsstring>(TENSOR) $</argsstring>
        <name>AT_FORALL_SCALAR_TYPES_EXCEPT_HALF</name>
        <param>
          <type>TENSOR</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/NativeFunctions.h" line="60" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/NativeFunctions.h" bodystart="60" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.cpp" line="9" column="1"/>
  </compounddef>
</doxygen>
