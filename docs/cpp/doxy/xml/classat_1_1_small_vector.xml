<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classat_1_1_small_vector" kind="class" language="C++" prot="public">
    <compoundname>at::SmallVector</compoundname>
    <basecompoundref refid="classat_1_1_small_vector_impl" prot="public" virt="non-virtual">at::SmallVectorImpl&lt; T &gt;</basecompoundref>
    <includes refid="_small_vector_8h" local="no">SmallVector.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>unsigned</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classat_1_1_small_vector_1a5005ba5d55a03a38b2953ac27a9e7552" prot="private" static="no" mutable="no">
        <type><ref refid="structat_1_1_small_vector_storage" kindref="compound">SmallVectorStorage</ref>&lt; T, N &gt;</type>
        <definition>SmallVectorStorage&lt;T, N&gt; at::SmallVector&lt; T, N &gt;::Storage</definition>
        <argsstring></argsstring>
        <name>Storage</name>
        <briefdescription>
<para>Inline space for elements which aren&apos;t stored in the base class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="884" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="884" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classat_1_1_small_vector_1aee3cfa650b4b419ba7174de448dd53df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>at::SmallVector&lt; T, N &gt;::SmallVector</definition>
        <argsstring>()</argsstring>
        <name>SmallVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="887" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="887" bodyend="887"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_1ada3f579fc3f002345d2905f00685c544" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>at::SmallVector&lt; T, N &gt;::SmallVector</definition>
        <argsstring>(size_t Size, const T &amp;Value=T())</argsstring>
        <name>SmallVector</name>
        <param>
          <type>size_t</type>
          <declname>Size</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>Value</declname>
          <defval>T()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="889" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="889" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_1a9cf222157a35b3f8a7cbc7916d19d515" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ItTy</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;std::is_convertible&lt;                typename std::iterator_traits&lt;ItTy&gt;::iterator_category,                std::input_iterator_tag&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>at::SmallVector&lt; T, N &gt;::SmallVector</definition>
        <argsstring>(ItTy S, ItTy E)</argsstring>
        <name>SmallVector</name>
        <param>
          <type>ItTy</type>
          <declname>S</declname>
        </param>
        <param>
          <type>ItTy</type>
          <declname>E</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="898" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="898" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_1af6b7fcbbdb9c6d372d271fc09878b807" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Container</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>at::SmallVector&lt; T, N &gt;::SmallVector</definition>
        <argsstring>(Container &amp;&amp;c)</argsstring>
        <name>SmallVector</name>
        <param>
          <type>Container &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="903" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="903" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_1ad4cd6c2a1739e9d2b29899bbb86991d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>at::SmallVector&lt; T, N &gt;::SmallVector</definition>
        <argsstring>(std::initializer_list&lt; T &gt; IL)</argsstring>
        <name>SmallVector</name>
        <param>
          <type>std::initializer_list&lt; T &gt;</type>
          <declname>IL</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="907" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="907" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_1a76b2920518e6b773737cb22c64c748a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>at::SmallVector&lt; T, N &gt;::SmallVector</definition>
        <argsstring>(const SmallVector &amp;RHS)</argsstring>
        <name>SmallVector</name>
        <param>
          <type>const <ref refid="classat_1_1_small_vector" kindref="compound">SmallVector</ref> &amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="911" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="911" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_1ab1817bce5b0bb01b377436cf8cb5581f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classat_1_1_small_vector" kindref="compound">SmallVector</ref> &amp;</type>
        <definition>const SmallVector&amp; at::SmallVector&lt; T, N &gt;::operator=</definition>
        <argsstring>(const SmallVector &amp;RHS)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classat_1_1_small_vector" kindref="compound">SmallVector</ref> &amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="916" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="916" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_1aafb196ab24a35b2eb561a67c6146ac4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>at::SmallVector&lt; T, N &gt;::SmallVector</definition>
        <argsstring>(SmallVector &amp;&amp;RHS)</argsstring>
        <name>SmallVector</name>
        <param>
          <type><ref refid="classat_1_1_small_vector" kindref="compound">SmallVector</ref> &amp;&amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="921" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="921" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_1a3d512cf0bf5bd1087e348cd01343f0ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Container</type>
          </param>
        </templateparamlist>
        <type>const <ref refid="classat_1_1_small_vector" kindref="compound">SmallVector</ref> &amp;</type>
        <definition>const SmallVector&amp; at::SmallVector&lt; T, N &gt;::operator=</definition>
        <argsstring>(const Container &amp;RHS)</argsstring>
        <name>operator=</name>
        <param>
          <type>const Container &amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="927" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="927" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_1a93cd342624ae7266e174c06cd38fb7bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>at::SmallVector&lt; T, N &gt;::SmallVector</definition>
        <argsstring>(SmallVectorImpl&lt; T &gt; &amp;&amp;RHS)</argsstring>
        <name>SmallVector</name>
        <param>
          <type><ref refid="classat_1_1_small_vector_impl" kindref="compound">SmallVectorImpl</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="932" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="932" bodyend="935"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_1af3cf9fc7f0ac5ff88c1b4b4876e3b12d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classat_1_1_small_vector" kindref="compound">SmallVector</ref> &amp;</type>
        <definition>const SmallVector&amp; at::SmallVector&lt; T, N &gt;::operator=</definition>
        <argsstring>(SmallVector &amp;&amp;RHS)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classat_1_1_small_vector" kindref="compound">SmallVector</ref> &amp;&amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="937" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="937" bodyend="940"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_1a3f67152b47c17b37cc071fec7bd24840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classat_1_1_small_vector" kindref="compound">SmallVector</ref> &amp;</type>
        <definition>const SmallVector&amp; at::SmallVector&lt; T, N &gt;::operator=</definition>
        <argsstring>(SmallVectorImpl&lt; T &gt; &amp;&amp;RHS)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classat_1_1_small_vector_impl" kindref="compound">SmallVectorImpl</ref>&lt; T &gt; &amp;&amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="942" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="942" bodyend="945"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1_small_vector_1a75ba3f23d9b971ba855684bb76a7f9a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classat_1_1_small_vector" kindref="compound">SmallVector</ref> &amp;</type>
        <definition>const SmallVector&amp; at::SmallVector&lt; T, N &gt;::operator=</definition>
        <argsstring>(std::initializer_list&lt; T &gt; IL)</argsstring>
        <name>operator=</name>
        <param>
          <type>std::initializer_list&lt; T &gt;</type>
          <declname>IL</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="947" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="947" bodyend="950"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is a &apos;vector&apos; (really, a variable-sized array), optimized for the case when the array is small. It contains some number of elements in-place, which allows it to avoid heap allocation when the actual number of elements is below that threshold. This allows normal &quot;small&quot; cases to be fast without losing generality for large inputs.</para><para>Note that this does not attempt to be exception safe. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="585">
        <label>at::SmallVector&lt; T, N &gt;</label>
        <link refid="classat_1_1_small_vector"/>
        <childnode refid="586" relation="public-inheritance">
        </childnode>
      </node>
      <node id="587">
        <label>at::SmallVectorTemplateBase&lt; T, std::is_trivially_copyable&lt; T &gt;::value &gt;</label>
        <link refid="classat_1_1_small_vector_template_base"/>
        <childnode refid="588" relation="public-inheritance">
        </childnode>
      </node>
      <node id="588">
        <label>at::SmallVectorTemplateCommon&lt; T &gt;</label>
        <link refid="classat_1_1_small_vector_template_common"/>
        <childnode refid="589" relation="public-inheritance">
        </childnode>
      </node>
      <node id="586">
        <label>at::SmallVectorImpl&lt; T &gt;</label>
        <link refid="classat_1_1_small_vector_impl"/>
        <childnode refid="587" relation="public-inheritance">
        </childnode>
      </node>
      <node id="589">
        <label>at::SmallVectorBase</label>
        <link refid="classat_1_1_small_vector_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="590">
        <label>at::SmallVector&lt; T, N &gt;</label>
        <link refid="classat_1_1_small_vector"/>
        <childnode refid="591" relation="public-inheritance">
        </childnode>
      </node>
      <node id="592">
        <label>at::SmallVectorTemplateBase&lt; T, std::is_trivially_copyable&lt; T &gt;::value &gt;</label>
        <link refid="classat_1_1_small_vector_template_base"/>
        <childnode refid="593" relation="public-inheritance">
        </childnode>
      </node>
      <node id="593">
        <label>at::SmallVectorTemplateCommon&lt; T &gt;</label>
        <link refid="classat_1_1_small_vector_template_common"/>
        <childnode refid="594" relation="public-inheritance">
        </childnode>
      </node>
      <node id="591">
        <label>at::SmallVectorImpl&lt; T &gt;</label>
        <link refid="classat_1_1_small_vector_impl"/>
        <childnode refid="592" relation="public-inheritance">
        </childnode>
      </node>
      <node id="594">
        <label>at::SmallVectorBase</label>
        <link refid="classat_1_1_small_vector_base"/>
      </node>
    </collaborationgraph>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="882" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="882" bodyend="951"/>
    <listofallmembers>
      <member refid="classat_1_1_small_vector_impl_1ac14b6473b0fb86f09e3388a547b5fbc1" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>append</name></member>
      <member refid="classat_1_1_small_vector_impl_1a0a052f0f97fda125785595bd26b2840a" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>append</name></member>
      <member refid="classat_1_1_small_vector_impl_1ab957c22e419d0ac752a8c22fc4fe3d63" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>append</name></member>
      <member refid="classat_1_1_small_vector_impl_1ab85b7aba2e1f05c97aa8e3c0771669f9" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>assign</name></member>
      <member refid="classat_1_1_small_vector_impl_1a7834664788934ae9fad4fc77a71b79a1" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>assign</name></member>
      <member refid="classat_1_1_small_vector_impl_1a9ac81ab85af8fbc22f2216ee414b33f2" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>assign</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a6b7793fb26512198a274db7c73d9fcf8" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>back</name></member>
      <member refid="classat_1_1_small_vector_template_common_1af2fb93bb302d7cab177a55858f911ea9" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>back</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a9d396477971897b3628f368129741dd1" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>begin</name></member>
      <member refid="classat_1_1_small_vector_template_common_1ae4c984b3a4ba993eba89f0260e19e0a8" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>begin</name></member>
      <member refid="classat_1_1_small_vector_base_1ac7d87982be839c1bd2646b7f631b55f4" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>BeginX</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a82a3c61d858b9f58a551016e539f4f63" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>capacity</name></member>
      <member refid="classat_1_1_small_vector_base_1a080727fd01500634693cc7f5fb30904e" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>capacity_in_bytes</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a2fafbd6888930d69dbd457d0fe0200a1" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>capacity_ptr</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a25844f1ffb9d2b2857e82ba0fa57f23b" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>capacity_ptr</name></member>
      <member refid="classat_1_1_small_vector_base_1a1f6b7f7b799d18affcd4f103dda6be82" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>CapacityX</name></member>
      <member refid="classat_1_1_small_vector_impl_1a35304c297d3a9d286a874aef44c7ddee" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>clear</name></member>
      <member refid="classat_1_1_small_vector_impl_1a2ead74026eb47667fcf737ca240f0a9e" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>const_iterator</name></member>
      <member refid="classat_1_1_small_vector_template_common_1aff6e85cbbb30f1d0de96e60d40a66783" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>const_pointer</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a1c6cf85fed4a7787dee826a97f2715a7" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>const_reference</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a50bbe2a780de571d26a74b7d9242fdf8" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>const_reverse_iterator</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a768dfe9aa7c6b564c4e3fb2bc60c62dc" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>data</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a8390706f7405a97fb1608afa74d5689c" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>data</name></member>
      <member refid="classat_1_1_small_vector_template_base_1a593ccdd64bda1ae9997f91457d436c9c" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>destroy_range</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a4139257e5c28ba8c565fd1cf25393ff9" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>difference_type</name></member>
      <member refid="classat_1_1_small_vector_impl_1a9adfe90e602969e1c1409c4fca42f413" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>emplace_back</name></member>
      <member refid="classat_1_1_small_vector_base_1a1555255c2500ed31890456bcf0c44630" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>empty</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a3e4a27f3b356e422e7b2530c8140df96" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>end</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a03abac1f865cd1f6fc90866c6d3c4eee" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>end</name></member>
      <member refid="classat_1_1_small_vector_base_1abf015558c9fc9666d61265ea81a515a9" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>EndX</name></member>
      <member refid="classat_1_1_small_vector_impl_1a59a325cf8199b2cc9eef7e5f4b33121d" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>erase</name></member>
      <member refid="classat_1_1_small_vector_impl_1af119627fe241f4dc8a48a08119abe42d" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>erase</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a64bb38f0dae1cc70ea1a8a6ffe067e03" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>front</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a4d3c30146e2179d6b3ccb75a497c1fb4" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>front</name></member>
      <member refid="classat_1_1_small_vector_template_base_1adc6c6a92306fa9a284a3567473437ee0" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>grow</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a1144a1aa0e89a56bca38ba7390581ac7" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>grow_pod</name></member>
      <member refid="classat_1_1_small_vector_base_1aad0c28f55592d56898e17b082992dc38" prot="protected" virt="non-virtual" ambiguityscope="at::SmallVectorBase::"><scope>at::SmallVector</scope><name>grow_pod</name></member>
      <member refid="classat_1_1_small_vector_impl_1a8c175c25ee9365479bcb13e98d62fef7" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>insert</name></member>
      <member refid="classat_1_1_small_vector_impl_1a968812e3a05cb712b4df6ffc5e45f713" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>insert</name></member>
      <member refid="classat_1_1_small_vector_impl_1aa3a7b362bebe105bd81ade7b09082417" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>insert</name></member>
      <member refid="classat_1_1_small_vector_impl_1abd527ec4eb4466664ecf661c46b5dd90" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>insert</name></member>
      <member refid="classat_1_1_small_vector_impl_1add3f8e5481c6bb63bb0cae630db97ba0" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>insert</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a39649612f37cb64162bad134137046d0" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>isSmall</name></member>
      <member refid="classat_1_1_small_vector_impl_1a7bc797e70f8f3f80a114804f5571f069" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>iterator</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a006d15e51a21d717dc9073ac6683d5c0" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>max_size</name></member>
      <member refid="classat_1_1_small_vector_impl_1a2b51f6d7185792a5fc025c2ebafe73de" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>operator!=</name></member>
      <member refid="classat_1_1_small_vector_impl_1a4be2199af8fe348be97442f573342943" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>operator&lt;</name></member>
      <member refid="classat_1_1_small_vector_1ab1817bce5b0bb01b377436cf8cb5581f" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>operator=</name></member>
      <member refid="classat_1_1_small_vector_1a3d512cf0bf5bd1087e348cd01343f0ac" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>operator=</name></member>
      <member refid="classat_1_1_small_vector_1af3cf9fc7f0ac5ff88c1b4b4876e3b12d" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>operator=</name></member>
      <member refid="classat_1_1_small_vector_1a3f67152b47c17b37cc071fec7bd24840" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>operator=</name></member>
      <member refid="classat_1_1_small_vector_1a75ba3f23d9b971ba855684bb76a7f9a6" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>operator=</name></member>
      <member refid="classat_1_1_small_vector_impl_1ae46655aae23e9ee1c187f61e41d9278e" prot="public" virt="non-virtual" ambiguityscope="at::SmallVectorImpl::"><scope>at::SmallVector</scope><name>operator=</name></member>
      <member refid="classat_1_1_small_vector_impl_1a18ca296a161e21b2be0a45ec2ca1e0d3" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>operator==</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a02cc648a1eca3f87168facf65aab75cd" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>operator[]</name></member>
      <member refid="classat_1_1_small_vector_template_common_1abf3ae422ca02675132c52e44617b6011" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>operator[]</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a876c0ed74308595095482e8cecbf9c30" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>pointer</name></member>
      <member refid="classat_1_1_small_vector_template_base_1aedc69de36cdf52c8a0c9878a6a366444" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>pop_back</name></member>
      <member refid="classat_1_1_small_vector_impl_1aef15ae19ca324467e9dcb249aa584767" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>pop_back_val</name></member>
      <member refid="classat_1_1_small_vector_template_base_1aaea9df7a5385095ecbf346236452d047" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>push_back</name></member>
      <member refid="classat_1_1_small_vector_template_base_1adfc0bfa95124e891c0bbdc2204744f11" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>push_back</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a316642c64a2c85938c34ed586ae7abd4" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>rbegin</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a8201a6f53f1fa51c13a3c92def3524bc" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>rbegin</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a27d5deeb11704c0a8ecc20055f7b9398" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>reference</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a9dea15cf7f74eedcccc5022152ea5053" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>rend</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a98b9577a560658af687847bd7e5efd2c" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>rend</name></member>
      <member refid="classat_1_1_small_vector_impl_1a9d5e636dde8c44ab5b61c301af81e243" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>reserve</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a4b7ec9160ac37cb1f9ade21758c43232" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>resetToSmall</name></member>
      <member refid="classat_1_1_small_vector_impl_1ac3caea35cfb3cafa68ac030188a32575" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>resize</name></member>
      <member refid="classat_1_1_small_vector_impl_1a8c471263560b5f7d9691a42a3a8a829e" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>resize</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a1ba592283c5a885418a91deeeb32a725" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>reverse_iterator</name></member>
      <member refid="classat_1_1_small_vector_impl_1a3ff1d2c50693607fd22026466d35d279" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>set_size</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a18fe81caaa397653a65dfc574fd4d667" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>setEnd</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a486fa181c8b50dc1c9677afd1038ea88" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>size</name></member>
      <member refid="classat_1_1_small_vector_base_1ac467c3e17cfe1931b7701af7efceda5c" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>size_in_bytes</name></member>
      <member refid="classat_1_1_small_vector_impl_1a61442122f5bebe6f9b4237082e902eb6" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>size_type</name></member>
      <member refid="classat_1_1_small_vector_1aee3cfa650b4b419ba7174de448dd53df" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVector</name></member>
      <member refid="classat_1_1_small_vector_1ada3f579fc3f002345d2905f00685c544" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVector</name></member>
      <member refid="classat_1_1_small_vector_1a9cf222157a35b3f8a7cbc7916d19d515" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVector</name></member>
      <member refid="classat_1_1_small_vector_1af6b7fcbbdb9c6d372d271fc09878b807" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVector</name></member>
      <member refid="classat_1_1_small_vector_1ad4cd6c2a1739e9d2b29899bbb86991d6" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVector</name></member>
      <member refid="classat_1_1_small_vector_1a76b2920518e6b773737cb22c64c748a3" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVector</name></member>
      <member refid="classat_1_1_small_vector_1aafb196ab24a35b2eb561a67c6146ac4a" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVector</name></member>
      <member refid="classat_1_1_small_vector_1a93cd342624ae7266e174c06cd38fb7bd" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVector</name></member>
      <member refid="classat_1_1_small_vector_base_1a6ba6526e921aeab53df52a94a32cd9ec" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVectorBase</name></member>
      <member refid="classat_1_1_small_vector_impl_1ac2f0fafaf8ff62fd5de7bbeea478cbaa" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVectorImpl</name></member>
      <member refid="classat_1_1_small_vector_impl_1aba0675352afdff71b3a2703e01bc4808" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVectorImpl</name></member>
      <member refid="classat_1_1_small_vector_template_base_1a11ad817072c07dfa24b452edfcaa7411" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVectorTemplateBase</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a0ce99d27ab7880012bc901eb83661cbc" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>SmallVectorTemplateCommon</name></member>
      <member refid="classat_1_1_small_vector_1a5005ba5d55a03a38b2953ac27a9e7552" prot="private" virt="non-virtual"><scope>at::SmallVector</scope><name>Storage</name></member>
      <member refid="classat_1_1_small_vector_impl_1ae2a4be70fb17f2908e38806a3065a7c7" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>swap</name></member>
      <member refid="classat_1_1_small_vector_template_base_1af189796d60e105676832d54380f1284a" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>uninitialized_copy</name></member>
      <member refid="classat_1_1_small_vector_template_base_1ae5b28a668e51a5206afde69e595d3437" prot="protected" virt="non-virtual"><scope>at::SmallVector</scope><name>uninitialized_move</name></member>
      <member refid="classat_1_1_small_vector_template_common_1a91e5c1ab3a33f708094e8bbd55943c3b" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>value_type</name></member>
      <member refid="classat_1_1_small_vector_impl_1afaebad699159fd3e5989c28e3d4831f8" prot="public" virt="non-virtual"><scope>at::SmallVector</scope><name>~SmallVectorImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
