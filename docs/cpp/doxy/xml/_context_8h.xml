<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_context_8h" kind="file" language="C++">
    <compoundname>Context.h</compoundname>
    <includes refid="_a_ten_general_8h" local="yes">ATen/ATenGeneral.h</includes>
    <includes refid="_c_p_u_general_8h" local="no">ATen/CPUGeneral.h</includes>
    <includes refid="_generator_8h" local="yes">ATen/Generator.h</includes>
    <includes local="yes">ATen/Type.h</includes>
    <includes refid="aten_2src_2_a_ten_2utils_8h" local="yes">ATen/Utils.h</includes>
    <includes refid="_error_8h" local="yes">ATen/Error.h</includes>
    <includes refid="_c_u_d_a_hooks_interface_8h" local="yes">ATen/detail/CUDAHooksInterface.h</includes>
    <includes refid="_c_u_d_a_stream_8h" local="yes">ATen/CUDAStream.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">mutex</includes>
    <includes local="no">cstdint</includes>
    <includedby refid="cuda_8cpp" local="no">/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/cuda.cpp</includedby>
    <includedby refid="torch_2csrc_2api_2src_2utils_8cpp" local="no">/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/utils.cpp</includedby>
    <includedby refid="_a_ten_8h" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ATen.h</includedby>
    <includedby refid="_context_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.cpp</includedby>
    <includedby refid="_c_u_d_a_context_8h" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/CUDAContext.h</includedby>
    <includedby refid="_c_u_d_a_generator_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/CUDAGenerator.cpp</includedby>
    <includedby refid="_c_u_d_a_hooks_8cpp" local="no">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/detail/CUDAHooks.cpp</includedby>
    <includedby refid="_pinned_memory_allocator_8cpp" local="no">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/PinnedMemoryAllocator.cpp</includedby>
    <includedby refid="_formatting_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp</includedby>
    <includedby refid="_half_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.cpp</includedby>
    <includedby refid="_scalar_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Scalar.cpp</includedby>
    <includedby refid="_register_c_u_d_a_8cpp" local="no">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/RegisterCUDA.cpp</includedby>
    <includedby refid="_storage_derived_8h" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/StorageDerived.h</includedby>
    <includedby refid="_tensor_derived_8h" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.h</includedby>
    <includedby refid="_type_derived_8h" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h</includedby>
    <includedby refid="_tensor_options_8h" local="no">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOptions.h</includedby>
    <includedby refid="_undefined_tensor_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/UndefinedTensor.cpp</includedby>
    <includedby refid="_undefined_type_8h" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/UndefinedType.h</includedby>
    <incdepgraph>
      <node id="840">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
      </node>
      <node id="879">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
      </node>
      <node id="876">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
      </node>
      <node id="864">
        <label>atomic</label>
      </node>
      <node id="845">
        <label>functional</label>
      </node>
      <node id="885">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="832" relation="include">
        </childnode>
      </node>
      <node id="866">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
      </node>
      <node id="868">
        <label>limits</label>
      </node>
      <node id="857">
        <label>iterator</label>
      </node>
      <node id="837">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="862" relation="include">
        </childnode>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="851" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
      </node>
      <node id="869">
        <label>cstdint</label>
      </node>
      <node id="835">
        <label>stdint.h</label>
      </node>
      <node id="870">
        <label>cmath</label>
      </node>
      <node id="844">
        <label>cassert</label>
      </node>
      <node id="831">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h</label>
        <link refid="_context_8h"/>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="833" relation="include">
        </childnode>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="883" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
      </node>
      <node id="872">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
      </node>
      <node id="847">
        <label>stdexcept</label>
      </node>
      <node id="875">
        <label>numeric</label>
      </node>
      <node id="863">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
      </node>
      <node id="867">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
      </node>
      <node id="865">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="864" relation="include">
        </childnode>
      </node>
      <node id="846">
        <label>string</label>
      </node>
      <node id="877">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
      </node>
      <node id="886">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="849">
        <label>exception</label>
      </node>
      <node id="878">
        <label>stddef.h</label>
      </node>
      <node id="862">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="863" relation="include">
        </childnode>
      </node>
      <node id="853">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="848" relation="include">
        </childnode>
      </node>
      <node id="850">
        <label>ostream</label>
      </node>
      <node id="833">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="832" relation="include">
        </childnode>
      </node>
      <node id="836">
        <label>ATen/Type.h</label>
      </node>
      <node id="838">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="852" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
      </node>
      <node id="832">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="874">
        <label>typeinfo</label>
      </node>
      <node id="882">
        <label>cstdio</label>
      </node>
      <node id="880">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="832" relation="include">
        </childnode>
      </node>
      <node id="861">
        <label>vector</label>
      </node>
      <node id="859">
        <label>new</label>
      </node>
      <node id="841">
        <label>utility</label>
      </node>
      <node id="860">
        <label>array</label>
      </node>
      <node id="851">
        <label>sstream</label>
      </node>
      <node id="871">
        <label>iosfwd</label>
      </node>
      <node id="855">
        <label>cstdlib</label>
      </node>
      <node id="873">
        <label>iostream</label>
      </node>
      <node id="848">
        <label>cstddef</label>
      </node>
      <node id="884">
        <label>unordered_map</label>
      </node>
      <node id="883">
        <label>mutex</label>
      </node>
      <node id="881">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="883" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="832" relation="include">
        </childnode>
      </node>
      <node id="839">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="849" relation="include">
        </childnode>
        <childnode refid="850" relation="include">
        </childnode>
        <childnode refid="851" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
      </node>
      <node id="842">
        <label>type_traits</label>
      </node>
      <node id="852">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="853" relation="include">
        </childnode>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="859" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="832" relation="include">
        </childnode>
      </node>
      <node id="854">
        <label>algorithm</label>
      </node>
      <node id="834">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="835" relation="include">
        </childnode>
      </node>
      <node id="856">
        <label>cstring</label>
      </node>
      <node id="858">
        <label>memory</label>
      </node>
      <node id="843">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="897">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/rnn.h</label>
        <link refid="rnn_8h_source"/>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="922">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/UnaryOpsKernel.h</label>
        <link refid="_unary_ops_kernel_8h_source"/>
      </node>
      <node id="894">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/torch.h</label>
        <link refid="torch_8h_source"/>
      </node>
      <node id="911">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/tensor.h</label>
        <link refid="torch_2csrc_2api_2include_2torch_2tensor_8h_source"/>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="912" relation="include">
        </childnode>
        <childnode refid="914" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="901" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="895" relation="include">
        </childnode>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="898" relation="include">
        </childnode>
        <childnode refid="899" relation="include">
        </childnode>
        <childnode refid="900" relation="include">
        </childnode>
        <childnode refid="897" relation="include">
        </childnode>
        <childnode refid="902" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="904" relation="include">
        </childnode>
        <childnode refid="913" relation="include">
        </childnode>
        <childnode refid="910" relation="include">
        </childnode>
        <childnode refid="906" relation="include">
        </childnode>
        <childnode refid="916" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
      </node>
      <node id="891">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/batchnorm.h</label>
        <link refid="batchnorm_8h_source"/>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="924">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CuFFTUtils.h</label>
        <link refid="_cu_f_f_t_utils_8h_source"/>
        <childnode refid="923" relation="include">
        </childnode>
      </node>
      <node id="910">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/optim/sgd.h</label>
        <link refid="sgd_8h_source"/>
        <childnode refid="905" relation="include">
        </childnode>
      </node>
      <node id="913">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/optim/optimizer.h</label>
        <link refid="optimizer_8h_source"/>
        <childnode refid="904" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="908" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="910" relation="include">
        </childnode>
        <childnode refid="905" relation="include">
        </childnode>
      </node>
      <node id="930">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cpu/vml.h</label>
        <link refid="vml_8h_source"/>
      </node>
      <node id="936">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.h</label>
        <link refid="_tensor_derived_8h_source"/>
      </node>
      <node id="887">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h</label>
        <link refid="_context_8h"/>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="933" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
        <childnode refid="936" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
      </node>
      <node id="902">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/sequential.h</label>
        <link refid="sequential_8h_source"/>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="933">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/CUDAContext.h</label>
        <link refid="_c_u_d_a_context_8h_source"/>
        <childnode refid="934" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
        <childnode refid="923" relation="include">
        </childnode>
      </node>
      <node id="940">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/OptionsGuard.h</label>
        <link refid="_options_guard_8h_source"/>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
      </node>
      <node id="907">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/optim/adam.h</label>
        <link refid="adam_8h_source"/>
        <childnode refid="905" relation="include">
        </childnode>
      </node>
      <node id="912">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/cursor.h</label>
        <link refid="cursor_8h_source"/>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="913" relation="include">
        </childnode>
      </node>
      <node id="914">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/init.h</label>
        <link refid="init_8h_source"/>
      </node>
      <node id="915">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/pimpl.h</label>
        <link refid="pimpl_8h_source"/>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="901" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="895" relation="include">
        </childnode>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="898" relation="include">
        </childnode>
        <childnode refid="899" relation="include">
        </childnode>
        <childnode refid="900" relation="include">
        </childnode>
        <childnode refid="897" relation="include">
        </childnode>
        <childnode refid="902" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="910" relation="include">
        </childnode>
      </node>
      <node id="916">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/tensor_list_view.h</label>
        <link refid="tensor__list__view_8h_source"/>
        <childnode refid="894" relation="include">
        </childnode>
      </node>
      <node id="889">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/module.h</label>
        <link refid="module_8h_source"/>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="901" relation="include">
        </childnode>
        <childnode refid="900" relation="include">
        </childnode>
        <childnode refid="902" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="904" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="908" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="910" relation="include">
        </childnode>
      </node>
      <node id="892">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules.h</label>
        <link refid="modules_8h_source"/>
        <childnode refid="893" relation="include">
        </childnode>
      </node>
      <node id="898">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/embedding.h</label>
        <link refid="embedding_8h_source"/>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="934">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/CUDAGuard.h</label>
        <link refid="cuda_2_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="935">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/StorageDerived.h</label>
        <link refid="_storage_derived_8h_source"/>
      </node>
      <node id="928">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/TensorTransformations.h</label>
        <link refid="_tensor_transformations_8h_source"/>
      </node>
      <node id="893">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn.h</label>
        <link refid="nn_8h_source"/>
        <childnode refid="894" relation="include">
        </childnode>
      </node>
      <node id="923">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CuFFTPlanCache.h</label>
        <link refid="_cu_f_f_t_plan_cache_8h_source"/>
      </node>
      <node id="895">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/conv.h</label>
        <link refid="conv_8h_source"/>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="909">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/optim/rmsprop.h</label>
        <link refid="rmsprop_8h_source"/>
        <childnode refid="905" relation="include">
        </childnode>
      </node>
      <node id="941">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/Functions.h</label>
        <link refid="aten_2src_2_a_ten_2templates_2_functions_8h_source"/>
      </node>
      <node id="905">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/optim.h</label>
        <link refid="optim_8h_source"/>
        <childnode refid="906" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
      </node>
      <node id="937">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h</label>
        <link refid="_type_derived_8h_source"/>
      </node>
      <node id="932">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/test_seed.h</label>
        <link refid="test__seed_8h_source"/>
      </node>
      <node id="918">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2cudnn_2utils_8h_source"/>
      </node>
      <node id="901">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/any.h</label>
        <link refid="any_8h_source"/>
        <childnode refid="902" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="917">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.h</label>
        <link refid="cudnn_2_descriptors_8h_source"/>
      </node>
      <node id="919">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.h</label>
        <link refid="_d_l_convertor_8h_source"/>
      </node>
      <node id="927">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/sparse/SparseUtils.h</label>
        <link refid="_sparse_utils_8h_source"/>
      </node>
      <node id="939">
        <label>/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h</label>
        <link refid="build_2aten_2src_2_a_ten_2_functions_8h_source"/>
        <childnode refid="888" relation="include">
        </childnode>
      </node>
      <node id="906">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/serialization.h</label>
        <link refid="serialization_8h_source"/>
        <childnode refid="894" relation="include">
        </childnode>
      </node>
      <node id="903">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/parallel/data_parallel.h</label>
        <link refid="data__parallel_8h_source"/>
      </node>
      <node id="931">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h</label>
        <link refid="_c_p_u_apply_utils_8h_source"/>
      </node>
      <node id="904">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/optim/adagrad.h</label>
        <link refid="adagrad_8h_source"/>
        <childnode refid="905" relation="include">
        </childnode>
      </node>
      <node id="896">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/dropout.h</label>
        <link refid="dropout_8h_source"/>
        <childnode refid="897" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="920">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/ReduceOpsKernel.h</label>
        <link refid="_reduce_ops_kernel_8h_source"/>
      </node>
      <node id="925">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Gesv.h</label>
        <link refid="_gesv_8h_source"/>
      </node>
      <node id="890">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/cloneable.h</label>
        <link refid="cloneable_8h_source"/>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="895" relation="include">
        </childnode>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="898" relation="include">
        </childnode>
        <childnode refid="899" relation="include">
        </childnode>
        <childnode refid="900" relation="include">
        </childnode>
        <childnode refid="897" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
      </node>
      <node id="942">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/NativeFunctions.h</label>
        <link refid="_native_functions_8h_source"/>
      </node>
      <node id="888">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ATen.h</label>
        <link refid="_a_ten_8h_source"/>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="897" relation="include">
        </childnode>
        <childnode refid="904" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="908" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="910" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="919" relation="include">
        </childnode>
        <childnode refid="920" relation="include">
        </childnode>
        <childnode refid="921" relation="include">
        </childnode>
        <childnode refid="922" relation="include">
        </childnode>
        <childnode refid="923" relation="include">
        </childnode>
        <childnode refid="924" relation="include">
        </childnode>
        <childnode refid="925" relation="include">
        </childnode>
        <childnode refid="926" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
      </node>
      <node id="899">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/functional.h</label>
        <link refid="torch_2csrc_2api_2include_2torch_2nn_2modules_2functional_8h_source"/>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="938">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="939" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="940" relation="include">
        </childnode>
        <childnode refid="941" relation="include">
        </childnode>
        <childnode refid="942" relation="include">
        </childnode>
      </node>
      <node id="926">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/LinearAlgebraUtils.h</label>
        <link refid="_linear_algebra_utils_8h_source"/>
      </node>
      <node id="943">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/UndefinedType.h</label>
        <link refid="_undefined_type_8h_source"/>
      </node>
      <node id="921">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cpu/SoftmaxKernel.h</label>
        <link refid="_softmax_kernel_8h_source"/>
      </node>
      <node id="900">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/linear.h</label>
        <link refid="linear_8h_source"/>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="929">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Parallel.h</label>
        <link refid="_parallel_8h_source"/>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="931" relation="include">
        </childnode>
      </node>
      <node id="908">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/optim/lbfgs.h</label>
        <link refid="lbfgs_8h_source"/>
        <childnode refid="905" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classat_1_1_context" prot="public">at::Context</innerclass>
    <innernamespace refid="namespaceat">at</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/ATenGeneral.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/CPUGeneral.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Generator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Type.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/detail/CUDAHooksInterface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/CUDAStream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>IsVariable<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>NotVariable,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>Variable,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>NumOptions</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classat_1_1_context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AT_API<sp/><ref refid="classat_1_1_context" kindref="compound">Context</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="classat_1_1_context" kindref="compound">Context</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_type" kindref="compound">Type</ref>*<sp/>getTypeRaw(Backend<sp/>p,<sp/>ScalarType<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_registry[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p)][static_cast&lt;int&gt;(s)].get();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_type" kindref="compound">Type</ref><sp/>*<sp/>getTypeOpt(Backend<sp/>p,<sp/>ScalarType<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>initCUDAIfNeeded(p);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>getTypeRaw(p,<sp/>s);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!type)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>only<sp/>a<sp/>single<sp/>Undefined<sp/>Type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>Backend::Undefined<sp/>||<sp/>s<sp/>==<sp/>ScalarType::Undefined)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getTypeRaw(Backend::Undefined,<sp/>ScalarType::Undefined);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_type" kindref="compound">Type</ref><sp/>&amp;<sp/>getType(Backend<sp/>p,<sp/>ScalarType<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>type<sp/>=<sp/>getTypeOpt(p,<sp/>s);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!type)<sp/>AT_ERROR(toString(p),<sp/>toString(s),<sp/></highlight><highlight class="stringliteral">&quot;Type<sp/>is<sp/>not<sp/>enabled.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*type;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_generator" kindref="compound">Generator</ref><sp/>&amp;<sp/>defaultGenerator(Backend<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>initCUDAIfNeeded(p);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>generator<sp/>=<sp/>generator_registry[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p)];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!generator)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AT_ERROR(toString(p),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>backend<sp/>type<sp/>not<sp/>enabled.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*generator;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasMKL()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasCUDA()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::getCUDAHooks().hasCUDA();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasCuDNN()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::getCUDAHooks().hasCuDNN();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>int64_t<sp/>current_device()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::getCUDAHooks().current_device();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>defined<sp/>in<sp/>header<sp/>so<sp/>that<sp/>getType<sp/>has<sp/>ability<sp/>to<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call_once<sp/>check.<sp/>getType<sp/>is<sp/>called<sp/>fairly<sp/>frequently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>THCState*<sp/>lazyInitCUDA()<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>std::call_once(thc_init,[&amp;]<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thc_state<sp/>=<sp/>detail::getCUDAHooks().initCUDA();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>generator_registry[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Backend::CUDA)]<sp/>=</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getCUDAHooks().initCUDAGenerator(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::getCUDAHooks().registerCUDATypes(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thc_state.get();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>THCState*<sp/>getTHCState()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AT_ASSERT(thc_state);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>thc_state.get();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getNumGPUs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::getCUDAHooks().getNumGPUs();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>freshTypeID()<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next_id++;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setFlushDenormal(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>This<sp/>method<sp/>is<sp/>*purely*<sp/>whether<sp/>or<sp/>not<sp/>a<sp/>user<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>CuDNN<sp/>was<sp/>enabled,<sp/>it<sp/>doesn&apos;t<sp/>actually<sp/>say<sp/>anything<sp/>about</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>whether<sp/>or<sp/>not<sp/>CuDNN<sp/>is<sp/>actually<sp/>usable.<sp/><sp/>Use<sp/>cudnn_is_acceptable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>test<sp/>this<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>userEnabledCuDNN()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUserEnabledCuDNN(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>e);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>benchmarkCuDNN()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setBenchmarkCuDNN(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deterministicCuDNN()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDeterministicCuDNN(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Generator&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>generator_registry[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Backend::NumOptions)];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>type_registry<sp/>has<sp/>nullptr<sp/>for<sp/>all<sp/>CUDA<sp/>backends<sp/>until</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CUDA<sp/>initialization<sp/>has<sp/>occurred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Type&gt;<sp/>type_registry</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Backend::NumOptions)]</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>[static_cast&lt;int&gt;(ScalarType::NumOptions)];</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initCUDAIfNeeded(Backend<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p<sp/>==<sp/>Backend::CUDA)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lazyInitCUDA();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>std::once_flag<sp/>thc_init;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled_cudnn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deterministic_cudnn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>benchmark_cudnn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>std::atomic&lt;size_t&gt;<sp/>next_id;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;THCState,<sp/>void(*)(THCState*)&gt;<sp/>thc_state;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structat_1_1_type" kindref="compound">Type</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>register_cuda_types(<ref refid="classat_1_1_context" kindref="compound">Context</ref><sp/>*<sp/>context);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">AT_API<sp/><ref refid="classat_1_1_context" kindref="compound">Context</ref><sp/>&amp;<sp/>globalContext();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init()<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>globalContext();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*env_p<sp/>=<sp/>std::getenv(</highlight><highlight class="stringliteral">&quot;OMP_NUM_THREADS&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>at::set_num_threads(std::stoi(env_p));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*env_p<sp/>=<sp/>std::getenv(</highlight><highlight class="stringliteral">&quot;MKL_NUM_THREADS&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>at::set_num_threads(std::stoi(env_p));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Type&amp;<sp/>getType(Backend<sp/>p,<sp/>ScalarType<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>globalContext().getType(p,<sp/>s);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Type&amp;<sp/>CPU(ScalarType<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(Backend::CPU,<sp/>s);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Type&amp;<sp/>CUDA(ScalarType<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getType(Backend::CUDA,<sp/>s);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasCUDA()<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>globalContext().hasCUDA();</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasCuDNN()<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>globalContext().hasCuDNN();</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasMKL()<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>globalContext().hasMKL();</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>int64_t<sp/>current_device()<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>globalContext().current_device();</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>at</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h"/>
  </compounddef>
</doxygen>
