<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_type_8cpp" kind="file" language="C++">
    <compoundname>Type.cpp</compoundname>
    <includes local="yes">ATen/Type.h</includes>
    <includes refid="_expand_utils_8h" local="yes">ATen/ExpandUtils.h</includes>
    <includes local="yes">ATen/NativeFunctions.h</includes>
    <includes refid="_scalar_8h" local="yes">ATen/Scalar.h</includes>
    <includes refid="_sparse_tensor_ref_8h" local="yes">ATen/SparseTensorRef.h</includes>
    <includes refid="_storage_8h" local="yes">ATen/Storage.h</includes>
    <includes refid="build_2aten_2src_2_a_ten_2tensor_8h" local="yes">ATen/Tensor.h</includes>
    <includes refid="_tensor_options_8h" local="yes">ATen/TensorOptions.h</includes>
    <includes refid="_undefined_type_8h" local="yes">ATen/UndefinedType.h</includes>
    <includes refid="_device_guard_8h" local="yes">ATen/DeviceGuard.h</includes>
    <includes refid="_variable_hooks_interface_8h" local="no">ATen/detail/VariableHooksInterface.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="10572">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="10560" relation="include">
        </childnode>
        <childnode refid="10573" relation="include">
        </childnode>
        <childnode refid="10574" relation="include">
        </childnode>
        <childnode refid="10575" relation="include">
        </childnode>
        <childnode refid="10576" relation="include">
        </childnode>
        <childnode refid="10559" relation="include">
        </childnode>
        <childnode refid="10558" relation="include">
        </childnode>
      </node>
      <node id="10610">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="10611" relation="include">
        </childnode>
        <childnode refid="10571" relation="include">
        </childnode>
        <childnode refid="10554" relation="include">
        </childnode>
        <childnode refid="10614" relation="include">
        </childnode>
        <childnode refid="10577" relation="include">
        </childnode>
        <childnode refid="10576" relation="include">
        </childnode>
        <childnode refid="10586" relation="include">
        </childnode>
      </node>
      <node id="10603">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="10571" relation="include">
        </childnode>
        <childnode refid="10569" relation="include">
        </childnode>
        <childnode refid="10577" relation="include">
        </childnode>
        <childnode refid="10566" relation="include">
        </childnode>
        <childnode refid="10559" relation="include">
        </childnode>
        <childnode refid="10576" relation="include">
        </childnode>
      </node>
      <node id="10593">
        <label>atomic</label>
      </node>
      <node id="10576">
        <label>functional</label>
      </node>
      <node id="10618">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="10577" relation="include">
        </childnode>
        <childnode refid="10559" relation="include">
        </childnode>
        <childnode refid="10597" relation="include">
        </childnode>
        <childnode refid="10561" relation="include">
        </childnode>
      </node>
      <node id="10569">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="10570" relation="include">
        </childnode>
        <childnode refid="10561" relation="include">
        </childnode>
        <childnode refid="10562" relation="include">
        </childnode>
        <childnode refid="10564" relation="include">
        </childnode>
        <childnode refid="10590" relation="include">
        </childnode>
      </node>
      <node id="10563">
        <label>limits</label>
      </node>
      <node id="10557">
        <label>assert.h</label>
      </node>
      <node id="10596">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="10561" relation="include">
        </childnode>
        <childnode refid="10570" relation="include">
        </childnode>
        <childnode refid="10571" relation="include">
        </childnode>
        <childnode refid="10595" relation="include">
        </childnode>
        <childnode refid="10583" relation="include">
        </childnode>
        <childnode refid="10580" relation="include">
        </childnode>
        <childnode refid="10597" relation="include">
        </childnode>
        <childnode refid="10598" relation="include">
        </childnode>
      </node>
      <node id="10585">
        <label>iterator</label>
      </node>
      <node id="10556">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="10557" relation="include">
        </childnode>
        <childnode refid="10555" relation="include">
        </childnode>
        <childnode refid="10558" relation="include">
        </childnode>
        <childnode refid="10559" relation="include">
        </childnode>
        <childnode refid="10560" relation="include">
        </childnode>
        <childnode refid="10561" relation="include">
        </childnode>
        <childnode refid="10562" relation="include">
        </childnode>
        <childnode refid="10569" relation="include">
        </childnode>
        <childnode refid="10591" relation="include">
        </childnode>
        <childnode refid="10596" relation="include">
        </childnode>
      </node>
      <node id="10601">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="10564">
        <label>cstdint</label>
      </node>
      <node id="10555">
        <label>stdint.h</label>
      </node>
      <node id="10565">
        <label>cmath</label>
      </node>
      <node id="10575">
        <label>cassert</label>
      </node>
      <node id="10608">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="10561" relation="include">
        </childnode>
        <childnode refid="10609" relation="include">
        </childnode>
        <childnode refid="10554" relation="include">
        </childnode>
        <childnode refid="10551" relation="include">
        </childnode>
        <childnode refid="10596" relation="include">
        </childnode>
        <childnode refid="10571" relation="include">
        </childnode>
        <childnode refid="10610" relation="include">
        </childnode>
        <childnode refid="10619" relation="include">
        </childnode>
        <childnode refid="10586" relation="include">
        </childnode>
        <childnode refid="10616" relation="include">
        </childnode>
        <childnode refid="10564" relation="include">
        </childnode>
      </node>
      <node id="10567">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="10561" relation="include">
        </childnode>
        <childnode refid="10568" relation="include">
        </childnode>
        <childnode refid="10563" relation="include">
        </childnode>
      </node>
      <node id="10558">
        <label>stdexcept</label>
      </node>
      <node id="10598">
        <label>numeric</label>
      </node>
      <node id="10592">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="10593" relation="include">
        </childnode>
        <childnode refid="10586" relation="include">
        </childnode>
        <childnode refid="10594" relation="include">
        </childnode>
        <childnode refid="10569" relation="include">
        </childnode>
        <childnode refid="10572" relation="include">
        </childnode>
      </node>
      <node id="10594">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="10593" relation="include">
        </childnode>
      </node>
      <node id="10562">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="10561" relation="include">
        </childnode>
        <childnode refid="10563" relation="include">
        </childnode>
        <childnode refid="10559" relation="include">
        </childnode>
        <childnode refid="10564" relation="include">
        </childnode>
        <childnode refid="10558" relation="include">
        </childnode>
        <childnode refid="10560" relation="include">
        </childnode>
        <childnode refid="10565" relation="include">
        </childnode>
        <childnode refid="10566" relation="include">
        </childnode>
        <childnode refid="10567" relation="include">
        </childnode>
      </node>
      <node id="10591">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="10592" relation="include">
        </childnode>
        <childnode refid="10595" relation="include">
        </childnode>
      </node>
      <node id="10559">
        <label>string</label>
      </node>
      <node id="10623">
        <label>ATen/detail/VariableHooksInterface.h</label>
        <link refid="_variable_hooks_interface_8h_source"/>
        <childnode refid="10614" relation="include">
        </childnode>
        <childnode refid="10571" relation="include">
        </childnode>
        <childnode refid="10569" relation="include">
        </childnode>
      </node>
      <node id="10552">
        <label>ATen/ExpandUtils.h</label>
        <link refid="_expand_utils_8h_source"/>
        <childnode refid="10553" relation="include">
        </childnode>
        <childnode refid="10571" relation="include">
        </childnode>
        <childnode refid="10576" relation="include">
        </childnode>
        <childnode refid="10580" relation="include">
        </childnode>
        <childnode refid="10605" relation="include">
        </childnode>
      </node>
      <node id="10611">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="10586" relation="include">
        </childnode>
        <childnode refid="10612" relation="include">
        </childnode>
        <childnode refid="10571" relation="include">
        </childnode>
        <childnode refid="10594" relation="include">
        </childnode>
        <childnode refid="10603" relation="include">
        </childnode>
        <childnode refid="10613" relation="include">
        </childnode>
      </node>
      <node id="10619">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="10620">
        <label>ATen/DeviceGuard.h</label>
        <link refid="_device_guard_8h_source"/>
        <childnode refid="10603" relation="include">
        </childnode>
        <childnode refid="10571" relation="include">
        </childnode>
        <childnode refid="10569" relation="include">
        </childnode>
        <childnode refid="10553" relation="include">
        </childnode>
        <childnode refid="10610" relation="include">
        </childnode>
        <childnode refid="10577" relation="include">
        </childnode>
      </node>
      <node id="10578">
        <label>exception</label>
      </node>
      <node id="10612">
        <label>stddef.h</label>
      </node>
      <node id="10595">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="10592" relation="include">
        </childnode>
      </node>
      <node id="10582">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="10577" relation="include">
        </childnode>
      </node>
      <node id="10600">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="10556" relation="include">
        </childnode>
        <childnode refid="10601" relation="include">
        </childnode>
      </node>
      <node id="10579">
        <label>ostream</label>
      </node>
      <node id="10609">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="10561" relation="include">
        </childnode>
      </node>
      <node id="10551">
        <label>ATen/Type.h</label>
      </node>
      <node id="10570">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="10571" relation="include">
        </childnode>
        <childnode refid="10581" relation="include">
        </childnode>
        <childnode refid="10588" relation="include">
        </childnode>
        <childnode refid="10585" relation="include">
        </childnode>
        <childnode refid="10589" relation="include">
        </childnode>
      </node>
      <node id="10599">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="10622">
        <label>ATen/CheckGenerator.h</label>
        <link refid="_check_generator_8h_source"/>
        <childnode refid="10571" relation="include">
        </childnode>
        <childnode refid="10554" relation="include">
        </childnode>
        <childnode refid="10596" relation="include">
        </childnode>
      </node>
      <node id="10561">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="10602">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="10577" relation="include">
        </childnode>
        <childnode refid="10555" relation="include">
        </childnode>
        <childnode refid="10569" relation="include">
        </childnode>
      </node>
      <node id="10597">
        <label>typeinfo</label>
      </node>
      <node id="10615">
        <label>cstdio</label>
      </node>
      <node id="10605">
        <label>tuple</label>
      </node>
      <node id="10613">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="10586" relation="include">
        </childnode>
        <childnode refid="10561" relation="include">
        </childnode>
      </node>
      <node id="10589">
        <label>vector</label>
      </node>
      <node id="10587">
        <label>new</label>
      </node>
      <node id="10560">
        <label>utility</label>
      </node>
      <node id="10588">
        <label>array</label>
      </node>
      <node id="10580">
        <label>sstream</label>
      </node>
      <node id="10606">
        <label>ATen/NativeFunctions.h</label>
      </node>
      <node id="10550">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/Type.cpp</label>
        <link refid="_type_8cpp"/>
        <childnode refid="10551" relation="include">
        </childnode>
        <childnode refid="10552" relation="include">
        </childnode>
        <childnode refid="10606" relation="include">
        </childnode>
        <childnode refid="10556" relation="include">
        </childnode>
        <childnode refid="10599" relation="include">
        </childnode>
        <childnode refid="10600" relation="include">
        </childnode>
        <childnode refid="10553" relation="include">
        </childnode>
        <childnode refid="10607" relation="include">
        </childnode>
        <childnode refid="10621" relation="include">
        </childnode>
        <childnode refid="10620" relation="include">
        </childnode>
        <childnode refid="10623" relation="include">
        </childnode>
        <childnode refid="10590" relation="include">
        </childnode>
      </node>
      <node id="10566">
        <label>iosfwd</label>
      </node>
      <node id="10584">
        <label>cstdlib</label>
      </node>
      <node id="10590">
        <label>iostream</label>
      </node>
      <node id="10577">
        <label>cstddef</label>
      </node>
      <node id="10617">
        <label>unordered_map</label>
      </node>
      <node id="10616">
        <label>mutex</label>
      </node>
      <node id="10614">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="10583" relation="include">
        </childnode>
        <childnode refid="10615" relation="include">
        </childnode>
        <childnode refid="10584" relation="include">
        </childnode>
        <childnode refid="10576" relation="include">
        </childnode>
        <childnode refid="10586" relation="include">
        </childnode>
        <childnode refid="10616" relation="include">
        </childnode>
        <childnode refid="10617" relation="include">
        </childnode>
        <childnode refid="10559" relation="include">
        </childnode>
        <childnode refid="10589" relation="include">
        </childnode>
        <childnode refid="10618" relation="include">
        </childnode>
        <childnode refid="10561" relation="include">
        </childnode>
      </node>
      <node id="10571">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="10561" relation="include">
        </childnode>
        <childnode refid="10572" relation="include">
        </childnode>
        <childnode refid="10577" relation="include">
        </childnode>
        <childnode refid="10578" relation="include">
        </childnode>
        <childnode refid="10579" relation="include">
        </childnode>
        <childnode refid="10580" relation="include">
        </childnode>
        <childnode refid="10559" relation="include">
        </childnode>
      </node>
      <node id="10607">
        <label>ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="10608" relation="include">
        </childnode>
        <childnode refid="10603" relation="include">
        </childnode>
        <childnode refid="10620" relation="include">
        </childnode>
        <childnode refid="10604" relation="include">
        </childnode>
        <childnode refid="10569" relation="include">
        </childnode>
        <childnode refid="10553" relation="include">
        </childnode>
        <childnode refid="10551" relation="include">
        </childnode>
        <childnode refid="10577" relation="include">
        </childnode>
        <childnode refid="10566" relation="include">
        </childnode>
        <childnode refid="10560" relation="include">
        </childnode>
      </node>
      <node id="10553">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="10554" relation="include">
        </childnode>
        <childnode refid="10556" relation="include">
        </childnode>
        <childnode refid="10569" relation="include">
        </childnode>
        <childnode refid="10599" relation="include">
        </childnode>
        <childnode refid="10600" relation="include">
        </childnode>
        <childnode refid="10602" relation="include">
        </childnode>
        <childnode refid="10591" relation="include">
        </childnode>
        <childnode refid="10592" relation="include">
        </childnode>
        <childnode refid="10596" relation="include">
        </childnode>
        <childnode refid="10603" relation="include">
        </childnode>
        <childnode refid="10604" relation="include">
        </childnode>
        <childnode refid="10572" relation="include">
        </childnode>
      </node>
      <node id="10573">
        <label>type_traits</label>
      </node>
      <node id="10604">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="10569" relation="include">
        </childnode>
        <childnode refid="10571" relation="include">
        </childnode>
        <childnode refid="10590" relation="include">
        </childnode>
      </node>
      <node id="10621">
        <label>ATen/UndefinedType.h</label>
        <link refid="_undefined_type_8h_source"/>
        <childnode refid="10551" relation="include">
        </childnode>
        <childnode refid="10608" relation="include">
        </childnode>
        <childnode refid="10622" relation="include">
        </childnode>
      </node>
      <node id="10581">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="10582" relation="include">
        </childnode>
        <childnode refid="10583" relation="include">
        </childnode>
        <childnode refid="10575" relation="include">
        </childnode>
        <childnode refid="10577" relation="include">
        </childnode>
        <childnode refid="10584" relation="include">
        </childnode>
        <childnode refid="10568" relation="include">
        </childnode>
        <childnode refid="10574" relation="include">
        </childnode>
        <childnode refid="10585" relation="include">
        </childnode>
        <childnode refid="10586" relation="include">
        </childnode>
        <childnode refid="10587" relation="include">
        </childnode>
        <childnode refid="10573" relation="include">
        </childnode>
        <childnode refid="10560" relation="include">
        </childnode>
        <childnode refid="10561" relation="include">
        </childnode>
      </node>
      <node id="10583">
        <label>algorithm</label>
      </node>
      <node id="10554">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="10555" relation="include">
        </childnode>
      </node>
      <node id="10568">
        <label>cstring</label>
      </node>
      <node id="10586">
        <label>memory</label>
      </node>
      <node id="10574">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ATen/Type.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>${generated_comment}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/ExpandUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/NativeFunctions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Scalar.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/SparseTensorRef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Storage.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Tensor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/TensorOptions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/UndefinedType.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/DeviceGuard.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/detail/VariableHooksInterface.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">${cpu_type_headers}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Type::registerCPU(Context<sp/>*<sp/>context)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>${cpu_type_registrations}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>context-&gt;type_registry[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Backend::Undefined)]</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[static_cast&lt;int&gt;(ScalarType::Undefined)].reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UndefinedType(context));</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">Tensor<sp/>&amp;<sp/>Type::copy_(Tensor<sp/>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor<sp/>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>non_blocking)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>Tensor<sp/>b_src;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>std::tie(b_src)<sp/>=<sp/>expand_inplace(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>src,<sp/></highlight><highlight class="stringliteral">&quot;copy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_copy_(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>b_src,<sp/>non_blocking);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">Tensor<sp/>Type::copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor<sp/>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>non_blocking)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(psag):<sp/>have<sp/>a<sp/>DeviceGuard<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>AT_CHECK(src.defined(),<sp/></highlight><highlight class="stringliteral">&quot;attempt<sp/>to<sp/>copy<sp/>an<sp/>undefined<sp/>tensor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_sparse())<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indices<sp/>=<sp/>src._indices();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>values<sp/>=<sp/>src._values();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>this_dense<sp/>=<sp/>toBackend(is_cuda()<sp/>?<sp/>Backend::CUDA<sp/>:<sp/>Backend::CPU);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>this_dense_idx<sp/>=<sp/>this_dense.toScalarType(ScalarType::Long);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indices_copy<sp/>=<sp/>this_dense_idx.copy(indices,<sp/>non_blocking);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>values_copy<sp/>=<sp/>this_dense.copy(values,<sp/>non_blocking);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_sparse_coo_tensor_unsafe(indices_copy,<sp/>values_copy,<sp/>src.sizes());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>Tensor<sp/>r<sp/>=<sp/>this-&gt;tensor(src.sizes());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>r.copy_(src,<sp/>non_blocking);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">Type<sp/>&amp;<sp/>Type::toBackend(Backend<sp/>b)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;getType(b,scalarType());</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">Type<sp/>&amp;<sp/>Type::toScalarType(ScalarType<sp/>s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;getType(backend(),s);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;int64_t&gt;<sp/>defaultStrides(IntList<sp/>sizes)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>strides(sizes.<ref refid="classat_1_1_array_ref_1a7b5593a67d764c4c4443e31fa34211e7" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>int64_t<sp/>stride<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>sizes.<ref refid="classat_1_1_array_ref_1a7b5593a67d764c4c4443e31fa34211e7" kindref="member">size</ref>();<sp/>i<sp/>&gt;<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>strides[i-1]<sp/>=<sp/>stride;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>stride<sp/>*=<sp/>sizes[i-1];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strides;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int64_t<sp/>computeStorageSize(IntList<sp/>sizes,<sp/>IntList<sp/>strides)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>the<sp/>underlying<sp/>storage<sp/>is<sp/>1<sp/>bigger<sp/>than<sp/>the<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>last<sp/>element<sp/>according<sp/>to<sp/>stride</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>int64_t<sp/>size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sizes.<ref refid="classat_1_1_array_ref_1a7b5593a67d764c4c4443e31fa34211e7" kindref="member">size</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sizes[i]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>+=<sp/>strides[i]*(sizes[i]-1);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">Tensor<sp/>Type::tensorFromBlob(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/>IntList<sp/>sizes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&gt;<sp/>&amp;<sp/>deleter)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensorFromBlob(data,<sp/>sizes,<sp/>defaultStrides(sizes),<sp/>deleter);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">Tensor<sp/>Type::tensorFromBlob(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/>IntList<sp/>sizes,<sp/>IntList<sp/>strides,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&gt;<sp/>&amp;<sp/>deleter)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>storage<sp/>=<sp/>storageFromBlob(data,<sp/>computeStorageSize(sizes,<sp/>strides),<sp/>deleter);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor(*storage,<sp/>0,<sp/>sizes,<sp/>strides);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">Tensor<sp/>Type::tensorWithAllocator(IntList<sp/>sizes,<sp/>Allocator*<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensorWithAllocator(sizes,<sp/>defaultStrides(sizes),<sp/>std::move(allocator));</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">Tensor<sp/>Type::tensorWithAllocator(IntList<sp/>sizes,<sp/>IntList<sp/>strides,<sp/>Allocator*<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>storage<sp/>=<sp/>storageWithAllocator(computeStorageSize(sizes,<sp/>strides),<sp/>std::move(allocator));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor(*storage,<sp/>0,<sp/>sizes,<sp/>strides);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">Tensor<sp/>Type::scalarTensor(Scalar<sp/>s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s.isBackedByTensor())</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Tensor(s.t).toType(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor({}).fill_(s);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Type::operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;other;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Type::operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">${type_method_definitions}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/Type.cpp"/>
  </compounddef>
</doxygen>
