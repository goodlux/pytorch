<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structtorch_1_1nn_1_1_r_n_n_options" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>torch::nn::RNNOptions</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtorch_1_1nn_1_1_r_n_n_options_1a6cfe9e3599756dc76d571d7e4df104f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>torch::nn::RNNOptions::RNNOptions</definition>
        <argsstring>(int64_t input_size, int64_t hidden_size)</argsstring>
        <name>RNNOptions</name>
        <param>
          <type>int64_t</type>
          <declname>input_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>hidden_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/rnn.h" line="109" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/modules/rnn.cpp" bodystart="304" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="structtorch_1_1nn_1_1_r_n_n_options_1a40e86a471d621947e9cc93eb489bd13c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtorch_1_1nn_1_1_r_n_n_options" kindref="compound">RNNOptions</ref> &amp;</type>
        <definition>RNNOptions &amp; torch::nn::RNNOptions::tanh</definition>
        <argsstring>()</argsstring>
        <name>tanh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/rnn.h" line="111" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/modules/rnn.cpp" bodystart="307" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="structtorch_1_1nn_1_1_r_n_n_options_1a759dcd32c19de7f0cba6dcf3009cf7cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtorch_1_1nn_1_1_r_n_n_options" kindref="compound">RNNOptions</ref> &amp;</type>
        <definition>RNNOptions &amp; torch::nn::RNNOptions::relu</definition>
        <argsstring>()</argsstring>
        <name>relu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/rnn.h" line="112" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/modules/rnn.cpp" bodystart="311" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="structtorch_1_1nn_1_1_r_n_n_options_1a90679d0803bc6c3e87011787f0ce11d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>torch::nn::RNNOptions::TORCH_ARG</definition>
        <argsstring>(int64_t, input_size)</argsstring>
        <name>TORCH_ARG</name>
        <param>
          <type>int64_t</type>
        </param>
        <param>
          <type>input_size</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/rnn.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structtorch_1_1nn_1_1_r_n_n_options_1a4b05b95f1038611ec78a2ca8768dbff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>torch::nn::RNNOptions::TORCH_ARG</definition>
        <argsstring>(int64_t, hidden_size)</argsstring>
        <name>TORCH_ARG</name>
        <param>
          <type>int64_t</type>
        </param>
        <param>
          <type>hidden_size</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/rnn.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structtorch_1_1nn_1_1_r_n_n_options_1af3aee3197f7858f6cd44ac84654591e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>torch::nn::RNNOptions::TORCH_ARG</definition>
        <argsstring>(int64_t, layers)</argsstring>
        <name>TORCH_ARG</name>
        <param>
          <type>int64_t</type>
        </param>
        <param>
          <type>layers</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/rnn.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structtorch_1_1nn_1_1_r_n_n_options_1af3d55ef988802262b3b887559dd50b3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>torch::nn::RNNOptions::TORCH_ARG</definition>
        <argsstring>(bool, with_bias)</argsstring>
        <name>TORCH_ARG</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>with_bias</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/rnn.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structtorch_1_1nn_1_1_r_n_n_options_1a596bff67c7a88988051471014d660131" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type></type>
        <definition>torch::nn::RNNOptions::TORCH_ARG</definition>
        <argsstring>(double, dropout)=0.0</argsstring>
        <name>TORCH_ARG</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>dropout</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/rnn.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structtorch_1_1nn_1_1_r_n_n_options_1a297b653e9729361989f5ec30659c4c5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>torch::nn::RNNOptions::TORCH_ARG</definition>
        <argsstring>(RNNActivation, activation)</argsstring>
        <name>TORCH_ARG</name>
        <param>
          <type>RNNActivation</type>
        </param>
        <param>
          <type>activation</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/rnn.h" line="119" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/rnn.h" line="108" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/rnn.h" bodystart="108" bodyend="120"/>
    <listofallmembers>
      <member refid="structtorch_1_1nn_1_1_r_n_n_options_1a759dcd32c19de7f0cba6dcf3009cf7cf" prot="public" virt="non-virtual"><scope>torch::nn::RNNOptions</scope><name>relu</name></member>
      <member refid="structtorch_1_1nn_1_1_r_n_n_options_1a6cfe9e3599756dc76d571d7e4df104f7" prot="public" virt="non-virtual"><scope>torch::nn::RNNOptions</scope><name>RNNOptions</name></member>
      <member refid="structtorch_1_1nn_1_1_r_n_n_options_1a40e86a471d621947e9cc93eb489bd13c" prot="public" virt="non-virtual"><scope>torch::nn::RNNOptions</scope><name>tanh</name></member>
      <member refid="structtorch_1_1nn_1_1_r_n_n_options_1a90679d0803bc6c3e87011787f0ce11d0" prot="public" virt="non-virtual"><scope>torch::nn::RNNOptions</scope><name>TORCH_ARG</name></member>
      <member refid="structtorch_1_1nn_1_1_r_n_n_options_1a4b05b95f1038611ec78a2ca8768dbff4" prot="public" virt="non-virtual"><scope>torch::nn::RNNOptions</scope><name>TORCH_ARG</name></member>
      <member refid="structtorch_1_1nn_1_1_r_n_n_options_1af3aee3197f7858f6cd44ac84654591e7" prot="public" virt="non-virtual"><scope>torch::nn::RNNOptions</scope><name>TORCH_ARG</name></member>
      <member refid="structtorch_1_1nn_1_1_r_n_n_options_1af3d55ef988802262b3b887559dd50b3c" prot="public" virt="non-virtual"><scope>torch::nn::RNNOptions</scope><name>TORCH_ARG</name></member>
      <member refid="structtorch_1_1nn_1_1_r_n_n_options_1a596bff67c7a88988051471014d660131" prot="public" virt="pure-virtual"><scope>torch::nn::RNNOptions</scope><name>TORCH_ARG</name></member>
      <member refid="structtorch_1_1nn_1_1_r_n_n_options_1a297b653e9729361989f5ec30659c4c5e" prot="public" virt="non-virtual"><scope>torch::nn::RNNOptions</scope><name>TORCH_ARG</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
