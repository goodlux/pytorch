<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_c_p_u_fixed_allocator_8h" kind="file" language="C++">
    <compoundname>CPUFixedAllocator.h</compoundname>
    <includes local="yes">TH/TH.h</includes>
    <includes refid="_error_8h" local="yes">ATen/Error.h</includes>
    <incdepgraph>
      <node id="1376">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="1377" relation="include">
        </childnode>
        <childnode refid="1378" relation="include">
        </childnode>
        <childnode refid="1379" relation="include">
        </childnode>
        <childnode refid="1380" relation="include">
        </childnode>
        <childnode refid="1381" relation="include">
        </childnode>
        <childnode refid="1382" relation="include">
        </childnode>
        <childnode refid="1383" relation="include">
        </childnode>
      </node>
      <node id="1381">
        <label>functional</label>
      </node>
      <node id="1373">
        <label>TH/TH.h</label>
      </node>
      <node id="1380">
        <label>cassert</label>
      </node>
      <node id="1383">
        <label>stdexcept</label>
      </node>
      <node id="1382">
        <label>string</label>
      </node>
      <node id="1385">
        <label>exception</label>
      </node>
      <node id="1386">
        <label>ostream</label>
      </node>
      <node id="1375">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="1377">
        <label>utility</label>
      </node>
      <node id="1387">
        <label>sstream</label>
      </node>
      <node id="1384">
        <label>cstddef</label>
      </node>
      <node id="1372">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUFixedAllocator.h</label>
        <link refid="_c_p_u_fixed_allocator_8h"/>
        <childnode refid="1373" relation="include">
        </childnode>
        <childnode refid="1374" relation="include">
        </childnode>
      </node>
      <node id="1374">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="1375" relation="include">
        </childnode>
        <childnode refid="1376" relation="include">
        </childnode>
        <childnode refid="1384" relation="include">
        </childnode>
        <childnode refid="1385" relation="include">
        </childnode>
        <childnode refid="1386" relation="include">
        </childnode>
        <childnode refid="1387" relation="include">
        </childnode>
        <childnode refid="1382" relation="include">
        </childnode>
      </node>
      <node id="1378">
        <label>type_traits</label>
      </node>
      <node id="1379">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceat">at</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TH/TH.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>creates<sp/>a<sp/>fake<sp/>allocator<sp/>that<sp/>just<sp/>throws<sp/>exceptions<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>actually<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>state<sp/>passed<sp/>to<sp/>the<sp/>allocator<sp/>is<sp/>the<sp/>std::function&lt;void(void*)&gt;<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>blob<sp/>is<sp/>release<sp/>by<sp/>ATen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cpu_fixed_malloc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>ptrdiff_t)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;attempting<sp/>to<sp/>resize<sp/>a<sp/>tensor<sp/>view<sp/>of<sp/>an<sp/>external<sp/>blob&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cpu_fixed_realloc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>ptrdiff_t)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;attempting<sp/>to<sp/>resize<sp/>a<sp/>tensor<sp/>view<sp/>of<sp/>an<sp/>external<sp/>blob&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cpu_fixed_free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>state,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>allocation)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>on_release<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::function&lt;void(void*)&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(state);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>(*on_release)(allocation);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>on_release;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>THAllocator<sp/>CPU_fixed_allocator<sp/>=</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>{<sp/>cpu_fixed_malloc,<sp/>cpu_fixed_realloc,<sp/>cpu_fixed_free<sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUFixedAllocator.h"/>
  </compounddef>
</doxygen>
