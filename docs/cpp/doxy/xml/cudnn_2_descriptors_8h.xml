<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="cudnn_2_descriptors_8h" kind="file" language="C++">
    <compoundname>Descriptors.h</compoundname>
    <includes refid="_c_u_d_a_context_8h" local="yes">ATen/cuda/CUDAContext.h</includes>
    <includes refid="cuda_2_exceptions_8h" local="yes">ATen/cuda/Exceptions.h</includes>
    <includes refid="cudnn-wrapper_8h" local="yes">cudnn-wrapper.h</includes>
    <includes refid="_a_ten_8h" local="no">ATen/ATen.h</includes>
    <includes refid="_tensor_utils_8h" local="no">ATen/TensorUtils.h</includes>
    <includes refid="_a_ten_c_u_d_a_general_8h" local="yes">ATen/cuda/ATenCUDAGeneral.h</includes>
    <includes refid="cuda_8h" local="no">cuda.h</includes>
    <includes local="no">curand_kernel.h</includes>
    <includedby refid="_descriptors_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.cpp</includedby>
    <includedby refid="cudnn__test_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/cudnn_test.cpp</includedby>
    <incdepgraph>
      <node id="2309">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="2310" relation="include">
        </childnode>
        <childnode refid="2311" relation="include">
        </childnode>
        <childnode refid="2312" relation="include">
        </childnode>
        <childnode refid="2313" relation="include">
        </childnode>
        <childnode refid="2314" relation="include">
        </childnode>
        <childnode refid="2315" relation="include">
        </childnode>
        <childnode refid="2316" relation="include">
        </childnode>
      </node>
      <node id="2348">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
        <childnode refid="2340" relation="include">
        </childnode>
        <childnode refid="2315" relation="include">
        </childnode>
        <childnode refid="2314" relation="include">
        </childnode>
      </node>
      <node id="2345">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="2346" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2303" relation="include">
        </childnode>
        <childnode refid="2350" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
        <childnode refid="2314" relation="include">
        </childnode>
        <childnode refid="2327" relation="include">
        </childnode>
      </node>
      <node id="2333">
        <label>atomic</label>
      </node>
      <node id="2314">
        <label>functional</label>
      </node>
      <node id="2354">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="2317" relation="include">
        </childnode>
        <childnode refid="2315" relation="include">
        </childnode>
        <childnode refid="2343" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
      </node>
      <node id="2335">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="2307" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2336" relation="include">
        </childnode>
        <childnode refid="2338" relation="include">
        </childnode>
        <childnode refid="2342" relation="include">
        </childnode>
      </node>
      <node id="2337">
        <label>limits</label>
      </node>
      <node id="2364">
        <label>assert.h</label>
      </node>
      <node id="2326">
        <label>iterator</label>
      </node>
      <node id="2306">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2307" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2331" relation="include">
        </childnode>
        <childnode refid="2323" relation="include">
        </childnode>
        <childnode refid="2320" relation="include">
        </childnode>
        <childnode refid="2343" relation="include">
        </childnode>
        <childnode refid="2344" relation="include">
        </childnode>
      </node>
      <node id="2363">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="2364" relation="include">
        </childnode>
        <childnode refid="2304" relation="include">
        </childnode>
        <childnode refid="2316" relation="include">
        </childnode>
        <childnode refid="2315" relation="include">
        </childnode>
        <childnode refid="2310" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2336" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
        <childnode refid="2365" relation="include">
        </childnode>
        <childnode refid="2306" relation="include">
        </childnode>
      </node>
      <node id="2367">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="2338">
        <label>cstdint</label>
      </node>
      <node id="2375">
        <label>ATen/Deprecated.h</label>
        <link refid="_deprecated_8h_source"/>
      </node>
      <node id="2304">
        <label>stdint.h</label>
      </node>
      <node id="2361">
        <label>cudnn.h</label>
      </node>
      <node id="2386">
        <label>ATen/CUDAGuard.h</label>
        <link refid="_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="2339">
        <label>cmath</label>
      </node>
      <node id="2313">
        <label>cassert</label>
      </node>
      <node id="2300">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2302" relation="include">
        </childnode>
        <childnode refid="2303" relation="include">
        </childnode>
        <childnode refid="2305" relation="include">
        </childnode>
        <childnode refid="2306" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2345" relation="include">
        </childnode>
        <childnode refid="2355" relation="include">
        </childnode>
        <childnode refid="2327" relation="include">
        </childnode>
        <childnode refid="2352" relation="include">
        </childnode>
        <childnode refid="2338" relation="include">
        </childnode>
      </node>
      <node id="2341">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2325" relation="include">
        </childnode>
        <childnode refid="2337" relation="include">
        </childnode>
      </node>
      <node id="2316">
        <label>stdexcept</label>
      </node>
      <node id="2381">
        <label>ATen/TensorOperators.h</label>
        <link refid="_tensor_operators_8h_source"/>
        <childnode refid="2363" relation="include">
        </childnode>
        <childnode refid="2368" relation="include">
        </childnode>
        <childnode refid="2305" relation="include">
        </childnode>
        <childnode refid="2315" relation="include">
        </childnode>
        <childnode refid="2316" relation="include">
        </childnode>
      </node>
      <node id="2344">
        <label>numeric</label>
      </node>
      <node id="2299">
        <label>ATen/cuda/CUDAContext.h</label>
        <link refid="_c_u_d_a_context_8h_source"/>
        <childnode refid="2300" relation="include">
        </childnode>
        <childnode refid="2356" relation="include">
        </childnode>
        <childnode refid="2358" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2338" relation="include">
        </childnode>
        <childnode refid="2357" relation="include">
        </childnode>
        <childnode refid="2359" relation="include">
        </childnode>
      </node>
      <node id="2332">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="2333" relation="include">
        </childnode>
        <childnode refid="2327" relation="include">
        </childnode>
        <childnode refid="2334" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
        <childnode refid="2309" relation="include">
        </childnode>
      </node>
      <node id="2336">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2337" relation="include">
        </childnode>
        <childnode refid="2315" relation="include">
        </childnode>
        <childnode refid="2338" relation="include">
        </childnode>
        <childnode refid="2316" relation="include">
        </childnode>
        <childnode refid="2310" relation="include">
        </childnode>
        <childnode refid="2339" relation="include">
        </childnode>
        <childnode refid="2340" relation="include">
        </childnode>
        <childnode refid="2341" relation="include">
        </childnode>
      </node>
      <node id="2334">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="2333" relation="include">
        </childnode>
      </node>
      <node id="2365">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="2332" relation="include">
        </childnode>
        <childnode refid="2331" relation="include">
        </childnode>
      </node>
      <node id="2315">
        <label>string</label>
      </node>
      <node id="2358">
        <label>ATen/cuda/Exceptions.h</label>
        <link refid="cuda_2_exceptions_8h_source"/>
        <childnode refid="2308" relation="include">
        </childnode>
      </node>
      <node id="2384">
        <label>ATen/DimVector.h</label>
        <link refid="_dim_vector_8h_source"/>
        <childnode refid="2321" relation="include">
        </childnode>
        <childnode refid="2304" relation="include">
        </childnode>
      </node>
      <node id="2385">
        <label>ATen/OptionsGuard.h</label>
        <link refid="_options_guard_8h_source"/>
        <childnode refid="2348" relation="include">
        </childnode>
        <childnode refid="2371" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
        <childnode refid="2378" relation="include">
        </childnode>
        <childnode refid="2309" relation="include">
        </childnode>
      </node>
      <node id="2346">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="2327" relation="include">
        </childnode>
        <childnode refid="2347" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2334" relation="include">
        </childnode>
        <childnode refid="2348" relation="include">
        </childnode>
        <childnode refid="2349" relation="include">
        </childnode>
      </node>
      <node id="2355">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="2377">
        <label>ATen/DeviceGuard.h</label>
        <link refid="_device_guard_8h_source"/>
        <childnode refid="2348" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
        <childnode refid="2368" relation="include">
        </childnode>
        <childnode refid="2345" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
      </node>
      <node id="2318">
        <label>exception</label>
      </node>
      <node id="2347">
        <label>stddef.h</label>
      </node>
      <node id="2331">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="2332" relation="include">
        </childnode>
      </node>
      <node id="2383">
        <label>ATen/Dispatch.h</label>
        <link refid="_dispatch_8h_source"/>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2336" relation="include">
        </childnode>
        <childnode refid="2305" relation="include">
        </childnode>
      </node>
      <node id="2322">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="2317" relation="include">
        </childnode>
      </node>
      <node id="2366">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="2363" relation="include">
        </childnode>
        <childnode refid="2367" relation="include">
        </childnode>
      </node>
      <node id="2319">
        <label>ostream</label>
      </node>
      <node id="2302">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="2301" relation="include">
        </childnode>
      </node>
      <node id="2305">
        <label>ATen/Type.h</label>
      </node>
      <node id="2307">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2321" relation="include">
        </childnode>
        <childnode refid="2329" relation="include">
        </childnode>
        <childnode refid="2326" relation="include">
        </childnode>
        <childnode refid="2330" relation="include">
        </childnode>
      </node>
      <node id="2372">
        <label>ATen/TensorGeometry.h</label>
        <link refid="_tensor_geometry_8h_source"/>
        <childnode refid="2305" relation="include">
        </childnode>
        <childnode refid="2373" relation="include">
        </childnode>
      </node>
      <node id="2369">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="2387">
        <label>ATen/TensorUtils.h</label>
        <link refid="_tensor_utils_8h_source"/>
        <childnode refid="2368" relation="include">
        </childnode>
        <childnode refid="2372" relation="include">
        </childnode>
        <childnode refid="2306" relation="include">
        </childnode>
      </node>
      <node id="2388">
        <label>ATen/cuda/ATenCUDAGeneral.h</label>
        <link refid="_a_ten_c_u_d_a_general_8h_source"/>
      </node>
      <node id="2301">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="2373">
        <label>ATen/WrapDimUtils.h</label>
        <link refid="_wrap_dim_utils_8h_source"/>
        <childnode refid="2332" relation="include">
        </childnode>
        <childnode refid="2320" relation="include">
        </childnode>
      </node>
      <node id="2370">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="2317" relation="include">
        </childnode>
        <childnode refid="2304" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
      </node>
      <node id="2343">
        <label>typeinfo</label>
      </node>
      <node id="2351">
        <label>cstdio</label>
      </node>
      <node id="2349">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="2327" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
      </node>
      <node id="2330">
        <label>vector</label>
      </node>
      <node id="2382">
        <label>ATen/TensorMethods.h</label>
      </node>
      <node id="2379">
        <label>THNN/Reduction.h</label>
      </node>
      <node id="2328">
        <label>new</label>
      </node>
      <node id="2298">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.h</label>
        <link refid="cudnn_2_descriptors_8h"/>
        <childnode refid="2299" relation="include">
        </childnode>
        <childnode refid="2358" relation="include">
        </childnode>
        <childnode refid="2360" relation="include">
        </childnode>
        <childnode refid="2362" relation="include">
        </childnode>
        <childnode refid="2387" relation="include">
        </childnode>
        <childnode refid="2388" relation="include">
        </childnode>
        <childnode refid="2389" relation="include">
        </childnode>
        <childnode refid="2390" relation="include">
        </childnode>
      </node>
      <node id="2310">
        <label>utility</label>
      </node>
      <node id="2329">
        <label>array</label>
      </node>
      <node id="2320">
        <label>sstream</label>
      </node>
      <node id="2374">
        <label>ATen/Functions.h</label>
        <link refid="build_2aten_2src_2_a_ten_2_functions_8h_source"/>
        <childnode refid="2363" relation="include">
        </childnode>
        <childnode refid="2305" relation="include">
        </childnode>
        <childnode refid="2368" relation="include">
        </childnode>
        <childnode refid="2366" relation="include">
        </childnode>
        <childnode refid="2303" relation="include">
        </childnode>
        <childnode refid="2375" relation="include">
        </childnode>
        <childnode refid="2376" relation="include">
        </childnode>
        <childnode refid="2377" relation="include">
        </childnode>
        <childnode refid="2378" relation="include">
        </childnode>
        <childnode refid="2379" relation="include">
        </childnode>
      </node>
      <node id="2376">
        <label>ATen/NativeFunctions.h</label>
      </node>
      <node id="2340">
        <label>iosfwd</label>
      </node>
      <node id="2324">
        <label>cstdlib</label>
      </node>
      <node id="2342">
        <label>iostream</label>
      </node>
      <node id="2317">
        <label>cstddef</label>
      </node>
      <node id="2356">
        <label>ATen/cuda/CUDAStream.h</label>
        <link refid="cuda_2_c_u_d_a_stream_8h_source"/>
        <childnode refid="2338" relation="include">
        </childnode>
        <childnode refid="2310" relation="include">
        </childnode>
        <childnode refid="2357" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
      </node>
      <node id="2353">
        <label>unordered_map</label>
      </node>
      <node id="2352">
        <label>mutex</label>
      </node>
      <node id="2357">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="2362">
        <label>ATen/ATen.h</label>
        <link refid="_a_ten_8h_source"/>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2302" relation="include">
        </childnode>
        <childnode refid="2346" relation="include">
        </childnode>
        <childnode refid="2363" relation="include">
        </childnode>
        <childnode refid="2305" relation="include">
        </childnode>
        <childnode refid="2303" relation="include">
        </childnode>
        <childnode refid="2300" relation="include">
        </childnode>
        <childnode refid="2366" relation="include">
        </childnode>
        <childnode refid="2368" relation="include">
        </childnode>
        <childnode refid="2348" relation="include">
        </childnode>
        <childnode refid="2372" relation="include">
        </childnode>
        <childnode refid="2374" relation="include">
        </childnode>
        <childnode refid="2380" relation="include">
        </childnode>
        <childnode refid="2381" relation="include">
        </childnode>
        <childnode refid="2382" relation="include">
        </childnode>
        <childnode refid="2383" relation="include">
        </childnode>
        <childnode refid="2384" relation="include">
        </childnode>
        <childnode refid="2377" relation="include">
        </childnode>
        <childnode refid="2378" relation="include">
        </childnode>
        <childnode refid="2371" relation="include">
        </childnode>
        <childnode refid="2385" relation="include">
        </childnode>
        <childnode refid="2386" relation="include">
        </childnode>
      </node>
      <node id="2350">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="2323" relation="include">
        </childnode>
        <childnode refid="2351" relation="include">
        </childnode>
        <childnode refid="2324" relation="include">
        </childnode>
        <childnode refid="2314" relation="include">
        </childnode>
        <childnode refid="2327" relation="include">
        </childnode>
        <childnode refid="2352" relation="include">
        </childnode>
        <childnode refid="2353" relation="include">
        </childnode>
        <childnode refid="2315" relation="include">
        </childnode>
        <childnode refid="2330" relation="include">
        </childnode>
        <childnode refid="2354" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
      </node>
      <node id="2308">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2309" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
        <childnode refid="2318" relation="include">
        </childnode>
        <childnode refid="2319" relation="include">
        </childnode>
        <childnode refid="2320" relation="include">
        </childnode>
        <childnode refid="2315" relation="include">
        </childnode>
      </node>
      <node id="2378">
        <label>ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="2300" relation="include">
        </childnode>
        <childnode refid="2348" relation="include">
        </childnode>
        <childnode refid="2377" relation="include">
        </childnode>
        <childnode refid="2371" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
        <childnode refid="2368" relation="include">
        </childnode>
        <childnode refid="2305" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
        <childnode refid="2340" relation="include">
        </childnode>
        <childnode refid="2310" relation="include">
        </childnode>
      </node>
      <node id="2368">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="2303" relation="include">
        </childnode>
        <childnode refid="2363" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
        <childnode refid="2369" relation="include">
        </childnode>
        <childnode refid="2366" relation="include">
        </childnode>
        <childnode refid="2370" relation="include">
        </childnode>
        <childnode refid="2365" relation="include">
        </childnode>
        <childnode refid="2332" relation="include">
        </childnode>
        <childnode refid="2306" relation="include">
        </childnode>
        <childnode refid="2348" relation="include">
        </childnode>
        <childnode refid="2371" relation="include">
        </childnode>
        <childnode refid="2309" relation="include">
        </childnode>
      </node>
      <node id="2311">
        <label>type_traits</label>
      </node>
      <node id="2371">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="2335" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2342" relation="include">
        </childnode>
      </node>
      <node id="2359">
        <label>cusparse.h</label>
      </node>
      <node id="2321">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="2322" relation="include">
        </childnode>
        <childnode refid="2323" relation="include">
        </childnode>
        <childnode refid="2313" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
        <childnode refid="2324" relation="include">
        </childnode>
        <childnode refid="2325" relation="include">
        </childnode>
        <childnode refid="2312" relation="include">
        </childnode>
        <childnode refid="2326" relation="include">
        </childnode>
        <childnode refid="2327" relation="include">
        </childnode>
        <childnode refid="2328" relation="include">
        </childnode>
        <childnode refid="2311" relation="include">
        </childnode>
        <childnode refid="2310" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
      </node>
      <node id="2323">
        <label>algorithm</label>
      </node>
      <node id="2360">
        <label>cudnn-wrapper.h</label>
        <link refid="cudnn-wrapper_8h_source"/>
        <childnode refid="2361" relation="include">
        </childnode>
      </node>
      <node id="2303">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="2304" relation="include">
        </childnode>
      </node>
      <node id="2325">
        <label>cstring</label>
      </node>
      <node id="2389">
        <label>cuda.h</label>
        <link refid="cuda_8h_source"/>
        <childnode refid="2317" relation="include">
        </childnode>
      </node>
      <node id="2327">
        <label>memory</label>
      </node>
      <node id="2312">
        <label>initializer_list</label>
      </node>
      <node id="2380">
        <label>ATen/Formatting.h</label>
        <link refid="_formatting_8h_source"/>
        <childnode refid="2342" relation="include">
        </childnode>
        <childnode refid="2305" relation="include">
        </childnode>
        <childnode refid="2363" relation="include">
        </childnode>
      </node>
      <node id="2390">
        <label>curand_kernel.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structcudnn_dropout_struct" prot="public">cudnnDropoutStruct</innerclass>
    <innerclass refid="structat_1_1native_1_1_descriptor_deleter" prot="public">at::native::DescriptorDeleter</innerclass>
    <innerclass refid="classat_1_1native_1_1_descriptor" prot="public">at::native::Descriptor</innerclass>
    <innerclass refid="classat_1_1native_1_1_tensor_descriptor" prot="public">at::native::TensorDescriptor</innerclass>
    <innerclass refid="classat_1_1native_1_1_filter_descriptor" prot="public">at::native::FilterDescriptor</innerclass>
    <innerclass refid="structat_1_1native_1_1_convolution_descriptor" prot="public">at::native::ConvolutionDescriptor</innerclass>
    <innerclass refid="structat_1_1native_1_1_spatial_transformer_descriptor" prot="public">at::native::SpatialTransformerDescriptor</innerclass>
    <innerclass refid="structat_1_1native_1_1_dropout_descriptor" prot="public">at::native::DropoutDescriptor</innerclass>
    <innerclass refid="structat_1_1native_1_1_r_n_n_descriptor" prot="public">at::native::RNNDescriptor</innerclass>
    <innerclass refid="unionat_1_1native_1_1_constant" prot="public">at::native::Constant</innerclass>
    <innernamespace refid="namespaceat">at</innernamespace>
    <innernamespace refid="namespaceat_1_1native">at::native</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/cuda/CUDAContext.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/cuda/Exceptions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cudnn-wrapper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/ATen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/TensorUtils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/cuda/ATenCUDAGeneral.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cuda.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CUDNN_VERSION<sp/>&lt;<sp/>7000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;curand_kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="17"><highlight class="comment">Note<sp/>[cuDNN<sp/>dropout<sp/>descriptor<sp/>initialization]</highlight></codeline>
<codeline lineno="18"><highlight class="comment">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">In<sp/>most<sp/>cases,<sp/>setting<sp/>descriptors<sp/>in<sp/>cuDNN<sp/>is<sp/>cheap<sp/>(e.g.,</highlight></codeline>
<codeline lineno="21"><highlight class="comment">cudnnSetTensorNdDescriptor).<sp/><sp/>However,<sp/>this<sp/>is<sp/>not<sp/>the<sp/>case<sp/>for</highlight></codeline>
<codeline lineno="22"><highlight class="comment">cudnnSetDropoutDescriptor:<sp/>in<sp/>cuDNN<sp/>6/7<sp/>(and<sp/>possibly<sp/>others)<sp/>it<sp/>does<sp/>an</highlight></codeline>
<codeline lineno="23"><highlight class="comment">expensive<sp/>precomputation<sp/>to<sp/>initialize<sp/>the<sp/>random<sp/>number<sp/>generator<sp/>states.<sp/><sp/>In</highlight></codeline>
<codeline lineno="24"><highlight class="comment">cuDNN<sp/>6,<sp/>this<sp/>is<sp/>the<sp/>ONLY<sp/>official<sp/>mechanism<sp/>to<sp/>initialize<sp/>a<sp/>dropout<sp/>descriptor,</highlight></codeline>
<codeline lineno="25"><highlight class="comment">which<sp/>means<sp/>that<sp/>law-abiding<sp/>clients<sp/>were<sp/>expected<sp/>to<sp/>generate<sp/>a<sp/>dropout</highlight></codeline>
<codeline lineno="26"><highlight class="comment">descriptor<sp/>once<sp/>and<sp/>cache<sp/>it.<sp/><sp/>However,<sp/>our<sp/>ATen<sp/>interface<sp/>is<sp/>(1)<sp/>stateless<sp/>(so</highlight></codeline>
<codeline lineno="27"><highlight class="comment">we<sp/>can&apos;t<sp/>cache<sp/>the<sp/>descriptors)<sp/>and<sp/>(2)<sp/>does<sp/>not<sp/>accept<sp/>arbitrary<sp/>user<sp/>types<sp/>in</highlight></codeline>
<codeline lineno="28"><highlight class="comment">its<sp/>interface<sp/>(so<sp/>we<sp/>can&apos;t<sp/>pass<sp/>the<sp/>descriptor<sp/>in).<sp/><sp/>This<sp/>puts<sp/>us<sp/>in<sp/>a<sp/>pickle.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment">In<sp/>cuDNN<sp/>7,<sp/>a<sp/>new<sp/>function,<sp/>cudnnRestoreDropoutDescriptor<sp/>was<sp/>added,<sp/>which</highlight></codeline>
<codeline lineno="31"><highlight class="comment">forgoes<sp/>the<sp/>expensive<sp/>initialization<sp/>process,<sp/>and<sp/>can<sp/>initialize<sp/>the</highlight></codeline>
<codeline lineno="32"><highlight class="comment">descriptor<sp/>with<sp/>a<sp/>pre-initialized<sp/>state<sp/>CUDA<sp/>tensor.<sp/><sp/>This<sp/>is<sp/>great,<sp/>because</highlight></codeline>
<codeline lineno="33"><highlight class="comment">it<sp/>means<sp/>we<sp/>can<sp/>simply<sp/>pass<sp/>in<sp/>the<sp/>state<sp/>tensor<sp/>and<sp/>then<sp/>initialize<sp/>the</highlight></codeline>
<codeline lineno="34"><highlight class="comment">descriptor<sp/>internally.<sp/><sp/>Unfortunately,<sp/>this<sp/>function<sp/>is<sp/>not<sp/>available<sp/>in</highlight></codeline>
<codeline lineno="35"><highlight class="comment">cuDNN<sp/>6.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">To<sp/>work<sp/>around<sp/>this,<sp/>we<sp/>break<sp/>the<sp/>cuDNN<sp/>abstraction<sp/>barrier,<sp/>and<sp/>have</highlight></codeline>
<codeline lineno="38"><highlight class="comment">the<sp/>struct<sp/>layout<sp/>of<sp/>the<sp/>underlaying<sp/>dropout<sp/>descriptor.<sp/><sp/>With<sp/>this<sp/>struct,</highlight></codeline>
<codeline lineno="39"><highlight class="comment">we<sp/>can<sp/>reimplement<sp/>cudnnRestoreDropoutDescriptor<sp/>from<sp/>scratch.<sp/>Great!</highlight></codeline>
<codeline lineno="40"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reverse<sp/>engineered<sp/>from<sp/>cuDNN<sp/>6,<sp/>see<sp/>Note<sp/>[cuDNN<sp/>dropout<sp/>descriptor<sp/>initialization]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structcudnn_dropout_struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcudnn_dropout_struct" kindref="compound">cudnnDropoutStruct</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dropout;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nstates;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>states;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">native<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Add<sp/>constructors<sp/>for<sp/>all<sp/>of<sp/>the<sp/>descriptors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataSize(cudnnDataType_t<sp/>dataType)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dataType)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_HALF:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_FLOAT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>stride<sp/>for<sp/>a<sp/>size-1<sp/>dimensions<sp/>is<sp/>not<sp/>uniquely<sp/>determined;<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fact,<sp/>it<sp/>can<sp/>be<sp/>anything<sp/>you<sp/>want,<sp/>because<sp/>the<sp/>fact<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tensor<sp/>is<sp/>size<sp/>1<sp/>at<sp/>this<sp/>dimension<sp/>means<sp/>that<sp/>you<sp/>will<sp/>never<sp/>actually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>try<sp/>advancing<sp/>your<sp/>pointer<sp/>by<sp/>this<sp/>stride.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>However,<sp/>CuDNN<sp/>has<sp/>a<sp/>much<sp/>more<sp/>stringent<sp/>requirement<sp/>on<sp/>strides:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>you<sp/>are<sp/>passing<sp/>a<sp/>contiguous<sp/>input,<sp/>it<sp/>better<sp/>be<sp/>the<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>the<sp/>stride<sp/>for<sp/>dim<sp/>i<sp/>is<sp/>the<sp/>product<sp/>of<sp/>the<sp/>sizes<sp/>of<sp/>dims</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>i+1<sp/>to<sp/>the<sp/>end.<sp/><sp/>This<sp/>stride<sp/>is<sp/>indeed<sp/>uniquely<sp/>determined.<sp/><sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>modifies<sp/>&apos;stride&apos;<sp/>in<sp/>place<sp/>so<sp/>this<sp/>invariant<sp/>holds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fixSizeOneDimStride(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*stride)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>int64_t<sp/>z<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>dim-1;<sp/>d<sp/>&gt;=<sp/>0;<sp/>d--)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size[d]<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stride[d]<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>*=<sp/>size[d];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>cudnnStatus_t<sp/>(*dtor)(T*)&gt;</highlight></codeline>
<codeline lineno="87" refid="structat_1_1native_1_1_descriptor_deleter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structat_1_1native_1_1_descriptor_deleter" kindref="compound">DescriptorDeleter</ref><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(T*<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(dtor(x));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>generic<sp/>class<sp/>for<sp/>wrapping<sp/>cuDNN<sp/>descriptor<sp/>types.<sp/><sp/>All<sp/>you<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>to<sp/>give<sp/>the<sp/>underlying<sp/>type<sp/>the<sp/>Descriptor_t<sp/>points<sp/>to<sp/>(usually,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>cudnnTensorDescriptor_t<sp/>it<sp/>points<sp/>to<sp/>cudnnTensorStruct),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>constructor<sp/>and<sp/>the<sp/>destructor.<sp/><sp/>Subclasses<sp/>are<sp/>responsible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>defining<sp/>a<sp/>set()<sp/>function<sp/>to<sp/>actually<sp/>set<sp/>the<sp/>descriptor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Descriptors<sp/>default<sp/>construct<sp/>to<sp/>a<sp/>nullptr,<sp/>and<sp/>have<sp/>a<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>initialized<sp/>the<sp/>first<sp/>time<sp/>you<sp/>call<sp/>set()<sp/>or<sp/>any<sp/>other<sp/>initializing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>cudnnStatus_t<sp/>(*ctor)(T**),<sp/>cudnnStatus_t<sp/>(*dtor)(T*)&gt;</highlight></codeline>
<codeline lineno="105" refid="classat_1_1native_1_1_descriptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AT_CUDA_API<sp/><ref refid="classat_1_1native_1_1_descriptor" kindref="compound">Descriptor</ref></highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Figure<sp/>out<sp/>why<sp/>const-correctness<sp/>doesn&apos;t<sp/>work<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>desc()<sp/>to<sp/>access<sp/>the<sp/>underlying<sp/>descriptor<sp/>pointer<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>read-only<sp/>fashion.<sp/><sp/>Most<sp/>client<sp/>code<sp/>should<sp/>use<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>descriptor<sp/>was<sp/>never<sp/>initialized,<sp/>this<sp/>will<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>nullptr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>T*<sp/>desc()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desc_.get();<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>T*<sp/>desc()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desc_.get();<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>mut_desc()<sp/>to<sp/>access<sp/>the<sp/>underlying<sp/>desciptor<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>you<sp/>intend<sp/>to<sp/>modify<sp/>what<sp/>it<sp/>points<sp/>to<sp/>(e.g.,<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cudnnSetFooDescriptor).<sp/><sp/>This<sp/>will<sp/>ensure<sp/>that<sp/>the<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>initialized.<sp/><sp/>Code<sp/>in<sp/>this<sp/>file<sp/>will<sp/>use<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>T*<sp/>mut_desc()<sp/>{<sp/>init();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desc_.get();<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init()<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>raw_desc;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(ctor(&amp;raw_desc));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>desc_.reset(raw_desc);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;T,<sp/>DescriptorDeleter&lt;T,<sp/>dtor&gt;&gt;<sp/>desc_;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classat_1_1native_1_1_tensor_descriptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AT_CUDA_API<sp/><ref refid="classat_1_1native_1_1_tensor_descriptor" kindref="compound">TensorDescriptor</ref></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classat_1_1native_1_1_descriptor" kindref="compound">Descriptor</ref>&lt;cudnnTensorStruct,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cudnnCreateTensorDescriptor,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cudnnDestroyTensorDescriptor&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="classat_1_1native_1_1_tensor_descriptor" kindref="compound">TensorDescriptor</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classat_1_1native_1_1_tensor_descriptor" kindref="compound">TensorDescriptor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref><sp/>&amp;t,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(t,<sp/>pad);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>[CuDNN<sp/>broadcast<sp/>padding]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pad<sp/>specifies<sp/>the<sp/>minimum<sp/>dimensionality<sp/>of<sp/>the<sp/>tensor<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>produce<sp/>(it<sp/>doesn&apos;t<sp/>have<sp/>anything<sp/>to<sp/>do<sp/>with,<sp/>e.g.,<sp/>convolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>padding).<sp/><sp/>If<sp/>&apos;t&apos;<sp/>is<sp/>lower-dimensional<sp/>than<sp/>&apos;pad&apos;,<sp/>the<sp/>remaining</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dimensions<sp/>(on<sp/>the<sp/>right)<sp/>are<sp/>padded<sp/>with<sp/>ones.<sp/><sp/>This<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>affect<sp/>the<sp/>underlying<sp/>data<sp/>layout.<sp/><sp/>This<sp/>is<sp/>particularly<sp/>useful<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dealing<sp/>with<sp/>a<sp/>pecularity<sp/>of<sp/>the<sp/>CuDNN<sp/>API,<sp/>which<sp/>is<sp/>that<sp/>broadcasting<sp/>in<sp/>CuDNN<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>done<sp/>in<sp/>two<sp/>steps:<sp/>first,<sp/>the<sp/>client<sp/>code<sp/>is<sp/>expected<sp/>to<sp/>pad<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(the<sp/>dimensions)<sp/>input<sp/>tensors<sp/>to<sp/>be<sp/>the<sp/>same<sp/>dimension<sp/>as<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>target<sp/>broadcast,<sp/>and<sp/>then<sp/>second,<sp/>CuDNN<sp/>takes<sp/>of<sp/>actually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>broadcasting<sp/>size<sp/>1<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref><sp/>&amp;t,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(cudnnDataType_t<sp/>dataType,<sp/><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref><sp/>sizes,<sp/><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref><sp/>strides,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pad<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(cudnnDataType_t<sp/>dataType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>fixSizeOneDimStride(dim,<sp/>size,<sp/>stride);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnSetTensorNdDescriptor(mut_desc(),<sp/>dataType,<sp/>dim,<sp/>size,<sp/>stride));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classat_1_1native_1_1_tensor_descriptor" kindref="compound">TensorDescriptor</ref>&amp;<sp/>d);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classat_1_1native_1_1_filter_descriptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classat_1_1native_1_1_filter_descriptor" kindref="compound">FilterDescriptor</ref></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classat_1_1native_1_1_descriptor" kindref="compound">Descriptor</ref>&lt;cudnnFilterStruct,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cudnnCreateFilterDescriptor,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cudnnDestroyFilterDescriptor&gt;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref><sp/>&amp;t,<sp/>int64_t<sp/>pad<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(cudnnDataType_t<sp/>dataType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnSetFilterNdDescriptor(mut_desc(),<sp/>dataType,<sp/>CUDNN_TENSOR_NCHW,<sp/>dim,<sp/>size));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal">};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="structat_1_1native_1_1_convolution_descriptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AT_CUDA_API<sp/><ref refid="structat_1_1native_1_1_convolution_descriptor" kindref="compound">ConvolutionDescriptor</ref></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classat_1_1native_1_1_descriptor" kindref="compound">Descriptor</ref>&lt;cudnnConvolutionStruct,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cudnnCreateConvolutionDescriptor,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cudnnDestroyConvolutionDescriptor&gt;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(cudnnDataType_t<sp/>dataType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>pad,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>stride,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>upscale<sp/></highlight><highlight class="comment">/*<sp/>aka<sp/>dilation<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>groups)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>cudnnDataType_t<sp/>mathType<sp/>=<sp/>dataType;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataType<sp/>==<sp/>CUDNN_DATA_HALF)<sp/>mathType<sp/>=<sp/>CUDNN_DATA_FLOAT;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnSetConvolutionNdDescriptor(mut_desc(),<sp/>dim,<sp/>pad,<sp/>stride,<sp/>upscale,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CUDNN_CROSS_CORRELATION,<sp/>mathType));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CUDNN_VERSION<sp/>&gt;=<sp/>7000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnSetConvolutionGroupCount(mut_desc(),<sp/>groups));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnSetConvolutionMathType(mut_desc(),<sp/>CUDNN_DEFAULT_MATH));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataType<sp/>==<sp/>CUDNN_DATA_HALF)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnSetConvolutionMathType(mut_desc(),<sp/>CUDNN_TENSOR_OP_MATH));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="structat_1_1native_1_1_spatial_transformer_descriptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AT_CUDA_API<sp/><ref refid="structat_1_1native_1_1_spatial_transformer_descriptor" kindref="compound">SpatialTransformerDescriptor</ref></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classat_1_1native_1_1_descriptor" kindref="compound">Descriptor</ref>&lt;cudnnSpatialTransformerStruct,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cudnnCreateSpatialTransformerDescriptor,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cudnnDestroySpatialTransformerDescriptor&gt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(cudnnDataType_t<sp/>dataType,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnSetSpatialTransformerNdDescriptor(mut_desc(),<sp/>CUDNN_SAMPLER_BILINEAR,<sp/>dataType,<sp/>dim,<sp/>size));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal">};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CUDNN_VERSION<sp/>&lt;<sp/>7000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>Note<sp/>[cuDNN<sp/>dropout<sp/>descriptor<sp/>initialization]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cudnnStatus_t<sp/>cudnnRestoreDropoutDescriptor(</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>cudnnDropoutDescriptor_t<sp/>dropoutDesc,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>cudnnHandle_t<sp/>handle,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dropout,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*states,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stateSizeInBytes,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seed)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>accurately<sp/>simulate<sp/>cuDNN&apos;s<sp/>behavior,<sp/>for<sp/>our<sp/>cuDNN<sp/>6<sp/>friends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>not<sp/>entirely<sp/>accurate<sp/>but<sp/>is<sp/>good<sp/>enough<sp/>to<sp/>catch<sp/>some<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>uses<sp/>which<sp/>would<sp/>not<sp/>be<sp/>compatible<sp/>in<sp/>cuDNN<sp/>7.<sp/><sp/>Feel<sp/>free<sp/>to<sp/>fix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>if<sp/>you<sp/>notice<sp/>something<sp/>is<sp/>wrong.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(states<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CUDNN_STATUS_INVALID_VALUE;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stateSizeInBytes<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CUDNN_STATUS_INVALID_VALUE;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>expectedStateSizeInBytes;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>size<sp/>will<sp/>differ<sp/>depending<sp/>on<sp/>size<sp/>of<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>cudnnDropoutGetStatesSize(handle,<sp/>&amp;expectedStateSizeInBytes);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>CUDNN_STATUS_SUCCESS)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expectedStateSizeInBytes<sp/>!=<sp/>stateSizeInBytes)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CUDNN_STATUS_INVALID_VALUE;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>dropoutDesc-&gt;dropout<sp/>=<sp/>dropout;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>dropoutDesc-&gt;nstates<sp/>=<sp/>(int)stateSizeInBytes/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(curandState_t);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>dropoutDesc-&gt;states<sp/>=<sp/>states;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CUDNN_STATUS_SUCCESS;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>CUDNN_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="structat_1_1native_1_1_dropout_descriptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AT_CUDA_API<sp/><ref refid="structat_1_1native_1_1_dropout_descriptor" kindref="compound">DropoutDescriptor</ref></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classat_1_1native_1_1_descriptor" kindref="compound">Descriptor</ref>&lt;cudnnDropoutStruct,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cudnnCreateDropoutDescriptor,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cudnnDestroyDropoutDescriptor&gt;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref><sp/>state;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>a<sp/>dropout<sp/>descriptor&apos;s<sp/>RNG<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING:<sp/>This<sp/>function<sp/>is<sp/>very<sp/>expensive,<sp/>avoid<sp/>calling<sp/>this<sp/>function!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>it<sp/>takes<sp/>a<sp/>Type<sp/>so<sp/>that<sp/>we<sp/>can<sp/>generate<sp/>a<sp/>Variable<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize_rng(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1_type" kindref="compound">Type</ref>&amp;<sp/>type,<sp/>cudnnHandle_t<sp/>handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dropout,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_ASSERTM(dropout<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;dropout<sp/>must<sp/>be<sp/>nonzero;<sp/>otherwise<sp/>call<sp/>set_no_dropout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>state_size;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnDropoutGetStatesSize(handle,<sp/>&amp;state_size));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_ASSERT(type.is_cuda());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_ASSERT(type.scalarType()<sp/>==<sp/>kByte);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>at::empty({</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(state_size)},<sp/>type);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnSetDropoutDescriptor(mut_desc(),<sp/>handle,<sp/>dropout,<sp/>state.data_ptr(),<sp/>state_size,<sp/>seed));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>a<sp/>dropout<sp/>descriptor<sp/>given<sp/>a<sp/>dropout<sp/>probability<sp/>and<sp/>existing<sp/>RNG<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>Note<sp/>[cuDNN<sp/>dropout<sp/>descriptor<sp/>initialization]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(cudnnHandle_t<sp/>handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dropout,<sp/><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref><sp/>state_)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_ASSERTM(dropout<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;dropout<sp/>must<sp/>be<sp/>nonzero;<sp/>otherwise<sp/>call<sp/>set_no_dropout&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>state_;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*state_ptr<sp/>=<sp/>state.data_ptr();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>state_size<sp/>=<sp/>state.size(0);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>The<sp/>seed<sp/>doesn&apos;t<sp/>actually<sp/>matter,<sp/>so<sp/>we<sp/>give<sp/>a<sp/>dummy<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnRestoreDropoutDescriptor(mut_desc(),<sp/>handle,<sp/>dropout,<sp/>state_ptr,<sp/>state_size,<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>seed<sp/>*/</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>a<sp/>dropout<sp/>descriptor<sp/>corresponding<sp/>to<sp/>no<sp/>dropout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>Note<sp/>[cuDNN<sp/>dropout<sp/>descriptor<sp/>initialization]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_no_dropout(cudnnHandle_t<sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>seed<sp/>doesn&apos;t<sp/>matter<sp/>when<sp/>dropout<sp/>=<sp/>0,<sp/>because<sp/>no<sp/>random<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialization<sp/>actually<sp/>takes<sp/>place<sp/>when<sp/>there<sp/>is<sp/>no<sp/>dropout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>Empirically,<sp/>cudnnSetDropoutDescriptor<sp/>is<sp/>cheap<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dropoot<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnSetDropoutDescriptor(mut_desc(),<sp/>handle,<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>dropout<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>state_size<sp/>*/</highlight><highlight class="normal">,<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>seed<sp/>*/</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal">};</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="structat_1_1native_1_1_r_n_n_descriptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AT_CUDA_API<sp/><ref refid="structat_1_1native_1_1_r_n_n_descriptor" kindref="compound">RNNDescriptor</ref></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classat_1_1native_1_1_descriptor" kindref="compound">Descriptor</ref>&lt;cudnnRNNStruct,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cudnnCreateRNNDescriptor,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cudnnDestroyRNNDescriptor&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1native_1_1_dropout_descriptor" kindref="compound">DropoutDescriptor</ref><sp/>dropout_desc_;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(cudnnHandle_t<sp/>handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hidden_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_layers,<sp/><ref refid="structat_1_1native_1_1_dropout_descriptor" kindref="compound">DropoutDescriptor</ref>&amp;&amp;<sp/>dropout_desc,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnnRNNInputMode_t<sp/>input_mode,<sp/>cudnnDirectionMode_t<sp/>bidirectional,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnnRNNMode_t<sp/>mode,<sp/>cudnnDataType_t<sp/>datatype)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>dropout_desc_<sp/>=<sp/>std::move(dropout_desc);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnSetRNNDescriptor_v6(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mut_desc(),</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hidden_size,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_layers,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dropout_desc_.desc(),</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_mode,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidirectional,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CUDNN_RNN_ALGO_STANDARD,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datatype));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CUDNN_VERSION<sp/>&gt;=<sp/>7000<sp/>&amp;&amp;<sp/>CUDA_VERSION<sp/>&gt;=<sp/>9000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaDeviceProp*<sp/>prop<sp/>=<sp/>at::cuda::getCurrentDeviceProperties();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prop-&gt;major<sp/>&gt;=<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datatype<sp/>==<sp/>CUDNN_DATA_HALF)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnnSetRNNMatrixMathType(mut_desc(),<sp/>CUDNN_TENSOR_OP_MATH);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Technically,<sp/>as<sp/>the<sp/>default<sp/>it&apos;s<sp/>not<sp/>necessary<sp/>to<sp/>explicitly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnnSetRNNMatrixMathType(mut_desc(),<sp/>CUDNN_DEFAULT_MATH);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal">};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="unionat_1_1native_1_1_constant" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionat_1_1native_1_1_constant" kindref="compound">Constant</ref></highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="unionat_1_1native_1_1_constant" kindref="compound">Constant</ref>(cudnnDataType_t<sp/>dataType,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataType<sp/>==<sp/>CUDNN_DATA_HALF<sp/>||<sp/>dataType<sp/>==<sp/>CUDNN_DATA_FLOAT)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>(float)<sp/>value;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal">};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">}}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.h"/>
  </compounddef>
</doxygen>
