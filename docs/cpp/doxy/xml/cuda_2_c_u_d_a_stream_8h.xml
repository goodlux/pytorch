<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="cuda_2_c_u_d_a_stream_8h" kind="file" language="C++">
    <compoundname>CUDAStream.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">utility</includes>
    <includes local="yes">cuda_runtime_api.h</includes>
    <includes refid="_a_ten_general_8h" local="no">ATen/ATenGeneral.h</includes>
    <includedby refid="_c_u_d_a_context_8h" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/CUDAContext.h</includedby>
    <includedby refid="cuda_2_c_u_d_a_stream_8cpp" local="yes">/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/CUDAStream.cpp</includedby>
    <incdepgraph>
      <node id="1842">
        <label>cstdint</label>
      </node>
      <node id="1845">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="1843">
        <label>utility</label>
      </node>
      <node id="1841">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/CUDAStream.h</label>
        <link refid="cuda_2_c_u_d_a_stream_8h"/>
        <childnode refid="1842" relation="include">
        </childnode>
        <childnode refid="1843" relation="include">
        </childnode>
        <childnode refid="1844" relation="include">
        </childnode>
        <childnode refid="1845" relation="include">
        </childnode>
      </node>
      <node id="1844">
        <label>cuda_runtime_api.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1847">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/CUDAContext.h</label>
        <link refid="_c_u_d_a_context_8h_source"/>
        <childnode refid="1848" relation="include">
        </childnode>
        <childnode refid="1849" relation="include">
        </childnode>
        <childnode refid="1850" relation="include">
        </childnode>
      </node>
      <node id="1848">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/CUDAGuard.h</label>
        <link refid="cuda_2_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="1850">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cuda/CuFFTPlanCache.h</label>
        <link refid="_cu_f_f_t_plan_cache_8h_source"/>
      </node>
      <node id="1849">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cudnn/Descriptors.h</label>
        <link refid="cudnn_2_descriptors_8h_source"/>
      </node>
      <node id="1846">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/CUDAStream.h</label>
        <link refid="cuda_2_c_u_d_a_stream_8h"/>
        <childnode refid="1847" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structat_1_1cuda_1_1_c_u_d_a_stream" prot="public">at::cuda::CUDAStream</innerclass>
    <innernamespace refid="namespaceat">at</innernamespace>
    <innernamespace refid="namespaceat_1_1cuda">at::cuda</innernamespace>
    <innernamespace refid="namespaceat_1_1cuda_1_1detail">at::cuda::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cuda_runtime_api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/ATenGeneral.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>A<sp/>CUDA<sp/>stream<sp/>interface<sp/>with<sp/>no<sp/>CUDA<sp/>build<sp/>dependency.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>Includes<sp/>the<sp/>CUDAStream<sp/>RAII<sp/>class<sp/>and<sp/>a<sp/>pointer-based<sp/>stream<sp/>API.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/>The<sp/>ATen<sp/>Context<sp/>interface<sp/>should<sp/>be<sp/>preferred<sp/>when<sp/>working<sp/>with<sp/>streams.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward-declares<sp/>internals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cuda<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pointer-based<sp/>API<sp/>(for<sp/>internal<sp/>use)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>ATen/Context<sp/>is<sp/>preferred<sp/>to<sp/>work<sp/>with<sp/>streams<sp/>safely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">AT_API<sp/><ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>CUDAStream_getDefaultStreamOnDevice(int64_t<sp/><ref refid="namespaceat_1a7b0b366b175733b3ff709ceed5058911" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">AT_API<sp/><ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>CUDAStream_getDefaultStream();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">AT_API<sp/><ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>CUDAStream_createAndRetainWithOptions(int32_t<sp/>flags,<sp/>int32_t<sp/>priority);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">AT_API<sp/><ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>CUDAStream_getAndRetainCurrentStreamOnDevice(int64_t<sp/><ref refid="namespaceat_1a7b0b366b175733b3ff709ceed5058911" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">AT_API<sp/><ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>CUDAStream_getAndRetainCurrentStream();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>these<sp/>Unsafe<sp/>gets<sp/>should<sp/>NEVER<sp/>be<sp/>used<sp/>and<sp/>are<sp/>only<sp/>here<sp/>for<sp/>legacy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>purposes.<sp/>Once<sp/>those<sp/>uses<sp/>are<sp/>gone<sp/>they<sp/>should<sp/>be<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">AT_API<sp/><ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>CUDAStream_getCurrentStreamOnDeviceUnsafe(int64_t<sp/><ref refid="namespaceat_1a7b0b366b175733b3ff709ceed5058911" kindref="member">device</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">AT_API<sp/><ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>CUDAStream_getCurrentStreamUnsafe();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CUDAStream_setStreamOnDevice(int64_t<sp/><ref refid="namespaceat_1a7b0b366b175733b3ff709ceed5058911" kindref="member">device</ref>,<sp/><ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>internals);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CUDAStream_uncheckedSetStreamOnDevice(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="namespaceat_1a7b0b366b175733b3ff709ceed5058911" kindref="member">device</ref>,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>internals);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CUDAStream_setStream(<ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>internals);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">AT_API<sp/>cudaStream_t<sp/>CUDAStream_stream(<ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">AT_API<sp/>int64_t<sp/>CUDAStream_device(<ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CUDAStream_retain(<ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CUDAStream_free(<ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*&amp;);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">AT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CUDAStream_uncheckedFree(<ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*&amp;);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RAII<sp/>for<sp/>a<sp/>CUDA<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allows<sp/>use<sp/>as<sp/>a<sp/>cudaStream_t,<sp/>copying,<sp/>moving,<sp/>and<sp/>metadata<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structat_1_1cuda_1_1_c_u_d_a_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structat_1_1cuda_1_1_c_u_d_a_stream" kindref="compound">CUDAStream</ref><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int32_t<sp/>DEFAULT_FLAGS<sp/>=<sp/>cudaStreamNonBlocking;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>int32_t<sp/>DEFAULT_PRIORITY<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1cuda_1_1_c_u_d_a_stream" kindref="compound">CUDAStream</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>implicit<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="structat_1_1cuda_1_1_c_u_d_a_stream" kindref="compound">CUDAStream</ref>(<ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>internals,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retain<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>internals_{internals}<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retain)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::CUDAStream_retain(internals_);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>~<ref refid="structat_1_1cuda_1_1_c_u_d_a_stream" kindref="compound">CUDAStream</ref>()<sp/>{<sp/>detail::CUDAStream_uncheckedFree(internals_);<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>AT_API<sp/><ref refid="structat_1_1cuda_1_1_c_u_d_a_stream" kindref="compound">CUDAStream</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1cuda_1_1_c_u_d_a_stream" kindref="compound">CUDAStream</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>AT_API<sp/><ref refid="structat_1_1cuda_1_1_c_u_d_a_stream" kindref="compound">CUDAStream</ref>(<ref refid="structat_1_1cuda_1_1_c_u_d_a_stream" kindref="compound">CUDAStream</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assignment<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="structat_1_1cuda_1_1_c_u_d_a_stream" kindref="compound">CUDAStream</ref>&amp;<sp/>operator=(<ref refid="structat_1_1cuda_1_1_c_u_d_a_stream" kindref="compound">CUDAStream</ref><sp/>other)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(internals_,<sp/>other.internals_);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>CUDAStream<sp/>is<sp/>not<sp/>null.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internals_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Implicit<sp/>conversion<sp/>to<sp/>cudaStream_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>cudaStream_t()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::CUDAStream_stream(internals_);<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Less<sp/>than<sp/>operator<sp/>(to<sp/>allow<sp/>use<sp/>in<sp/>sets)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1cuda_1_1_c_u_d_a_stream" kindref="compound">CUDAStream</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structat_1_1cuda_1_1_c_u_d_a_stream" kindref="compound">CUDAStream</ref>&amp;<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left.internals_<sp/>&lt;<sp/>right.internals_;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>int64_t<sp/>device()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::CUDAStream_device(internals_);<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>cudaStream_t<sp/>stream()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::CUDAStream_stream(internals_);<sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>internals()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>internals_;<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="struct_c_u_d_a_stream_internals" kindref="compound">CUDAStreamInternals</ref>*<sp/>internals_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cuda</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>at</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/cuda/CUDAStream.h"/>
  </compounddef>
</doxygen>
