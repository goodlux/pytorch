<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_undefined_type_8cpp" kind="file" language="C++">
    <compoundname>UndefinedType.cpp</compoundname>
    <includes refid="_undefined_type_8h" local="yes">ATen/UndefinedType.h</includes>
    <includes refid="_error_8h" local="yes">ATen/Error.h</includes>
    <incdepgraph>
      <node id="13803">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="13804" relation="include">
        </childnode>
        <childnode refid="13805" relation="include">
        </childnode>
        <childnode refid="13806" relation="include">
        </childnode>
        <childnode refid="13807" relation="include">
        </childnode>
        <childnode refid="13808" relation="include">
        </childnode>
        <childnode refid="13809" relation="include">
        </childnode>
        <childnode refid="13810" relation="include">
        </childnode>
      </node>
      <node id="13842">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="13802" relation="include">
        </childnode>
        <childnode refid="13829" relation="include">
        </childnode>
        <childnode refid="13811" relation="include">
        </childnode>
        <childnode refid="13834" relation="include">
        </childnode>
        <childnode refid="13809" relation="include">
        </childnode>
        <childnode refid="13808" relation="include">
        </childnode>
      </node>
      <node id="13839">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="13840" relation="include">
        </childnode>
        <childnode refid="13802" relation="include">
        </childnode>
        <childnode refid="13798" relation="include">
        </childnode>
        <childnode refid="13844" relation="include">
        </childnode>
        <childnode refid="13811" relation="include">
        </childnode>
        <childnode refid="13808" relation="include">
        </childnode>
        <childnode refid="13821" relation="include">
        </childnode>
      </node>
      <node id="13827">
        <label>atomic</label>
      </node>
      <node id="13808">
        <label>functional</label>
      </node>
      <node id="13848">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="13811" relation="include">
        </childnode>
        <childnode refid="13809" relation="include">
        </childnode>
        <childnode refid="13837" relation="include">
        </childnode>
        <childnode refid="13796" relation="include">
        </childnode>
      </node>
      <node id="13829">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="13801" relation="include">
        </childnode>
        <childnode refid="13796" relation="include">
        </childnode>
        <childnode refid="13830" relation="include">
        </childnode>
        <childnode refid="13832" relation="include">
        </childnode>
        <childnode refid="13836" relation="include">
        </childnode>
      </node>
      <node id="13831">
        <label>limits</label>
      </node>
      <node id="13820">
        <label>iterator</label>
      </node>
      <node id="13800">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="13796" relation="include">
        </childnode>
        <childnode refid="13801" relation="include">
        </childnode>
        <childnode refid="13802" relation="include">
        </childnode>
        <childnode refid="13825" relation="include">
        </childnode>
        <childnode refid="13817" relation="include">
        </childnode>
        <childnode refid="13814" relation="include">
        </childnode>
        <childnode refid="13837" relation="include">
        </childnode>
        <childnode refid="13838" relation="include">
        </childnode>
      </node>
      <node id="13832">
        <label>cstdint</label>
      </node>
      <node id="13799">
        <label>stdint.h</label>
      </node>
      <node id="13833">
        <label>cmath</label>
      </node>
      <node id="13807">
        <label>cassert</label>
      </node>
      <node id="13795">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="13796" relation="include">
        </childnode>
        <childnode refid="13797" relation="include">
        </childnode>
        <childnode refid="13798" relation="include">
        </childnode>
        <childnode refid="13794" relation="include">
        </childnode>
        <childnode refid="13800" relation="include">
        </childnode>
        <childnode refid="13802" relation="include">
        </childnode>
        <childnode refid="13839" relation="include">
        </childnode>
        <childnode refid="13849" relation="include">
        </childnode>
        <childnode refid="13821" relation="include">
        </childnode>
        <childnode refid="13846" relation="include">
        </childnode>
        <childnode refid="13832" relation="include">
        </childnode>
      </node>
      <node id="13835">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="13796" relation="include">
        </childnode>
        <childnode refid="13819" relation="include">
        </childnode>
        <childnode refid="13831" relation="include">
        </childnode>
      </node>
      <node id="13810">
        <label>stdexcept</label>
      </node>
      <node id="13838">
        <label>numeric</label>
      </node>
      <node id="13826">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="13827" relation="include">
        </childnode>
        <childnode refid="13821" relation="include">
        </childnode>
        <childnode refid="13828" relation="include">
        </childnode>
        <childnode refid="13829" relation="include">
        </childnode>
        <childnode refid="13803" relation="include">
        </childnode>
      </node>
      <node id="13830">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="13796" relation="include">
        </childnode>
        <childnode refid="13831" relation="include">
        </childnode>
        <childnode refid="13809" relation="include">
        </childnode>
        <childnode refid="13832" relation="include">
        </childnode>
        <childnode refid="13810" relation="include">
        </childnode>
        <childnode refid="13804" relation="include">
        </childnode>
        <childnode refid="13833" relation="include">
        </childnode>
        <childnode refid="13834" relation="include">
        </childnode>
        <childnode refid="13835" relation="include">
        </childnode>
      </node>
      <node id="13828">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="13827" relation="include">
        </childnode>
      </node>
      <node id="13809">
        <label>string</label>
      </node>
      <node id="13792">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/UndefinedType.cpp</label>
        <link refid="_undefined_type_8cpp"/>
        <childnode refid="13793" relation="include">
        </childnode>
        <childnode refid="13802" relation="include">
        </childnode>
      </node>
      <node id="13840">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="13821" relation="include">
        </childnode>
        <childnode refid="13841" relation="include">
        </childnode>
        <childnode refid="13802" relation="include">
        </childnode>
        <childnode refid="13828" relation="include">
        </childnode>
        <childnode refid="13842" relation="include">
        </childnode>
        <childnode refid="13843" relation="include">
        </childnode>
      </node>
      <node id="13849">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="13812">
        <label>exception</label>
      </node>
      <node id="13841">
        <label>stddef.h</label>
      </node>
      <node id="13825">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="13826" relation="include">
        </childnode>
      </node>
      <node id="13816">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="13811" relation="include">
        </childnode>
      </node>
      <node id="13813">
        <label>ostream</label>
      </node>
      <node id="13797">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="13796" relation="include">
        </childnode>
      </node>
      <node id="13794">
        <label>ATen/Type.h</label>
      </node>
      <node id="13801">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="13802" relation="include">
        </childnode>
        <childnode refid="13815" relation="include">
        </childnode>
        <childnode refid="13823" relation="include">
        </childnode>
        <childnode refid="13820" relation="include">
        </childnode>
        <childnode refid="13824" relation="include">
        </childnode>
      </node>
      <node id="13850">
        <label>ATen/CheckGenerator.h</label>
        <link refid="_check_generator_8h_source"/>
        <childnode refid="13802" relation="include">
        </childnode>
        <childnode refid="13798" relation="include">
        </childnode>
        <childnode refid="13800" relation="include">
        </childnode>
      </node>
      <node id="13796">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="13837">
        <label>typeinfo</label>
      </node>
      <node id="13845">
        <label>cstdio</label>
      </node>
      <node id="13843">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="13821" relation="include">
        </childnode>
        <childnode refid="13796" relation="include">
        </childnode>
      </node>
      <node id="13824">
        <label>vector</label>
      </node>
      <node id="13822">
        <label>new</label>
      </node>
      <node id="13804">
        <label>utility</label>
      </node>
      <node id="13823">
        <label>array</label>
      </node>
      <node id="13814">
        <label>sstream</label>
      </node>
      <node id="13834">
        <label>iosfwd</label>
      </node>
      <node id="13818">
        <label>cstdlib</label>
      </node>
      <node id="13836">
        <label>iostream</label>
      </node>
      <node id="13811">
        <label>cstddef</label>
      </node>
      <node id="13847">
        <label>unordered_map</label>
      </node>
      <node id="13846">
        <label>mutex</label>
      </node>
      <node id="13844">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="13817" relation="include">
        </childnode>
        <childnode refid="13845" relation="include">
        </childnode>
        <childnode refid="13818" relation="include">
        </childnode>
        <childnode refid="13808" relation="include">
        </childnode>
        <childnode refid="13821" relation="include">
        </childnode>
        <childnode refid="13846" relation="include">
        </childnode>
        <childnode refid="13847" relation="include">
        </childnode>
        <childnode refid="13809" relation="include">
        </childnode>
        <childnode refid="13824" relation="include">
        </childnode>
        <childnode refid="13848" relation="include">
        </childnode>
        <childnode refid="13796" relation="include">
        </childnode>
      </node>
      <node id="13802">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="13796" relation="include">
        </childnode>
        <childnode refid="13803" relation="include">
        </childnode>
        <childnode refid="13811" relation="include">
        </childnode>
        <childnode refid="13812" relation="include">
        </childnode>
        <childnode refid="13813" relation="include">
        </childnode>
        <childnode refid="13814" relation="include">
        </childnode>
        <childnode refid="13809" relation="include">
        </childnode>
      </node>
      <node id="13805">
        <label>type_traits</label>
      </node>
      <node id="13793">
        <label>ATen/UndefinedType.h</label>
        <link refid="_undefined_type_8h_source"/>
        <childnode refid="13794" relation="include">
        </childnode>
        <childnode refid="13795" relation="include">
        </childnode>
        <childnode refid="13850" relation="include">
        </childnode>
      </node>
      <node id="13815">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="13816" relation="include">
        </childnode>
        <childnode refid="13817" relation="include">
        </childnode>
        <childnode refid="13807" relation="include">
        </childnode>
        <childnode refid="13811" relation="include">
        </childnode>
        <childnode refid="13818" relation="include">
        </childnode>
        <childnode refid="13819" relation="include">
        </childnode>
        <childnode refid="13806" relation="include">
        </childnode>
        <childnode refid="13820" relation="include">
        </childnode>
        <childnode refid="13821" relation="include">
        </childnode>
        <childnode refid="13822" relation="include">
        </childnode>
        <childnode refid="13805" relation="include">
        </childnode>
        <childnode refid="13804" relation="include">
        </childnode>
        <childnode refid="13796" relation="include">
        </childnode>
      </node>
      <node id="13817">
        <label>algorithm</label>
      </node>
      <node id="13798">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="13799" relation="include">
        </childnode>
      </node>
      <node id="13819">
        <label>cstring</label>
      </node>
      <node id="13821">
        <label>memory</label>
      </node>
      <node id="13806">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceat">at</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ATen/UndefinedType.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">UndefinedType::UndefinedType(Context*<sp/>context)</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Type(context,<sp/></highlight><highlight class="comment">/*is_variable=*/</highlight><highlight class="normal">false,<sp/></highlight><highlight class="comment">/*is_undefined=*/</highlight><highlight class="normal">true)<sp/>{}</highlight></codeline>
<codeline lineno="8"><highlight class="normal">ScalarType<sp/>UndefinedType::scalarType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScalarType::Undefined;</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal">Backend<sp/>UndefinedType::backend()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Backend::Undefined;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UndefinedType::is_cuda()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UndefinedType::is_sparse()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UndefinedType::is_distributed()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">std::unique_ptr&lt;Storage&gt;<sp/>UndefinedType::storage()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;storage<sp/>not<sp/>defined<sp/>for<sp/>UndefinedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">std::unique_ptr&lt;Storage&gt;<sp/>UndefinedType::storage(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;storage(size_t)<sp/>not<sp/>defined<sp/>for<sp/>UndefinedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal">std::unique_ptr&lt;Storage&gt;<sp/>UndefinedType::storageFromBlob(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/>int64_t<sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&gt;<sp/>&amp;<sp/>deleter)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;storageFromBlob<sp/>not<sp/>defined<sp/>for<sp/>UndefinedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">std::unique_ptr&lt;Storage&gt;<sp/>UndefinedType::unsafeStorageFromTH(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>th_pointer,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retain)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;unsafeStorageFromTH<sp/>not<sp/>defined<sp/>for<sp/>UndefinedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">std::unique_ptr&lt;Storage&gt;<sp/>UndefinedType::storageWithAllocator(int64_t<sp/>size,<sp/>Allocator*<sp/>allocator)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;storageWithAllocator<sp/>not<sp/>defined<sp/>for<sp/>UndefinedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">Tensor<sp/>UndefinedType::unsafeTensorFromTH(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>th_pointer,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retain)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;unsafeTensorFromTH<sp/>not<sp/>defined<sp/>for<sp/>UndefinedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">std::unique_ptr&lt;Generator&gt;<sp/>UndefinedType::generator()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;generator<sp/>not<sp/>defined<sp/>for<sp/>UndefinedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>UndefinedType::toString()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UndefinedType::typeString();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">TypeID<sp/>UndefinedType::ID()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TypeID::Undefined;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>UndefinedType::elementSizeInBytes()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;elementSizeInBytes<sp/>not<sp/>defined<sp/>for<sp/>UndefinedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">Type<sp/>&amp;<sp/>UndefinedType::toBackend(Backend<sp/>b)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>Backend::Undefined)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Type::toBackend(b);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;toBackend<sp/>not<sp/>implemented<sp/>for<sp/>UndefinedType<sp/>to<sp/>non-UndefinedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">Type<sp/>&amp;<sp/>UndefinedType::toScalarType(ScalarType<sp/>s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>==<sp/>ScalarType::Undefined)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Type::toScalarType(s);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;toScalarType<sp/>not<sp/>implemented<sp/>for<sp/>UndefinedType<sp/>to<sp/>non-UndefinedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>UndefinedType::typeString()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;UndefinedType&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">Tensor<sp/>&amp;<sp/>UndefinedType::s_copy_(Tensor<sp/>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor<sp/>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>non_blocking)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;s_copy<sp/>not<sp/>defined<sp/>for<sp/>UndefinedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">Tensor<sp/>&amp;<sp/>UndefinedType::_s_copy_from(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor<sp/>&amp;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>Tensor<sp/>&amp;<sp/>dst,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>non_blocking)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;_s_copy_from<sp/>not<sp/>defined<sp/>for<sp/>UndefinedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/UndefinedType.cpp"/>
  </compounddef>
</doxygen>
