<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structstd_1_1hash_3_01at_1_1optional_3_01_t_01_6_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>std::hash&lt; at::optional&lt; T &amp; &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structstd_1_1hash_3_01at_1_1optional_3_01_t_01_6_01_4_01_4_1a1d47840e802d092126cd6231c82545d7" prot="public" static="no">
        <type>hash&lt; T &gt;::result_type</type>
        <definition>typedef hash&lt;T&gt;::result_type std::hash&lt; at::optional&lt; T &amp; &gt; &gt;::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="972" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="972" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structstd_1_1hash_3_01at_1_1optional_3_01_t_01_6_01_4_01_4_1a3cf53e8c8ba9eee737fb4ef067d1fdba" prot="public" static="no">
        <type><ref refid="classat_1_1optional" kindref="compound">at::optional</ref>&lt; T &amp; &gt;</type>
        <definition>typedef at::optional&lt;T&amp;&gt; std::hash&lt; at::optional&lt; T &amp; &gt; &gt;::argument_type</definition>
        <argsstring></argsstring>
        <name>argument_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="973" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="973" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structstd_1_1hash_3_01at_1_1optional_3_01_t_01_6_01_4_01_4_1aea1ee0c4ce5141033ee45dc2f74d6528" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr result_type</type>
        <definition>constexpr result_type std::hash&lt; at::optional&lt; T &amp; &gt; &gt;::operator()</definition>
        <argsstring>(argument_type const &amp;arg) const</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">argument_type</ref> const &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="975" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="975" bodyend="977"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="971" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="970" bodyend="978"/>
    <listofallmembers>
      <member refid="structstd_1_1hash_3_01at_1_1optional_3_01_t_01_6_01_4_01_4_1a3cf53e8c8ba9eee737fb4ef067d1fdba" prot="public" virt="non-virtual"><scope>std::hash&lt; at::optional&lt; T &amp; &gt; &gt;</scope><name>argument_type</name></member>
      <member refid="structstd_1_1hash_3_01at_1_1optional_3_01_t_01_6_01_4_01_4_1aea1ee0c4ce5141033ee45dc2f74d6528" prot="public" virt="non-virtual"><scope>std::hash&lt; at::optional&lt; T &amp; &gt; &gt;</scope><name>operator()</name></member>
      <member refid="structstd_1_1hash_3_01at_1_1optional_3_01_t_01_6_01_4_01_4_1a1d47840e802d092126cd6231c82545d7" prot="public" virt="non-virtual"><scope>std::hash&lt; at::optional&lt; T &amp; &gt; &gt;</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
