<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_normalization_8cpp" kind="file" language="C++">
    <compoundname>Normalization.cpp</compoundname>
    <includes refid="_a_ten_8h" local="yes">ATen/ATen.h</includes>
    <includes local="yes">ATen/NativeFunctions.h</includes>
    <includes refid="_config_8h" local="yes">ATen/Config.h</includes>
    <includes refid="_c_u_d_a_hooks_interface_8h" local="yes">ATen/detail/CUDAHooksInterface.h</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="6983">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="6984" relation="include">
        </childnode>
        <childnode refid="6985" relation="include">
        </childnode>
        <childnode refid="6986" relation="include">
        </childnode>
        <childnode refid="6987" relation="include">
        </childnode>
        <childnode refid="6988" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
        <childnode refid="6990" relation="include">
        </childnode>
      </node>
      <node id="7029">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="6979" relation="include">
        </childnode>
        <childnode refid="6982" relation="include">
        </childnode>
        <childnode refid="7027" relation="include">
        </childnode>
        <childnode refid="7030" relation="include">
        </childnode>
        <childnode refid="6991" relation="include">
        </childnode>
        <childnode refid="6988" relation="include">
        </childnode>
        <childnode refid="6980" relation="include">
        </childnode>
      </node>
      <node id="6997">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="6982" relation="include">
        </childnode>
        <childnode refid="6998" relation="include">
        </childnode>
        <childnode refid="6991" relation="include">
        </childnode>
        <childnode refid="7013" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
        <childnode refid="6988" relation="include">
        </childnode>
      </node>
      <node id="6996">
        <label>atomic</label>
      </node>
      <node id="6988">
        <label>functional</label>
      </node>
      <node id="7034">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="6991" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
        <childnode refid="7024" relation="include">
        </childnode>
        <childnode refid="6977" relation="include">
        </childnode>
      </node>
      <node id="6998">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="6999" relation="include">
        </childnode>
        <childnode refid="6977" relation="include">
        </childnode>
        <childnode refid="7009" relation="include">
        </childnode>
        <childnode refid="7011" relation="include">
        </childnode>
        <childnode refid="7015" relation="include">
        </childnode>
      </node>
      <node id="7010">
        <label>limits</label>
      </node>
      <node id="7018">
        <label>assert.h</label>
      </node>
      <node id="7023">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="6977" relation="include">
        </childnode>
        <childnode refid="6999" relation="include">
        </childnode>
        <childnode refid="6982" relation="include">
        </childnode>
        <childnode refid="7022" relation="include">
        </childnode>
        <childnode refid="7002" relation="include">
        </childnode>
        <childnode refid="6994" relation="include">
        </childnode>
        <childnode refid="7024" relation="include">
        </childnode>
        <childnode refid="7025" relation="include">
        </childnode>
      </node>
      <node id="7005">
        <label>iterator</label>
      </node>
      <node id="7017">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="7018" relation="include">
        </childnode>
        <childnode refid="7019" relation="include">
        </childnode>
        <childnode refid="6990" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
        <childnode refid="6984" relation="include">
        </childnode>
        <childnode refid="6977" relation="include">
        </childnode>
        <childnode refid="7009" relation="include">
        </childnode>
        <childnode refid="6998" relation="include">
        </childnode>
        <childnode refid="7020" relation="include">
        </childnode>
        <childnode refid="7023" relation="include">
        </childnode>
      </node>
      <node id="7037">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="7011">
        <label>cstdint</label>
      </node>
      <node id="7045">
        <label>ATen/Deprecated.h</label>
        <link refid="_deprecated_8h_source"/>
      </node>
      <node id="7019">
        <label>stdint.h</label>
      </node>
      <node id="7056">
        <label>ATen/CUDAGuard.h</label>
        <link refid="_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="7012">
        <label>cmath</label>
      </node>
      <node id="6987">
        <label>cassert</label>
      </node>
      <node id="7028">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="6977" relation="include">
        </childnode>
        <childnode refid="6978" relation="include">
        </childnode>
        <childnode refid="7027" relation="include">
        </childnode>
        <childnode refid="7026" relation="include">
        </childnode>
        <childnode refid="7023" relation="include">
        </childnode>
        <childnode refid="6982" relation="include">
        </childnode>
        <childnode refid="7029" relation="include">
        </childnode>
        <childnode refid="7035" relation="include">
        </childnode>
        <childnode refid="6980" relation="include">
        </childnode>
        <childnode refid="7032" relation="include">
        </childnode>
        <childnode refid="7011" relation="include">
        </childnode>
      </node>
      <node id="7014">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="6977" relation="include">
        </childnode>
        <childnode refid="7004" relation="include">
        </childnode>
        <childnode refid="7010" relation="include">
        </childnode>
      </node>
      <node id="6990">
        <label>stdexcept</label>
      </node>
      <node id="7051">
        <label>ATen/TensorOperators.h</label>
        <link refid="_tensor_operators_8h_source"/>
        <childnode refid="7017" relation="include">
        </childnode>
        <childnode refid="7038" relation="include">
        </childnode>
        <childnode refid="7026" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
        <childnode refid="6990" relation="include">
        </childnode>
      </node>
      <node id="7025">
        <label>numeric</label>
      </node>
      <node id="7021">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="6996" relation="include">
        </childnode>
        <childnode refid="6980" relation="include">
        </childnode>
        <childnode refid="6995" relation="include">
        </childnode>
        <childnode refid="6998" relation="include">
        </childnode>
        <childnode refid="6983" relation="include">
        </childnode>
      </node>
      <node id="7009">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="6977" relation="include">
        </childnode>
        <childnode refid="7010" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
        <childnode refid="7011" relation="include">
        </childnode>
        <childnode refid="6990" relation="include">
        </childnode>
        <childnode refid="6984" relation="include">
        </childnode>
        <childnode refid="7012" relation="include">
        </childnode>
        <childnode refid="7013" relation="include">
        </childnode>
        <childnode refid="7014" relation="include">
        </childnode>
      </node>
      <node id="6995">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="6996" relation="include">
        </childnode>
      </node>
      <node id="7020">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="7021" relation="include">
        </childnode>
        <childnode refid="7022" relation="include">
        </childnode>
      </node>
      <node id="6989">
        <label>string</label>
      </node>
      <node id="7054">
        <label>ATen/DimVector.h</label>
        <link refid="_dim_vector_8h_source"/>
        <childnode refid="7000" relation="include">
        </childnode>
        <childnode refid="7019" relation="include">
        </childnode>
      </node>
      <node id="7055">
        <label>ATen/OptionsGuard.h</label>
        <link refid="_options_guard_8h_source"/>
        <childnode refid="6997" relation="include">
        </childnode>
        <childnode refid="7041" relation="include">
        </childnode>
        <childnode refid="6998" relation="include">
        </childnode>
        <childnode refid="7048" relation="include">
        </childnode>
        <childnode refid="6983" relation="include">
        </childnode>
      </node>
      <node id="6975">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Normalization.cpp</label>
        <link refid="_normalization_8cpp"/>
        <childnode refid="6976" relation="include">
        </childnode>
        <childnode refid="7046" relation="include">
        </childnode>
        <childnode refid="7057" relation="include">
        </childnode>
        <childnode refid="7029" relation="include">
        </childnode>
        <childnode refid="7008" relation="include">
        </childnode>
      </node>
      <node id="7057">
        <label>ATen/Config.h</label>
        <link refid="_config_8h_source"/>
      </node>
      <node id="6979">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="6980" relation="include">
        </childnode>
        <childnode refid="6981" relation="include">
        </childnode>
        <childnode refid="6982" relation="include">
        </childnode>
        <childnode refid="6995" relation="include">
        </childnode>
        <childnode refid="6997" relation="include">
        </childnode>
        <childnode refid="7016" relation="include">
        </childnode>
      </node>
      <node id="7035">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="7047">
        <label>ATen/DeviceGuard.h</label>
        <link refid="_device_guard_8h_source"/>
        <childnode refid="6997" relation="include">
        </childnode>
        <childnode refid="6982" relation="include">
        </childnode>
        <childnode refid="6998" relation="include">
        </childnode>
        <childnode refid="7038" relation="include">
        </childnode>
        <childnode refid="7029" relation="include">
        </childnode>
        <childnode refid="6991" relation="include">
        </childnode>
      </node>
      <node id="6992">
        <label>exception</label>
      </node>
      <node id="6981">
        <label>stddef.h</label>
      </node>
      <node id="7022">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="7021" relation="include">
        </childnode>
      </node>
      <node id="7053">
        <label>ATen/Dispatch.h</label>
        <link refid="_dispatch_8h_source"/>
        <childnode refid="6982" relation="include">
        </childnode>
        <childnode refid="7009" relation="include">
        </childnode>
        <childnode refid="7026" relation="include">
        </childnode>
      </node>
      <node id="7001">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="6991" relation="include">
        </childnode>
      </node>
      <node id="7036">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="7017" relation="include">
        </childnode>
        <childnode refid="7037" relation="include">
        </childnode>
      </node>
      <node id="6993">
        <label>ostream</label>
      </node>
      <node id="6978">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="6977" relation="include">
        </childnode>
      </node>
      <node id="7026">
        <label>ATen/Type.h</label>
      </node>
      <node id="6999">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="6982" relation="include">
        </childnode>
        <childnode refid="7000" relation="include">
        </childnode>
        <childnode refid="7007" relation="include">
        </childnode>
        <childnode refid="7005" relation="include">
        </childnode>
        <childnode refid="7008" relation="include">
        </childnode>
      </node>
      <node id="7042">
        <label>ATen/TensorGeometry.h</label>
        <link refid="_tensor_geometry_8h_source"/>
        <childnode refid="7026" relation="include">
        </childnode>
        <childnode refid="7043" relation="include">
        </childnode>
      </node>
      <node id="7039">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="6977">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="7043">
        <label>ATen/WrapDimUtils.h</label>
        <link refid="_wrap_dim_utils_8h_source"/>
        <childnode refid="7021" relation="include">
        </childnode>
        <childnode refid="6994" relation="include">
        </childnode>
      </node>
      <node id="7040">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="6991" relation="include">
        </childnode>
        <childnode refid="7019" relation="include">
        </childnode>
        <childnode refid="6998" relation="include">
        </childnode>
      </node>
      <node id="7024">
        <label>typeinfo</label>
      </node>
      <node id="7031">
        <label>cstdio</label>
      </node>
      <node id="7016">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="6980" relation="include">
        </childnode>
        <childnode refid="6977" relation="include">
        </childnode>
      </node>
      <node id="7008">
        <label>vector</label>
      </node>
      <node id="7052">
        <label>ATen/TensorMethods.h</label>
      </node>
      <node id="7049">
        <label>THNN/Reduction.h</label>
      </node>
      <node id="7006">
        <label>new</label>
      </node>
      <node id="6984">
        <label>utility</label>
      </node>
      <node id="7007">
        <label>array</label>
      </node>
      <node id="6994">
        <label>sstream</label>
      </node>
      <node id="7044">
        <label>ATen/Functions.h</label>
        <link refid="build_2aten_2src_2_a_ten_2_functions_8h_source"/>
        <childnode refid="7017" relation="include">
        </childnode>
        <childnode refid="7026" relation="include">
        </childnode>
        <childnode refid="7038" relation="include">
        </childnode>
        <childnode refid="7036" relation="include">
        </childnode>
        <childnode refid="7027" relation="include">
        </childnode>
        <childnode refid="7045" relation="include">
        </childnode>
        <childnode refid="7046" relation="include">
        </childnode>
        <childnode refid="7047" relation="include">
        </childnode>
        <childnode refid="7048" relation="include">
        </childnode>
        <childnode refid="7049" relation="include">
        </childnode>
      </node>
      <node id="7046">
        <label>ATen/NativeFunctions.h</label>
      </node>
      <node id="7013">
        <label>iosfwd</label>
      </node>
      <node id="7003">
        <label>cstdlib</label>
      </node>
      <node id="7015">
        <label>iostream</label>
      </node>
      <node id="6991">
        <label>cstddef</label>
      </node>
      <node id="7033">
        <label>unordered_map</label>
      </node>
      <node id="7032">
        <label>mutex</label>
      </node>
      <node id="6976">
        <label>ATen/ATen.h</label>
        <link refid="_a_ten_8h_source"/>
        <childnode refid="6977" relation="include">
        </childnode>
        <childnode refid="6978" relation="include">
        </childnode>
        <childnode refid="6979" relation="include">
        </childnode>
        <childnode refid="7017" relation="include">
        </childnode>
        <childnode refid="7026" relation="include">
        </childnode>
        <childnode refid="7027" relation="include">
        </childnode>
        <childnode refid="7028" relation="include">
        </childnode>
        <childnode refid="7036" relation="include">
        </childnode>
        <childnode refid="7038" relation="include">
        </childnode>
        <childnode refid="6997" relation="include">
        </childnode>
        <childnode refid="7042" relation="include">
        </childnode>
        <childnode refid="7044" relation="include">
        </childnode>
        <childnode refid="7050" relation="include">
        </childnode>
        <childnode refid="7051" relation="include">
        </childnode>
        <childnode refid="7052" relation="include">
        </childnode>
        <childnode refid="7053" relation="include">
        </childnode>
        <childnode refid="7054" relation="include">
        </childnode>
        <childnode refid="7047" relation="include">
        </childnode>
        <childnode refid="7048" relation="include">
        </childnode>
        <childnode refid="7041" relation="include">
        </childnode>
        <childnode refid="7055" relation="include">
        </childnode>
        <childnode refid="7056" relation="include">
        </childnode>
      </node>
      <node id="7030">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="7002" relation="include">
        </childnode>
        <childnode refid="7031" relation="include">
        </childnode>
        <childnode refid="7003" relation="include">
        </childnode>
        <childnode refid="6988" relation="include">
        </childnode>
        <childnode refid="6980" relation="include">
        </childnode>
        <childnode refid="7032" relation="include">
        </childnode>
        <childnode refid="7033" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
        <childnode refid="7008" relation="include">
        </childnode>
        <childnode refid="7034" relation="include">
        </childnode>
        <childnode refid="6977" relation="include">
        </childnode>
      </node>
      <node id="6982">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="6977" relation="include">
        </childnode>
        <childnode refid="6983" relation="include">
        </childnode>
        <childnode refid="6991" relation="include">
        </childnode>
        <childnode refid="6992" relation="include">
        </childnode>
        <childnode refid="6993" relation="include">
        </childnode>
        <childnode refid="6994" relation="include">
        </childnode>
        <childnode refid="6989" relation="include">
        </childnode>
      </node>
      <node id="7048">
        <label>ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="7028" relation="include">
        </childnode>
        <childnode refid="6997" relation="include">
        </childnode>
        <childnode refid="7047" relation="include">
        </childnode>
        <childnode refid="7041" relation="include">
        </childnode>
        <childnode refid="6998" relation="include">
        </childnode>
        <childnode refid="7038" relation="include">
        </childnode>
        <childnode refid="7026" relation="include">
        </childnode>
        <childnode refid="6991" relation="include">
        </childnode>
        <childnode refid="7013" relation="include">
        </childnode>
        <childnode refid="6984" relation="include">
        </childnode>
      </node>
      <node id="7038">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="7027" relation="include">
        </childnode>
        <childnode refid="7017" relation="include">
        </childnode>
        <childnode refid="6998" relation="include">
        </childnode>
        <childnode refid="7039" relation="include">
        </childnode>
        <childnode refid="7036" relation="include">
        </childnode>
        <childnode refid="7040" relation="include">
        </childnode>
        <childnode refid="7020" relation="include">
        </childnode>
        <childnode refid="7021" relation="include">
        </childnode>
        <childnode refid="7023" relation="include">
        </childnode>
        <childnode refid="6997" relation="include">
        </childnode>
        <childnode refid="7041" relation="include">
        </childnode>
        <childnode refid="6983" relation="include">
        </childnode>
      </node>
      <node id="6985">
        <label>type_traits</label>
      </node>
      <node id="7041">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="6998" relation="include">
        </childnode>
        <childnode refid="6982" relation="include">
        </childnode>
        <childnode refid="7015" relation="include">
        </childnode>
      </node>
      <node id="7000">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="7001" relation="include">
        </childnode>
        <childnode refid="7002" relation="include">
        </childnode>
        <childnode refid="6987" relation="include">
        </childnode>
        <childnode refid="6991" relation="include">
        </childnode>
        <childnode refid="7003" relation="include">
        </childnode>
        <childnode refid="7004" relation="include">
        </childnode>
        <childnode refid="6986" relation="include">
        </childnode>
        <childnode refid="7005" relation="include">
        </childnode>
        <childnode refid="6980" relation="include">
        </childnode>
        <childnode refid="7006" relation="include">
        </childnode>
        <childnode refid="6985" relation="include">
        </childnode>
        <childnode refid="6984" relation="include">
        </childnode>
        <childnode refid="6977" relation="include">
        </childnode>
      </node>
      <node id="7002">
        <label>algorithm</label>
      </node>
      <node id="7027">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="7019" relation="include">
        </childnode>
      </node>
      <node id="7004">
        <label>cstring</label>
      </node>
      <node id="6980">
        <label>memory</label>
      </node>
      <node id="6986">
        <label>initializer_list</label>
      </node>
      <node id="7050">
        <label>ATen/Formatting.h</label>
        <link refid="_formatting_8h_source"/>
        <childnode refid="7015" relation="include">
        </childnode>
        <childnode refid="7026" relation="include">
        </childnode>
        <childnode refid="7017" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceat">at</innernamespace>
    <innernamespace refid="namespaceat_1_1native">at::native</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ATen/ATen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/NativeFunctions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/detail/CUDAHooksInterface.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">native<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_dims_match_num_input_features(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>arg_name,<sp/>int64_t<sp/>expected,<sp/>int64_t<sp/>actual){</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actual<sp/>!=<sp/>expected){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>arg_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>should<sp/>contain<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>expected<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>elements<sp/>not<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>actual<sp/>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(ss.str());</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">Tensor<sp/>batch_norm(</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>input,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>weight<sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>bias<sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>running_mean<sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>running_var<sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>training,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>momentum,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cudnn_enabled)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>num_features<sp/>=<sp/>input.sizes()[1];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(running_mean.defined())<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>check_dims_match_num_input_features(</highlight><highlight class="stringliteral">&quot;running_mean&quot;</highlight><highlight class="normal">,<sp/>num_features,<sp/>running_mean.numel());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!training)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;running_mean<sp/>must<sp/>be<sp/>defined<sp/>in<sp/>evaluation<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(running_var.defined())<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>check_dims_match_num_input_features(</highlight><highlight class="stringliteral">&quot;running_var&quot;</highlight><highlight class="normal">,<sp/>num_features,<sp/>running_var.numel());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!training)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;running_var<sp/>must<sp/>be<sp/>defined<sp/>in<sp/>evaluation<sp/>mode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weight.defined())<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>check_dims_match_num_input_features(</highlight><highlight class="stringliteral">&quot;weight&quot;</highlight><highlight class="normal">,<sp/>num_features,<sp/>weight.numel());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bias.defined())<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>check_dims_match_num_input_features(</highlight><highlight class="stringliteral">&quot;bias&quot;</highlight><highlight class="normal">,<sp/>num_features,<sp/>bias.numel());</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_cudnn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>use_cudnn<sp/>=<sp/>(input.type().is_cuda()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(input.type().scalarType()<sp/>!=<sp/>at::kHalf</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>weight.type().scalarType()<sp/>==<sp/>at::kFloat)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>weight.defined()<sp/>&amp;&amp;<sp/>bias.defined()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((running_mean.defined()<sp/>&amp;&amp;<sp/>running_var.defined())</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(!running_mean.defined()<sp/>&amp;&amp;<sp/>!running_var.defined()<sp/>&amp;&amp;<sp/>training))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>input.size(0)<sp/>&lt;=<sp/>131070</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>detail::getCUDAHooks().compiledWithCuDNN()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>cudnn_enabled<sp/>&amp;&amp;<sp/>detail::getCUDAHooks().versionCuDNN()<sp/>&gt;=<sp/>5110L);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_cudnn<sp/>&amp;&amp;<sp/>eps<sp/>&gt;=<sp/>detail::getCUDAHooks().batchnormMinEpsilonCuDNN())<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;0&gt;(at::cudnn_batch_norm(</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.contiguous(),<sp/>weight.contiguous(),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bias.contiguous(),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>running_mean.defined()<sp/>?<sp/>running_mean.contiguous()<sp/>:<sp/>running_mean,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>running_var.defined()<sp/>?<sp/>running_var.contiguous()<sp/>:<sp/>running_var,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>training,<sp/>momentum,<sp/>eps));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at::thnn_batch_norm(</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.contiguous(),<sp/>weight,<sp/>bias,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>running_mean,<sp/>running_var,<sp/>training,<sp/>momentum,<sp/>eps);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">Tensor<sp/>layer_norm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>input,<sp/>IntList<sp/>normalized_shape,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>weight<sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>bias<sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cudnn_enabled)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>normalized_ndim<sp/>=<sp/>normalized_shape.size();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(normalized_ndim<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>normalized_shape<sp/>to<sp/>be<sp/>at<sp/>least<sp/>1-dimensional,<sp/>i.e.,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;containing<sp/>at<sp/>least<sp/>one<sp/>element,<sp/>but<sp/>got<sp/>normalized_shape=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>normalized_shape;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(ss.str());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weight.defined()<sp/>&amp;&amp;<sp/>!weight.sizes().equals(normalized_shape))<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>weight<sp/>to<sp/>be<sp/>of<sp/>same<sp/>shape<sp/>as<sp/>normalized_shape,<sp/>but<sp/>got<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;weight<sp/>of<sp/>shape<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>weight.sizes()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>normalized_shape=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>normalized_shape;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(ss.str());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bias.defined()<sp/>&amp;&amp;<sp/>!bias.sizes().equals(normalized_shape))<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>bias<sp/>to<sp/>be<sp/>of<sp/>same<sp/>shape<sp/>as<sp/>normalized_shape,<sp/>but<sp/>got<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;bias<sp/>of<sp/>shape<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bias.sizes()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>normalized_shape=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>normalized_shape;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(ss.str());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input_shape<sp/>=<sp/>input.sizes();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input_ndim<sp/>=<sp/>input.dim();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_ndim<sp/>&lt;<sp/>normalized_ndim<sp/>||</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!input_shape.slice(input_ndim<sp/>-<sp/>normalized_ndim).equals(normalized_shape))<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Given<sp/>normalized_shape=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>normalized_shape</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>expected<sp/>input<sp/>with<sp/>shape<sp/>[*&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>:<sp/>normalized_shape)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>size;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;],<sp/>but<sp/>got<sp/>input<sp/>of<sp/>size&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>input_shape;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(ss.str());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input_ndim<sp/>-<sp/>normalized_ndim;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>*=<sp/>input_shape[i];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>layer<sp/>norm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input_reshaped<sp/>=<sp/>input.contiguous().view({1,<sp/>n,<sp/>-1});</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out<sp/>=<sp/>at::batch_norm(input_reshaped,<sp/>{},<sp/>{},<sp/>{},<sp/>{},<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>0,<sp/>eps,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnn_enabled);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>out.view(input_shape);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weight.defined()<sp/>&amp;&amp;<sp/>bias.defined())<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bias.addcmul(out,<sp/>weight,<sp/>1);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weight.defined())<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.mul(weight);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bias.defined())<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.add(bias);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">Tensor<sp/>group_norm(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>input,<sp/>int64_t<sp/>num_groups,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>weight<sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>bias<sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cudnn_enabled)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input_shape<sp/>=<sp/>input.sizes();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>b<sp/>=<sp/>input.<ref refid="classat_1_1_array_ref_1a7b5593a67d764c4c4443e31fa34211e7" kindref="member">size</ref>(0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>c<sp/>=<sp/>input.size(1);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>%<sp/>num_groups<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>number<sp/>of<sp/>channels<sp/>in<sp/>input<sp/>to<sp/>be<sp/>divisible<sp/>by<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;num_groups,<sp/>but<sp/>got<sp/>input<sp/>of<sp/>shape<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>input.sizes()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;num_groups=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>num_groups;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(ss.str());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weight.defined()<sp/>&amp;&amp;<sp/>(weight.dim()<sp/>!=<sp/>1<sp/>||<sp/>weight.numel()<sp/>!=<sp/>c))<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>weight<sp/>to<sp/>be<sp/>a<sp/>vector<sp/>of<sp/>size<sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;channels<sp/>in<sp/>input,<sp/>but<sp/>got<sp/>weight<sp/>of<sp/>shape<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>weight.sizes()</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>input<sp/>of<sp/>shape<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>input.sizes();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(ss.str());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bias.defined()<sp/>&amp;&amp;<sp/>(bias.dim()<sp/>!=<sp/>1<sp/>||<sp/>bias.numel()<sp/>!=<sp/>c))<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>bias<sp/>to<sp/>be<sp/>a<sp/>vector<sp/>of<sp/>size<sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;channels<sp/>in<sp/>input,<sp/>but<sp/>got<sp/>bias<sp/>of<sp/>shape<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>weight.sizes()</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>input<sp/>of<sp/>shape<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/>input.sizes();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(ss.str());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>group<sp/>norm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>input_reshaped<sp/>=<sp/>input.contiguous().view({1,<sp/>b<sp/>*<sp/>num_groups,<sp/>-1});</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>out<sp/>=<sp/>at::batch_norm(input_reshaped,<sp/>{},<sp/>{},<sp/>{},<sp/>{},<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>0,<sp/>eps,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudnn_enabled);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>out.view(input_shape);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!weight.defined()<sp/>&amp;&amp;<sp/>!bias.defined())<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>affine_param_shape(input.dim(),<sp/>1);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>affine_param_shape[1]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weight.defined()<sp/>&amp;&amp;<sp/>bias.defined())<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bias.view(affine_param_shape).addcmul(out,<sp/>weight.view(affine_param_shape),<sp/>1);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weight.defined())<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.mul(weight.view(affine_param_shape));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.add(bias.view(affine_param_shape));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//<sp/>at::native</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/Normalization.cpp"/>
  </compounddef>
</doxygen>
