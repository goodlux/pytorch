<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="apply__utils__test_8cpp" kind="file" language="C++">
    <compoundname>apply_utils_test.cpp</compoundname>
    <includes local="yes">catch.hpp</includes>
    <includes refid="_a_ten_8h" local="yes">ATen/ATen.h</includes>
    <includes refid="_c_p_u_apply_utils_8h" local="yes">ATen/CPUApplyUtils.h</includes>
    <includes refid="test__assert_8h" local="yes">test_assert.h</includes>
    <includes refid="test__seed_8h" local="yes">test_seed.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="11899">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="11900" relation="include">
        </childnode>
        <childnode refid="11901" relation="include">
        </childnode>
        <childnode refid="11902" relation="include">
        </childnode>
        <childnode refid="11903" relation="include">
        </childnode>
        <childnode refid="11904" relation="include">
        </childnode>
        <childnode refid="11905" relation="include">
        </childnode>
        <childnode refid="11906" relation="include">
        </childnode>
      </node>
      <node id="11945">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="11895" relation="include">
        </childnode>
        <childnode refid="11898" relation="include">
        </childnode>
        <childnode refid="11943" relation="include">
        </childnode>
        <childnode refid="11946" relation="include">
        </childnode>
        <childnode refid="11907" relation="include">
        </childnode>
        <childnode refid="11904" relation="include">
        </childnode>
        <childnode refid="11896" relation="include">
        </childnode>
      </node>
      <node id="11913">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="11898" relation="include">
        </childnode>
        <childnode refid="11914" relation="include">
        </childnode>
        <childnode refid="11907" relation="include">
        </childnode>
        <childnode refid="11929" relation="include">
        </childnode>
        <childnode refid="11905" relation="include">
        </childnode>
        <childnode refid="11904" relation="include">
        </childnode>
      </node>
      <node id="11912">
        <label>atomic</label>
      </node>
      <node id="11891">
        <label>catch.hpp</label>
      </node>
      <node id="11977">
        <label>stdarg.h</label>
      </node>
      <node id="11904">
        <label>functional</label>
      </node>
      <node id="11950">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="11907" relation="include">
        </childnode>
        <childnode refid="11905" relation="include">
        </childnode>
        <childnode refid="11940" relation="include">
        </childnode>
        <childnode refid="11893" relation="include">
        </childnode>
      </node>
      <node id="11914">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="11915" relation="include">
        </childnode>
        <childnode refid="11893" relation="include">
        </childnode>
        <childnode refid="11925" relation="include">
        </childnode>
        <childnode refid="11927" relation="include">
        </childnode>
        <childnode refid="11931" relation="include">
        </childnode>
      </node>
      <node id="11926">
        <label>limits</label>
      </node>
      <node id="11934">
        <label>assert.h</label>
      </node>
      <node id="11939">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="11893" relation="include">
        </childnode>
        <childnode refid="11915" relation="include">
        </childnode>
        <childnode refid="11898" relation="include">
        </childnode>
        <childnode refid="11938" relation="include">
        </childnode>
        <childnode refid="11918" relation="include">
        </childnode>
        <childnode refid="11910" relation="include">
        </childnode>
        <childnode refid="11940" relation="include">
        </childnode>
        <childnode refid="11941" relation="include">
        </childnode>
      </node>
      <node id="11921">
        <label>iterator</label>
      </node>
      <node id="11933">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="11934" relation="include">
        </childnode>
        <childnode refid="11935" relation="include">
        </childnode>
        <childnode refid="11906" relation="include">
        </childnode>
        <childnode refid="11905" relation="include">
        </childnode>
        <childnode refid="11900" relation="include">
        </childnode>
        <childnode refid="11893" relation="include">
        </childnode>
        <childnode refid="11925" relation="include">
        </childnode>
        <childnode refid="11914" relation="include">
        </childnode>
        <childnode refid="11936" relation="include">
        </childnode>
        <childnode refid="11939" relation="include">
        </childnode>
      </node>
      <node id="11953">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="11927">
        <label>cstdint</label>
      </node>
      <node id="11961">
        <label>ATen/Deprecated.h</label>
        <link refid="_deprecated_8h_source"/>
      </node>
      <node id="11935">
        <label>stdint.h</label>
      </node>
      <node id="11972">
        <label>ATen/CUDAGuard.h</label>
        <link refid="_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="11928">
        <label>cmath</label>
      </node>
      <node id="11903">
        <label>cassert</label>
      </node>
      <node id="11944">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="11893" relation="include">
        </childnode>
        <childnode refid="11894" relation="include">
        </childnode>
        <childnode refid="11943" relation="include">
        </childnode>
        <childnode refid="11942" relation="include">
        </childnode>
        <childnode refid="11939" relation="include">
        </childnode>
        <childnode refid="11898" relation="include">
        </childnode>
        <childnode refid="11945" relation="include">
        </childnode>
        <childnode refid="11951" relation="include">
        </childnode>
        <childnode refid="11896" relation="include">
        </childnode>
        <childnode refid="11948" relation="include">
        </childnode>
        <childnode refid="11927" relation="include">
        </childnode>
      </node>
      <node id="11930">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="11893" relation="include">
        </childnode>
        <childnode refid="11920" relation="include">
        </childnode>
        <childnode refid="11926" relation="include">
        </childnode>
      </node>
      <node id="11906">
        <label>stdexcept</label>
      </node>
      <node id="11967">
        <label>ATen/TensorOperators.h</label>
        <link refid="_tensor_operators_8h_source"/>
        <childnode refid="11933" relation="include">
        </childnode>
        <childnode refid="11954" relation="include">
        </childnode>
        <childnode refid="11942" relation="include">
        </childnode>
        <childnode refid="11905" relation="include">
        </childnode>
        <childnode refid="11906" relation="include">
        </childnode>
      </node>
      <node id="11941">
        <label>numeric</label>
      </node>
      <node id="11937">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="11912" relation="include">
        </childnode>
        <childnode refid="11896" relation="include">
        </childnode>
        <childnode refid="11911" relation="include">
        </childnode>
        <childnode refid="11914" relation="include">
        </childnode>
        <childnode refid="11899" relation="include">
        </childnode>
      </node>
      <node id="11925">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="11893" relation="include">
        </childnode>
        <childnode refid="11926" relation="include">
        </childnode>
        <childnode refid="11905" relation="include">
        </childnode>
        <childnode refid="11927" relation="include">
        </childnode>
        <childnode refid="11906" relation="include">
        </childnode>
        <childnode refid="11900" relation="include">
        </childnode>
        <childnode refid="11928" relation="include">
        </childnode>
        <childnode refid="11929" relation="include">
        </childnode>
        <childnode refid="11930" relation="include">
        </childnode>
      </node>
      <node id="11911">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="11912" relation="include">
        </childnode>
      </node>
      <node id="11936">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="11937" relation="include">
        </childnode>
        <childnode refid="11938" relation="include">
        </childnode>
      </node>
      <node id="11905">
        <label>string</label>
      </node>
      <node id="11970">
        <label>ATen/DimVector.h</label>
        <link refid="_dim_vector_8h_source"/>
        <childnode refid="11916" relation="include">
        </childnode>
        <childnode refid="11935" relation="include">
        </childnode>
      </node>
      <node id="11971">
        <label>ATen/OptionsGuard.h</label>
        <link refid="_options_guard_8h_source"/>
        <childnode refid="11913" relation="include">
        </childnode>
        <childnode refid="11957" relation="include">
        </childnode>
        <childnode refid="11914" relation="include">
        </childnode>
        <childnode refid="11964" relation="include">
        </childnode>
        <childnode refid="11899" relation="include">
        </childnode>
      </node>
      <node id="11895">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="11896" relation="include">
        </childnode>
        <childnode refid="11897" relation="include">
        </childnode>
        <childnode refid="11898" relation="include">
        </childnode>
        <childnode refid="11911" relation="include">
        </childnode>
        <childnode refid="11913" relation="include">
        </childnode>
        <childnode refid="11932" relation="include">
        </childnode>
      </node>
      <node id="11951">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="11963">
        <label>ATen/DeviceGuard.h</label>
        <link refid="_device_guard_8h_source"/>
        <childnode refid="11913" relation="include">
        </childnode>
        <childnode refid="11898" relation="include">
        </childnode>
        <childnode refid="11914" relation="include">
        </childnode>
        <childnode refid="11954" relation="include">
        </childnode>
        <childnode refid="11945" relation="include">
        </childnode>
        <childnode refid="11907" relation="include">
        </childnode>
      </node>
      <node id="11908">
        <label>exception</label>
      </node>
      <node id="11897">
        <label>stddef.h</label>
      </node>
      <node id="11938">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="11937" relation="include">
        </childnode>
      </node>
      <node id="11969">
        <label>ATen/Dispatch.h</label>
        <link refid="_dispatch_8h_source"/>
        <childnode refid="11898" relation="include">
        </childnode>
        <childnode refid="11925" relation="include">
        </childnode>
        <childnode refid="11942" relation="include">
        </childnode>
      </node>
      <node id="11917">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="11907" relation="include">
        </childnode>
      </node>
      <node id="11952">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="11933" relation="include">
        </childnode>
        <childnode refid="11953" relation="include">
        </childnode>
      </node>
      <node id="11909">
        <label>ostream</label>
      </node>
      <node id="11894">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="11893" relation="include">
        </childnode>
      </node>
      <node id="11942">
        <label>ATen/Type.h</label>
      </node>
      <node id="11915">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="11898" relation="include">
        </childnode>
        <childnode refid="11916" relation="include">
        </childnode>
        <childnode refid="11923" relation="include">
        </childnode>
        <childnode refid="11921" relation="include">
        </childnode>
        <childnode refid="11924" relation="include">
        </childnode>
      </node>
      <node id="11958">
        <label>ATen/TensorGeometry.h</label>
        <link refid="_tensor_geometry_8h_source"/>
        <childnode refid="11942" relation="include">
        </childnode>
        <childnode refid="11959" relation="include">
        </childnode>
      </node>
      <node id="11955">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="11975">
        <label>ATen/TensorUtils.h</label>
        <link refid="_tensor_utils_8h_source"/>
        <childnode refid="11954" relation="include">
        </childnode>
        <childnode refid="11958" relation="include">
        </childnode>
        <childnode refid="11939" relation="include">
        </childnode>
      </node>
      <node id="11893">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="11959">
        <label>ATen/WrapDimUtils.h</label>
        <link refid="_wrap_dim_utils_8h_source"/>
        <childnode refid="11937" relation="include">
        </childnode>
        <childnode refid="11910" relation="include">
        </childnode>
      </node>
      <node id="11956">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="11907" relation="include">
        </childnode>
        <childnode refid="11935" relation="include">
        </childnode>
        <childnode refid="11914" relation="include">
        </childnode>
      </node>
      <node id="11940">
        <label>typeinfo</label>
      </node>
      <node id="11947">
        <label>cstdio</label>
      </node>
      <node id="11932">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="11896" relation="include">
        </childnode>
        <childnode refid="11893" relation="include">
        </childnode>
      </node>
      <node id="11924">
        <label>vector</label>
      </node>
      <node id="11978">
        <label>test_seed.h</label>
        <link refid="test__seed_8h_source"/>
        <childnode refid="11892" relation="include">
        </childnode>
      </node>
      <node id="11968">
        <label>ATen/TensorMethods.h</label>
      </node>
      <node id="11965">
        <label>THNN/Reduction.h</label>
      </node>
      <node id="11922">
        <label>new</label>
      </node>
      <node id="11900">
        <label>utility</label>
      </node>
      <node id="11923">
        <label>array</label>
      </node>
      <node id="11910">
        <label>sstream</label>
      </node>
      <node id="11960">
        <label>ATen/Functions.h</label>
        <link refid="build_2aten_2src_2_a_ten_2_functions_8h_source"/>
        <childnode refid="11933" relation="include">
        </childnode>
        <childnode refid="11942" relation="include">
        </childnode>
        <childnode refid="11954" relation="include">
        </childnode>
        <childnode refid="11952" relation="include">
        </childnode>
        <childnode refid="11943" relation="include">
        </childnode>
        <childnode refid="11961" relation="include">
        </childnode>
        <childnode refid="11962" relation="include">
        </childnode>
        <childnode refid="11963" relation="include">
        </childnode>
        <childnode refid="11964" relation="include">
        </childnode>
        <childnode refid="11965" relation="include">
        </childnode>
      </node>
      <node id="11962">
        <label>ATen/NativeFunctions.h</label>
      </node>
      <node id="11973">
        <label>ATen/CPUApplyUtils.h</label>
        <link refid="_c_p_u_apply_utils_8h_source"/>
        <childnode refid="11974" relation="include">
        </childnode>
        <childnode refid="11975" relation="include">
        </childnode>
        <childnode refid="11926" relation="include">
        </childnode>
      </node>
      <node id="11929">
        <label>iosfwd</label>
      </node>
      <node id="11919">
        <label>cstdlib</label>
      </node>
      <node id="11931">
        <label>iostream</label>
      </node>
      <node id="11907">
        <label>cstddef</label>
      </node>
      <node id="11949">
        <label>unordered_map</label>
      </node>
      <node id="11976">
        <label>test_assert.h</label>
        <link refid="test__assert_8h_source"/>
        <childnode refid="11906" relation="include">
        </childnode>
        <childnode refid="11977" relation="include">
        </childnode>
      </node>
      <node id="11948">
        <label>mutex</label>
      </node>
      <node id="11892">
        <label>ATen/ATen.h</label>
        <link refid="_a_ten_8h_source"/>
        <childnode refid="11893" relation="include">
        </childnode>
        <childnode refid="11894" relation="include">
        </childnode>
        <childnode refid="11895" relation="include">
        </childnode>
        <childnode refid="11933" relation="include">
        </childnode>
        <childnode refid="11942" relation="include">
        </childnode>
        <childnode refid="11943" relation="include">
        </childnode>
        <childnode refid="11944" relation="include">
        </childnode>
        <childnode refid="11952" relation="include">
        </childnode>
        <childnode refid="11954" relation="include">
        </childnode>
        <childnode refid="11913" relation="include">
        </childnode>
        <childnode refid="11958" relation="include">
        </childnode>
        <childnode refid="11960" relation="include">
        </childnode>
        <childnode refid="11966" relation="include">
        </childnode>
        <childnode refid="11967" relation="include">
        </childnode>
        <childnode refid="11968" relation="include">
        </childnode>
        <childnode refid="11969" relation="include">
        </childnode>
        <childnode refid="11970" relation="include">
        </childnode>
        <childnode refid="11963" relation="include">
        </childnode>
        <childnode refid="11964" relation="include">
        </childnode>
        <childnode refid="11957" relation="include">
        </childnode>
        <childnode refid="11971" relation="include">
        </childnode>
        <childnode refid="11972" relation="include">
        </childnode>
      </node>
      <node id="11946">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="11918" relation="include">
        </childnode>
        <childnode refid="11947" relation="include">
        </childnode>
        <childnode refid="11919" relation="include">
        </childnode>
        <childnode refid="11904" relation="include">
        </childnode>
        <childnode refid="11896" relation="include">
        </childnode>
        <childnode refid="11948" relation="include">
        </childnode>
        <childnode refid="11949" relation="include">
        </childnode>
        <childnode refid="11905" relation="include">
        </childnode>
        <childnode refid="11924" relation="include">
        </childnode>
        <childnode refid="11950" relation="include">
        </childnode>
        <childnode refid="11893" relation="include">
        </childnode>
      </node>
      <node id="11898">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="11893" relation="include">
        </childnode>
        <childnode refid="11899" relation="include">
        </childnode>
        <childnode refid="11907" relation="include">
        </childnode>
        <childnode refid="11908" relation="include">
        </childnode>
        <childnode refid="11909" relation="include">
        </childnode>
        <childnode refid="11910" relation="include">
        </childnode>
        <childnode refid="11905" relation="include">
        </childnode>
      </node>
      <node id="11964">
        <label>ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="11944" relation="include">
        </childnode>
        <childnode refid="11913" relation="include">
        </childnode>
        <childnode refid="11963" relation="include">
        </childnode>
        <childnode refid="11957" relation="include">
        </childnode>
        <childnode refid="11914" relation="include">
        </childnode>
        <childnode refid="11954" relation="include">
        </childnode>
        <childnode refid="11942" relation="include">
        </childnode>
        <childnode refid="11907" relation="include">
        </childnode>
        <childnode refid="11929" relation="include">
        </childnode>
        <childnode refid="11900" relation="include">
        </childnode>
      </node>
      <node id="11954">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="11943" relation="include">
        </childnode>
        <childnode refid="11933" relation="include">
        </childnode>
        <childnode refid="11914" relation="include">
        </childnode>
        <childnode refid="11955" relation="include">
        </childnode>
        <childnode refid="11952" relation="include">
        </childnode>
        <childnode refid="11956" relation="include">
        </childnode>
        <childnode refid="11936" relation="include">
        </childnode>
        <childnode refid="11937" relation="include">
        </childnode>
        <childnode refid="11939" relation="include">
        </childnode>
        <childnode refid="11913" relation="include">
        </childnode>
        <childnode refid="11957" relation="include">
        </childnode>
        <childnode refid="11899" relation="include">
        </childnode>
      </node>
      <node id="11901">
        <label>type_traits</label>
      </node>
      <node id="11957">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="11914" relation="include">
        </childnode>
        <childnode refid="11898" relation="include">
        </childnode>
        <childnode refid="11931" relation="include">
        </childnode>
      </node>
      <node id="11916">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="11917" relation="include">
        </childnode>
        <childnode refid="11918" relation="include">
        </childnode>
        <childnode refid="11903" relation="include">
        </childnode>
        <childnode refid="11907" relation="include">
        </childnode>
        <childnode refid="11919" relation="include">
        </childnode>
        <childnode refid="11920" relation="include">
        </childnode>
        <childnode refid="11902" relation="include">
        </childnode>
        <childnode refid="11921" relation="include">
        </childnode>
        <childnode refid="11896" relation="include">
        </childnode>
        <childnode refid="11922" relation="include">
        </childnode>
        <childnode refid="11901" relation="include">
        </childnode>
        <childnode refid="11900" relation="include">
        </childnode>
        <childnode refid="11893" relation="include">
        </childnode>
      </node>
      <node id="11918">
        <label>algorithm</label>
      </node>
      <node id="11890">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp</label>
        <link refid="apply__utils__test_8cpp"/>
        <childnode refid="11891" relation="include">
        </childnode>
        <childnode refid="11892" relation="include">
        </childnode>
        <childnode refid="11973" relation="include">
        </childnode>
        <childnode refid="11976" relation="include">
        </childnode>
        <childnode refid="11978" relation="include">
        </childnode>
        <childnode refid="11931" relation="include">
        </childnode>
      </node>
      <node id="11943">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="11935" relation="include">
        </childnode>
      </node>
      <node id="11920">
        <label>cstring</label>
      </node>
      <node id="11896">
        <label>memory</label>
      </node>
      <node id="11902">
        <label>initializer_list</label>
      </node>
      <node id="11974">
        <label>ATen/Parallel.h</label>
        <link refid="_parallel_8h_source"/>
        <childnode refid="11892" relation="include">
        </childnode>
        <childnode refid="11907" relation="include">
        </childnode>
      </node>
      <node id="11966">
        <label>ATen/Formatting.h</label>
        <link refid="_formatting_8h_source"/>
        <childnode refid="11931" relation="include">
        </childnode>
        <childnode refid="11942" relation="include">
        </childnode>
        <childnode refid="11933" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="apply__utils__test_8cpp_1a656eb5868e824d59f489f910db438420" prot="public" static="no">
        <name>CATCH_CONFIG_MAIN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" line="1" column="9" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="apply__utils__test_8cpp_1adac7bc7bc6aa7cf30a6b81b132e07146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fill_tensor</definition>
        <argsstring>(int64_t scalar, Tensor &amp;t_)</argsstring>
        <name>fill_tensor</name>
        <param>
          <type>int64_t</type>
          <declname>scalar</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" line="13" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" bodystart="13" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="apply__utils__test_8cpp_1ad854cef984baaff5196caded9ce4425a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test</definition>
        <argsstring>(Type &amp;type, IntList shape, int64_t a=0, int64_t b=1)</argsstring>
        <name>test</name>
        <param>
          <type><ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>shape</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>a</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>b</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" line="28" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" bodystart="28" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="apply__utils__test_8cpp_1a08527d2f9ce68097ae57607532879d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;apply utils test 2-dim small contiguous&quot;, &quot;[cpu]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;apply utils test 2-dim small contiguous&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cpu]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" line="111" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="apply__utils__test_8cpp_1a42caa82681bf413c3aebf272bbe71fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;apply utils test 2-dim small&quot;, &quot;[cpu]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;apply utils test 2-dim small&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cpu]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" line="116" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="apply__utils__test_8cpp_1a04facd556465f948b4dc494f21b171f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;apply utils test 2-dim&quot;, &quot;[cpu]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;apply utils test 2-dim&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cpu]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" line="121" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="apply__utils__test_8cpp_1a527e9c880796545a8c2ec6d2251de0ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;apply utils test 3-dim&quot;, &quot;[cpu]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;apply utils test 3-dim&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cpu]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" line="126" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="apply__utils__test_8cpp_1a33d3901592589859bab241bced7d1774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;apply utils test 3-dim medium&quot;, &quot;[cpu]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;apply utils test 3-dim medium&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cpu]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" line="131" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="apply__utils__test_8cpp_1ac8f869cc3cb6efc22ce245a5aca6f26e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST_CASE</definition>
        <argsstring>(&quot;apply utils test 10-dim&quot;, &quot;[cpu]&quot;)</argsstring>
        <name>TEST_CASE</name>
        <param>
          <type>&quot;apply utils test 10-dim&quot;</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
          <array>[cpu]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" line="136" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp" bodystart="136" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#define<sp/>CATCH_CONFIG_MAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;catch.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/ATen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/CPUApplyUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_assert.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_seed.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fill_tensor(int64_t<sp/>scalar,<sp/><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>&amp;<sp/>t_)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>t_.view(-1);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>t.numel();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>t[i]<sp/>=<sp/>(i<sp/>+<sp/>1)<sp/>*<sp/>scalar;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>test<sp/>exercises<sp/>all<sp/>sequential<sp/>applyX<sp/>functions.<sp/>Given<sp/>a<sp/>shape<sp/>and<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>transpose<sp/>dimensions<sp/>we<sp/>create<sp/>5<sp/>tensors<sp/>(a0,<sp/>...,<sp/>a4)<sp/>of<sp/>the<sp/>given<sp/>shape<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>transpose<sp/>the<sp/>dimension<sp/>a<sp/>with<sp/>b<sp/>for<sp/>each<sp/>tensor.<sp/>Then<sp/>we<sp/>call<sp/>the<sp/>applyX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>on<sp/>each<sp/>floating<sp/>type.<sp/>a4<sp/>is<sp/>allocated<sp/>in<sp/>doubles<sp/>only,<sp/><sp/>whereas<sp/>a0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>...,<sp/>a3<sp/>are<sp/>allocated<sp/>in<sp/>the<sp/>given<sp/>type.<sp/>For<sp/>each<sp/>applyX<sp/>function<sp/>we<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>same<sp/>type<sp/>as<sp/>we<sp/>read<sp/>(using<sp/>a0,<sp/>...,<sp/>aX-1)<sp/>and<sp/>we<sp/>once<sp/>write<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>double<sp/>(using<sp/>a4<sp/>as<sp/>a<sp/>target).<sp/>We<sp/>also<sp/>exercise<sp/>on<sp/>a<sp/>zero_dim<sp/>and<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tensor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test(<ref refid="structat_1_1_type" kindref="compound">Type</ref>&amp;<sp/>type,<sp/><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref><sp/>shape,<sp/>int64_t<sp/>a<sp/>=<sp/>0,<sp/>int64_t<sp/>b<sp/>=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>zero_dim<sp/>=<sp/>at::empty({},<sp/>type);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>zero_dim.fill_(2);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>zero_dim.exp_();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>AT_DISPATCH_FLOATING_TYPES(zero_dim.type(),<sp/></highlight><highlight class="stringliteral">&quot;test0&quot;</highlight><highlight class="normal">,<sp/>[&amp;]<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(zero_dim.data&lt;scalar_t&gt;()[0]<sp/>==<sp/>std::exp(2));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>empty_t<sp/>=<sp/>at::empty({0},<sp/>type);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>empty_t.fill_(3);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>empty_t.exp_();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a0<sp/>=<sp/>type.tensor();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>type.tensor();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a2<sp/>=<sp/>type.tensor();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a3<sp/>=<sp/>type.tensor();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a4<sp/>=<sp/>CPU(kDouble).tensor();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>std::vector&lt;Tensor&gt;<sp/>tensors({a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4});</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tensors.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>tensors[i].resize_(shape);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>fill_tensor(i<sp/>+<sp/>1,<sp/>tensors[i]);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>b<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tensors[i].transpose_(a,<sp/>b);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>AT_DISPATCH_FLOATING_TYPES(a0.type(),<sp/></highlight><highlight class="stringliteral">&quot;test1&quot;</highlight><highlight class="normal">,<sp/>[&amp;]<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>CPU_tensor_apply2&lt;scalar_t,<sp/>scalar_t&gt;(</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a0,<sp/>a1,<sp/>[](scalar_t&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scalar_t&amp;<sp/>x)<sp/>{<sp/>y<sp/>=<sp/>x<sp/>*<sp/>x;<sp/>});</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>CPU_tensor_apply2&lt;double,<sp/>scalar_t&gt;(</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a4,<sp/>a1,<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>y,<sp/>scalar_t<sp/>x)<sp/>{<sp/>y<sp/>=<sp/>(double)(x<sp/>*<sp/>x);<sp/>});</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a0.numel();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>target<sp/>=<sp/>a1.data&lt;scalar_t&gt;()[i]<sp/>*<sp/>a1.data&lt;scalar_t&gt;()[i];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(a0.data&lt;scalar_t&gt;()[i]<sp/>==<sp/>target);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(a4.data&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;()[i]<sp/>==<sp/>target);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>AT_DISPATCH_FLOATING_TYPES(a0.type(),<sp/></highlight><highlight class="stringliteral">&quot;test2&quot;</highlight><highlight class="normal">,<sp/>[&amp;]<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>CPU_tensor_apply3&lt;scalar_t,<sp/>scalar_t,<sp/>scalar_t&gt;(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a0,<sp/>a1,<sp/>a2,<sp/>[](scalar_t&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scalar_t&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scalar_t&amp;<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>x<sp/>*<sp/>x<sp/>+<sp/>z;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>CPU_tensor_apply3&lt;double,<sp/>scalar_t,<sp/>scalar_t&gt;(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a4,<sp/>a1,<sp/>a2,<sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scalar_t&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scalar_t&amp;<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(double)(x<sp/>*<sp/>x<sp/>+<sp/>z);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a0.numel();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>target<sp/>=<sp/>a1.data&lt;scalar_t&gt;()[i]<sp/>*<sp/>a1.data&lt;scalar_t&gt;()[i];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/>target<sp/>+<sp/>a2.data&lt;scalar_t&gt;()[i];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(a0.data&lt;scalar_t&gt;()[i]<sp/>==<sp/>target);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(a4.data&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;()[i]<sp/>==<sp/>target);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>AT_DISPATCH_FLOATING_TYPES(a0.type(),<sp/></highlight><highlight class="stringliteral">&quot;test3&quot;</highlight><highlight class="normal">,<sp/>[&amp;]<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>CPU_tensor_apply4&lt;scalar_t,<sp/>scalar_t,<sp/>scalar_t,<sp/>scalar_t&gt;(</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a0,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a1,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a3,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](scalar_t&amp;<sp/>y,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scalar_t&amp;<sp/>x,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scalar_t&amp;<sp/>z,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scalar_t&amp;<sp/>a)<sp/>{<sp/>y<sp/>=<sp/>x<sp/>*<sp/>x<sp/>+<sp/>z<sp/>*<sp/>a;<sp/>});</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>CPU_tensor_apply4&lt;double,<sp/>scalar_t,<sp/>scalar_t,<sp/>scalar_t&gt;(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a4,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a1,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a3,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scalar_t&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scalar_t&amp;<sp/>z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>scalar_t&amp;<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(double)(x<sp/>*<sp/>x<sp/>+<sp/>z<sp/>*<sp/>a);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a0.numel();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>target<sp/>=<sp/>a1.data&lt;scalar_t&gt;()[i]<sp/>*<sp/>a1.data&lt;scalar_t&gt;()[i];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/>target<sp/>+<sp/>a2.data&lt;scalar_t&gt;()[i]<sp/>*<sp/>a3.data&lt;scalar_t&gt;()[i];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(a0.data&lt;scalar_t&gt;()[i]<sp/>==<sp/>target);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(a4.data&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;()[i]<sp/>==<sp/>target);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;apply<sp/>utils<sp/>test<sp/>2-dim<sp/>small<sp/>contiguous&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cpu]&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>manual_seed(123,<sp/>at::Backend::CPU);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>test(CPU(kDouble),<sp/>{2,<sp/>1},<sp/>-1,<sp/>-1);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;apply<sp/>utils<sp/>test<sp/>2-dim<sp/>small&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cpu]&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>manual_seed(123,<sp/>at::Backend::CPU);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>test(CPU(kDouble),<sp/>{2,<sp/>1});</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;apply<sp/>utils<sp/>test<sp/>2-dim&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cpu]&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>manual_seed(123,<sp/>at::Backend::CPU);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>test(CPU(kDouble),<sp/>{20,<sp/>10});</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;apply<sp/>utils<sp/>test<sp/>3-dim&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cpu]&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>manual_seed(123,<sp/>at::Backend::CPU);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>test(CPU(kDouble),<sp/>{3,<sp/>4,<sp/>2});</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;apply<sp/>utils<sp/>test<sp/>3-dim<sp/>medium&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cpu]&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>manual_seed(123,<sp/>at::Backend::CPU);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>test(CPU(kDouble),<sp/>{3,<sp/>40,<sp/>2});</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">TEST_CASE(</highlight><highlight class="stringliteral">&quot;apply<sp/>utils<sp/>test<sp/>10-dim&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;[cpu]&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>manual_seed(123,<sp/>at::Backend::CPU);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>test(CPU(kDouble),<sp/>{3,<sp/>4,<sp/>2,<sp/>5,<sp/>2,<sp/>1,<sp/>3,<sp/>4,<sp/>2,<sp/>3});</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/test/apply_utils_test.cpp"/>
  </compounddef>
</doxygen>
