<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="namespaceat" kind="namespace" language="C++">
    <compoundname>at</compoundname>
    <innerclass refid="structat_1_1_accumulate_type" prot="public">at::AccumulateType</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01char_00_01false_01_4" prot="public">at::AccumulateType&lt; char, false &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01char_00_01true_01_4" prot="public">at::AccumulateType&lt; char, true &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01double_00_01false_01_4" prot="public">at::AccumulateType&lt; double, false &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01double_00_01true_01_4" prot="public">at::AccumulateType&lt; double, true &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01float_00_01false_01_4" prot="public">at::AccumulateType&lt; float, false &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01float_00_01true_01_4" prot="public">at::AccumulateType&lt; float, true &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01_half_00_01true_01_4" prot="public">at::AccumulateType&lt; Half, true &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01int16__t_00_01false_01_4" prot="public">at::AccumulateType&lt; int16_t, false &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01int16__t_00_01true_01_4" prot="public">at::AccumulateType&lt; int16_t, true &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01int32__t_00_01false_01_4" prot="public">at::AccumulateType&lt; int32_t, false &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01int32__t_00_01true_01_4" prot="public">at::AccumulateType&lt; int32_t, true &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01int64__t_00_01false_01_4" prot="public">at::AccumulateType&lt; int64_t, false &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01int64__t_00_01true_01_4" prot="public">at::AccumulateType&lt; int64_t, true &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01int8__t_00_01false_01_4" prot="public">at::AccumulateType&lt; int8_t, false &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01int8__t_00_01true_01_4" prot="public">at::AccumulateType&lt; int8_t, true &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01uint8__t_00_01false_01_4" prot="public">at::AccumulateType&lt; uint8_t, false &gt;</innerclass>
    <innerclass refid="structat_1_1_accumulate_type_3_01uint8__t_00_01true_01_4" prot="public">at::AccumulateType&lt; uint8_t, true &gt;</innerclass>
    <innerclass refid="structat_1_1_aligned_char_array" prot="public">at::AlignedCharArray</innerclass>
    <innerclass refid="structat_1_1_aligned_char_array_union" prot="public">at::AlignedCharArrayUnion</innerclass>
    <innerclass refid="structat_1_1_allocator" prot="public">at::Allocator</innerclass>
    <innerclass refid="classat_1_1_array_ref" prot="public">at::ArrayRef</innerclass>
    <innerclass refid="structat_1_1_a_ten_d_l_m_tensor" prot="public">at::ATenDLMTensor</innerclass>
    <innerclass refid="classat_1_1bad__optional__access" prot="public">at::bad_optional_access</innerclass>
    <innerclass refid="structat_1_1constexpr__optional__base" prot="public">at::constexpr_optional_base</innerclass>
    <innerclass refid="unionat_1_1constexpr__storage__t" prot="public">at::constexpr_storage_t</innerclass>
    <innerclass refid="classat_1_1_context" prot="public">at::Context</innerclass>
    <innerclass refid="structat_1_1_c_type_to_scalar_type" prot="public">at::CTypeToScalarType</innerclass>
    <innerclass refid="structat_1_1_c_u_d_a_hooks_args" prot="public">at::CUDAHooksArgs</innerclass>
    <innerclass refid="structat_1_1_c_u_d_a_hooks_interface" prot="public">at::CUDAHooksInterface</innerclass>
    <innerclass refid="classat_1_1_data_ptr" prot="public">at::DataPtr</innerclass>
    <innerclass refid="structat_1_1_default_tensor_options" prot="public">at::DefaultTensorOptions</innerclass>
    <innerclass refid="structat_1_1_device" prot="public">at::Device</innerclass>
    <innerclass refid="structat_1_1_device_guard" prot="public">at::DeviceGuard</innerclass>
    <innerclass refid="classat_1_1_error" prot="public">at::Error</innerclass>
    <innerclass refid="structat_1_1_format_guard" prot="public">at::FormatGuard</innerclass>
    <innerclass refid="structat_1_1_generator" prot="public">at::Generator</innerclass>
    <innerclass refid="structat_1_1_half" prot="public">at::Half</innerclass>
    <innerclass refid="structat_1_1in__place__t" prot="public">at::in_place_t</innerclass>
    <innerclass refid="structat_1_1_inefficient_std_function_context" prot="public">at::InefficientStdFunctionContext</innerclass>
    <innerclass refid="classat_1_1_matrix_ref" prot="public">at::MatrixRef</innerclass>
    <innerclass refid="structat_1_1nullopt__t" prot="public">at::nullopt_t</innerclass>
    <innerclass refid="classat_1_1optional" prot="public">at::optional</innerclass>
    <innerclass refid="classat_1_1optional_3_01_t_01_6_01_4" prot="public">at::optional&lt; T &amp; &gt;</innerclass>
    <innerclass refid="classat_1_1optional_3_01_t_01_6_6_01_4" prot="public">at::optional&lt; T &amp;&amp; &gt;</innerclass>
    <innerclass refid="structat_1_1optional__base" prot="public">at::optional_base</innerclass>
    <innerclass refid="structat_1_1_options_guard" prot="public">at::OptionsGuard</innerclass>
    <innerclass refid="classat_1_1_registerer" prot="public">at::Registerer</innerclass>
    <innerclass refid="classat_1_1_registry" prot="public">at::Registry</innerclass>
    <innerclass refid="structat_1_1_retainable" prot="public">at::Retainable</innerclass>
    <innerclass refid="classat_1_1_scalar" prot="public">at::Scalar</innerclass>
    <innerclass refid="classat_1_1_small_vector" prot="public">at::SmallVector</innerclass>
    <innerclass refid="classat_1_1_small_vector_base" prot="public">at::SmallVectorBase</innerclass>
    <innerclass refid="classat_1_1_small_vector_impl" prot="public">at::SmallVectorImpl</innerclass>
    <innerclass refid="structat_1_1_small_vector_storage" prot="public">at::SmallVectorStorage</innerclass>
    <innerclass refid="structat_1_1_small_vector_storage_3_01_t_00_010_01_4" prot="public">at::SmallVectorStorage&lt; T, 0 &gt;</innerclass>
    <innerclass refid="structat_1_1_small_vector_storage_3_01_t_00_011_01_4" prot="public">at::SmallVectorStorage&lt; T, 1 &gt;</innerclass>
    <innerclass refid="classat_1_1_small_vector_template_base" prot="public">at::SmallVectorTemplateBase</innerclass>
    <innerclass refid="classat_1_1_small_vector_template_base_3_01_t_00_01true_01_4" prot="public">at::SmallVectorTemplateBase&lt; T, true &gt;</innerclass>
    <innerclass refid="classat_1_1_small_vector_template_common" prot="public">at::SmallVectorTemplateCommon</innerclass>
    <innerclass refid="structat_1_1_source_location" prot="public">at::SourceLocation</innerclass>
    <innerclass refid="structat_1_1_sparse_tensor_impl" prot="public">at::SparseTensorImpl</innerclass>
    <innerclass refid="structat_1_1_sparse_tensor_ref" prot="public">at::SparseTensorRef</innerclass>
    <innerclass refid="structat_1_1_storage" prot="public">at::Storage</innerclass>
    <innerclass refid="unionat_1_1storage__t" prot="public">at::storage_t</innerclass>
    <innerclass refid="structat_1_1strided__tensor__iter" prot="public">at::strided_tensor_iter</innerclass>
    <innerclass refid="structat_1_1strided__tensor__iter__fixed" prot="public">at::strided_tensor_iter_fixed</innerclass>
    <innerclass refid="structat_1_1_tensor" prot="public">at::Tensor</innerclass>
    <innerclass refid="classat_1_1_tensor_accessor" prot="public">at::TensorAccessor</innerclass>
    <innerclass refid="classat_1_1_tensor_accessor_3_01_t_00_011_01_4" prot="public">at::TensorAccessor&lt; T, 1 &gt;</innerclass>
    <innerclass refid="classat_1_1_tensor_accessor_base" prot="public">at::TensorAccessorBase</innerclass>
    <innerclass refid="structat_1_1_tensor_arg" prot="public">at::TensorArg</innerclass>
    <innerclass refid="structat_1_1_tensor_geometry" prot="public">at::TensorGeometry</innerclass>
    <innerclass refid="structat_1_1_tensor_geometry_arg" prot="public">at::TensorGeometryArg</innerclass>
    <innerclass refid="structat_1_1_tensor_impl" prot="public">at::TensorImpl</innerclass>
    <innerclass refid="structat_1_1_tensor_options" prot="public">at::TensorOptions</innerclass>
    <innerclass refid="classat_1_1_t_h_long_storage_view" prot="public">at::THLongStorageView</innerclass>
    <innerclass refid="structat_1_1trivial__init__t" prot="public">at::trivial_init_t</innerclass>
    <innerclass refid="structat_1_1_type" prot="public">at::Type</innerclass>
    <innerclass refid="structat_1_1_undefined_tensor" prot="public">at::UndefinedTensor</innerclass>
    <innerclass refid="structat_1_1_undefined_type" prot="public">at::UndefinedType</innerclass>
    <innerclass refid="structat_1_1_variable_hooks_args" prot="public">at::VariableHooksArgs</innerclass>
    <innerclass refid="structat_1_1_variable_hooks_interface" prot="public">at::VariableHooksInterface</innerclass>
    <innerclass refid="classat_1_1_warning" prot="public">at::Warning</innerclass>
    <innerclass refid="structat_1_1_weak_tensor" prot="public">at::WeakTensor</innerclass>
    <innernamespace refid="namespaceat_1_1cuda">at::cuda</innernamespace>
    <innernamespace refid="namespaceat_1_1detail">at::detail</innernamespace>
    <innernamespace refid="namespaceat_1_1detail__">at::detail_</innernamespace>
    <innernamespace refid="namespaceat_1_1internal">at::internal</innernamespace>
    <innernamespace refid="namespaceat_1_1native">at::native</innernamespace>
    <innernamespace refid="namespaceat_1_1vec256">at::vec256</innernamespace>
    <innernamespace refid="namespaceat_1_1vml">at::vml</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceat_1a5947131801c0c0cfba4acee3ec78d3eb" prot="public" static="no" strong="yes">
        <type></type>
        <name>IsVariable</name>
        <enumvalue id="namespaceat_1a5947131801c0c0cfba4acee3ec78d3eba055b2ea260c550b74aae5c1e537e2f81" prot="public">
          <name>NotVariable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a5947131801c0c0cfba4acee3ec78d3eba47c14840d8e15331fa420b9b2f757cd9" prot="public">
          <name>Variable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a5947131801c0c0cfba4acee3ec78d3eba5a0efba683cd47c33ebe2e6a88c26b9e" prot="public">
          <name>NumOptions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" line="18" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceat_1afbc3d49fc2e65607c6174bde608aff86" prot="public" static="no" strong="yes">
        <type></type>
        <name>Layout</name>
        <enumvalue id="namespaceat_1afbc3d49fc2e65607c6174bde608aff86aa76ec64823b3aced7830fe9633fc7c85" prot="public">
          <name>Strided</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1afbc3d49fc2e65607c6174bde608aff86a7407fb7e6a4df6392aaabd2368157312" prot="public">
          <name>Sparse</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Layout.h" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Layout.h" bodystart="9" bodyend="9"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceat_1a42fb81104ed9df917331cdb346ae98d5" prot="public" static="no" strong="yes">
        <type></type>
        <name>ScalarType</name>
        <enumvalue id="namespaceat_1a42fb81104ed9df917331cdb346ae98d5a87dca4578f338d09644aae05ff4b7971" prot="public">
          <name>DEFINE_ENUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a42fb81104ed9df917331cdb346ae98d5aa245c3230debe5c956484ecc6fa93877" prot="public">
          <name>Byte</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a42fb81104ed9df917331cdb346ae98d5a8e95e84813830072b7516cfaa7dbc1a9" prot="public">
          <name>Char</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a42fb81104ed9df917331cdb346ae98d5a30bb747c98bccdd11b3f89e644c4d0ad" prot="public">
          <name>Short</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a42fb81104ed9df917331cdb346ae98d5a1686a6c336b71b36d77354cea19a8b52" prot="public">
          <name>Int</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a42fb81104ed9df917331cdb346ae98d5a8394f0347c184cf156ac5924dccb773b" prot="public">
          <name>Long</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a42fb81104ed9df917331cdb346ae98d5ac48615a1bc4197056d522af276aa5a85" prot="public">
          <name>Half</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a42fb81104ed9df917331cdb346ae98d5a22ae0e2b89e5e3d477f988cc36d3272b" prot="public">
          <name>Float</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a42fb81104ed9df917331cdb346ae98d5ad909d38d705ce75386dd86e611a82f5b" prot="public">
          <name>Double</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a42fb81104ed9df917331cdb346ae98d5aec0fc0100c4fc1ce4eea230c3dc10360" prot="public">
          <name>Undefined</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a42fb81104ed9df917331cdb346ae98d5a5a0efba683cd47c33ebe2e6a88c26b9e" prot="public">
          <name>NumOptions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="33" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceat_1a64eded1e1d41dd28248596ce82465f57" prot="public" static="no" strong="yes">
        <type></type>
        <name>Backend</name>
        <enumvalue id="namespaceat_1a64eded1e1d41dd28248596ce82465f57a2b55387dd066c5bac646ac61543d152d" prot="public">
          <name>CPU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a64eded1e1d41dd28248596ce82465f57aa33b7755e5f9b504d2d038eaca4ff28d" prot="public">
          <name>CUDA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a64eded1e1d41dd28248596ce82465f57a9d949637fd435d524128a753d8889038" prot="public">
          <name>SparseCPU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a64eded1e1d41dd28248596ce82465f57a25cb79a43963b48893efa9040b280f37" prot="public">
          <name>SparseCUDA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a64eded1e1d41dd28248596ce82465f57aec0fc0100c4fc1ce4eea230c3dc10360" prot="public">
          <name>Undefined</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a64eded1e1d41dd28248596ce82465f57a5a0efba683cd47c33ebe2e6a88c26b9e" prot="public">
          <name>NumOptions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="41" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceat_1a607725fc718c753f2a5b3e16fc42e339" prot="public" static="no" strong="yes">
        <type></type>
        <name>TypeID</name>
        <enumvalue id="namespaceat_1a607725fc718c753f2a5b3e16fc42e339aec0fc0100c4fc1ce4eea230c3dc10360" prot="public">
          <name>Undefined</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a607725fc718c753f2a5b3e16fc42e339a5a0efba683cd47c33ebe2e6a88c26b9e" prot="public">
          <name>NumOptions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/Type.h" line="40" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/Type.h" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceat_1a7a979fffa4afd2531a3ccb883346ae77" prot="public" static="no" strong="yes">
        <type></type>
        <name>THLongStorageViewKind</name>
        <enumvalue id="namespaceat_1a7a979fffa4afd2531a3ccb883346ae77a62e5cef85d46f1a5a2144d9fd463b79e" prot="public">
          <name>SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a7a979fffa4afd2531a3ccb883346ae77a803adeea7b9630d097a2a7091c1d2be4" prot="public">
          <name>STRIDE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceat_1a7a979fffa4afd2531a3ccb883346ae77aaddeac40406177897b3fccba88558f1c" prot="public">
          <name>LENGTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/THLongStorageView.h" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/THLongStorageView.h" bodystart="9" bodyend="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceat_1a3f3f8ad3dad9703405f9bb4799870bc9" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>bool</type>
            <declname>is_cuda</declname>
            <defname>is_cuda</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="structat_1_1_accumulate_type" kindref="compound">AccumulateType</ref>&lt; T, is_cuda &gt;::type</type>
        <definition>using at::acc_type = typedef typename AccumulateType&lt;T, is_cuda&gt;::type</definition>
        <argsstring></argsstring>
        <name>acc_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/AccumulateType.h" line="41" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/AccumulateType.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceat_1a94985975922adab3202a23ac906394b3" prot="public" static="no">
        <type>void(*)(void *)</type>
        <definition>using at::DeleterFnPtr = typedef void(*)(void*)</definition>
        <argsstring></argsstring>
        <name>DeleterFnPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/detail/UniqueVoidPtr.h" line="7" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/detail/UniqueVoidPtr.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceat_1a4bfb3054d339964178cc931625e40016" prot="public" static="no">
        <type><ref refid="classat_1_1_small_vector" kindref="compound">SmallVector</ref>&lt; int64_t, 5 &gt;</type>
        <definition>using at::DimVector = typedef SmallVector&lt;int64_t, 5&gt;</definition>
        <argsstring></argsstring>
        <name>DimVector</name>
        <briefdescription>
<para>A container for sizes or strides. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DimVector.h" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DimVector.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceat_1a40c40ea5815893334338d130c7a5a559" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>typename std::conditional&lt; std::is_trivially_destructible&lt; T &gt;::value, <ref refid="structat_1_1constexpr__optional__base" kindref="compound">constexpr_optional_base</ref>&lt; typename std::remove_const&lt; T &gt;::type &gt;, <ref refid="structat_1_1optional__base" kindref="compound">optional_base</ref>&lt; typename std::remove_const&lt; T &gt;::type &gt; &gt;::type</type>
        <definition>using at::OptionalBase = typedef typename std::conditional&lt; std::is_trivially_destructible&lt;T&gt;::value, constexpr_optional_base&lt;typename std::remove_const&lt;T&gt;::type&gt;, optional_base&lt;typename std::remove_const&lt;T&gt;::type&gt; &gt;::type</definition>
        <argsstring></argsstring>
        <name>OptionalBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="275" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceat_1a90b27617b61f3e925f075136dcbf1bb0" prot="public" static="no">
        <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
        <definition>typedef ArrayRef&lt;int64_t&gt; at::IntList</definition>
        <argsstring></argsstring>
        <name>IntList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="164" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceat_1a7da28cc095481e54a119d14fa322cd18" prot="public" static="no">
        <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>typedef ArrayRef&lt;Tensor&gt; at::TensorList</definition>
        <argsstring></argsstring>
        <name>TensorList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="165" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceat_1a10e99a7353987ef0002c2265ddb40634" prot="public" static="no">
        <type>const char *</type>
        <definition>using at::CheckedFrom = typedef const char*</definition>
        <argsstring></argsstring>
        <name>CheckedFrom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.h" line="40" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceat_1a47fe795c8d68424cb5707ad85f417e79" prot="public" static="yes" mutable="no">
        <type>THAllocator</type>
        <definition>THAllocator at::CPU_fixed_allocator</definition>
        <argsstring></argsstring>
        <name>CPU_fixed_allocator</name>
        <initializer>=
  { cpu_fixed_malloc, cpu_fixed_realloc, cpu_fixed_free }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUFixedAllocator.h" line="28" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUFixedAllocator.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1ae94c1f2107a06317bd3465d93f04b7c8" prot="public" static="no" mutable="no">
        <type>constexpr const char *</type>
        <definition>constexpr const char* at::CUDA_HELP</definition>
        <argsstring></argsstring>
        <name>CUDA_HELP</name>
        <initializer>=
  &quot;PyTorch splits its backend into two shared libraries: a CPU library &quot;
  &quot;and a CUDA library; this error has occurred because you are trying &quot;
  &quot;to use some CUDA functionality, but the CUDA library has not been &quot;
  &quot;loaded by the dynamic linker for some reason.  The CUDA library MUST &quot;
  &quot;be loaded, EVEN IF you don&apos;t directly use any symbols from the CUDA library! &quot;
  &quot;One common culprit is a lack of -Wl,--no-as-needed in your link arguments; many &quot;
  &quot;dynamic linkers will delete dynamic library dependencies if you don&apos;t &quot;
  &quot;depend on any of their symbols.  You can check if this has occurred by &quot;
  &quot;using ldd on your binary to see if there is a dependency on *_cuda.so &quot;
  &quot;library.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/detail/CUDAHooksInterface.h" line="22" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/detail/CUDAHooksInterface.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a719018afc9dcbfad51d24fe29a266705" prot="public" static="no" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto at::kStrided</definition>
        <argsstring></argsstring>
        <name>kStrided</name>
        <initializer>= Layout::Strided</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Layout.h" line="11" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Layout.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a407a7828c7d2c52e7b1c533f6d05af32" prot="public" static="no" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto at::kSparse</definition>
        <argsstring></argsstring>
        <name>kSparse</name>
        <initializer>= Layout::Sparse</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Layout.h" line="12" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Layout.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a3c713d3939b78b8674ea158e909c9f09" prot="public" static="no" mutable="no">
        <type>constexpr struct <ref refid="structat_1_1trivial__init__t" kindref="compound">at::trivial_init_t</ref></type>
        <definition>constexpr struct at::trivial_init_t  at::trivial_init</definition>
        <argsstring></argsstring>
        <name>trivial_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a2d49f55307cab002b17eeb66b7a4d51a" prot="public" static="no" mutable="no">
        <type>constexpr struct <ref refid="structat_1_1in__place__t" kindref="compound">at::in_place_t</ref></type>
        <definition>constexpr struct at::in_place_t  at::in_place</definition>
        <argsstring></argsstring>
        <name>in_place</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a08b1e845a39479f8a751d96619ec778e" prot="public" static="no" mutable="no">
        <type>constexpr <ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        <definition>constexpr nullopt_t at::nullopt</definition>
        <argsstring></argsstring>
        <name>nullopt</name>
        <initializer>{<ref refid="structat_1_1nullopt__t_1_1init" kindref="compound">nullopt_t::init</ref>()}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="188" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1ad1bc20d23f7bd0e8a025d622f2712ff8" prot="public" static="no" mutable="no">
        <type>constexpr Backend</type>
        <definition>constexpr Backend at::kCPU</definition>
        <argsstring></argsstring>
        <name>kCPU</name>
        <initializer>= Backend::CPU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="50" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1af86ecaea009c8dd898ecb161702a39d2" prot="public" static="no" mutable="no">
        <type>constexpr Backend</type>
        <definition>constexpr Backend at::kCUDA</definition>
        <argsstring></argsstring>
        <name>kCUDA</name>
        <initializer>= Backend::CUDA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="51" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1aa4b2f8610970d2fa660e268f9452e244" prot="public" static="no" mutable="no">
        <type>constexpr Backend</type>
        <definition>constexpr Backend at::kSparseCPU</definition>
        <argsstring></argsstring>
        <name>kSparseCPU</name>
        <initializer>= Backend::SparseCPU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="52" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1ae6ac5e28b4299a89c371b6ade6883a74" prot="public" static="no" mutable="no">
        <type>constexpr Backend</type>
        <definition>constexpr Backend at::kSparseCUDA</definition>
        <argsstring></argsstring>
        <name>kSparseCUDA</name>
        <initializer>= Backend::SparseCUDA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a9706ca360afc2a9e0a95772824034d19" prot="public" static="no" mutable="no">
        <type>constexpr ScalarType</type>
        <definition>constexpr ScalarType at::kByte</definition>
        <argsstring></argsstring>
        <name>kByte</name>
        <initializer>= ScalarType:: Byte</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="88" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a8d06f19a25d618fe721888d353dfbe42" prot="public" static="no" mutable="no">
        <type>constexpr ScalarType</type>
        <definition>constexpr ScalarType at::kChar</definition>
        <argsstring></argsstring>
        <name>kChar</name>
        <initializer>= ScalarType:: Char</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="88" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a1dbb5c16c0b8343aa40e991e69328c3e" prot="public" static="no" mutable="no">
        <type>constexpr ScalarType</type>
        <definition>constexpr ScalarType at::kShort</definition>
        <argsstring></argsstring>
        <name>kShort</name>
        <initializer>= ScalarType:: Short</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="88" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1ad9909e3b63686d0d1a4deda98792efbd" prot="public" static="no" mutable="no">
        <type>constexpr ScalarType</type>
        <definition>constexpr ScalarType at::kInt</definition>
        <argsstring></argsstring>
        <name>kInt</name>
        <initializer>= ScalarType:: Int</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="88" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a0c43f9a173b9f43efdf3c0a0812c602a" prot="public" static="no" mutable="no">
        <type>constexpr ScalarType</type>
        <definition>constexpr ScalarType at::kLong</definition>
        <argsstring></argsstring>
        <name>kLong</name>
        <initializer>= ScalarType:: Long</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="88" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1ab3be14a6dc129035ef615fd079fe901e" prot="public" static="no" mutable="no">
        <type>constexpr ScalarType</type>
        <definition>constexpr ScalarType at::kHalf</definition>
        <argsstring></argsstring>
        <name>kHalf</name>
        <initializer>= ScalarType:: <ref refid="structat_1_1_half" kindref="compound">Half</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="88" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a7325d4eb3d52602820fb74456b7a5ce3" prot="public" static="no" mutable="no">
        <type>constexpr ScalarType</type>
        <definition>constexpr ScalarType at::kFloat</definition>
        <argsstring></argsstring>
        <name>kFloat</name>
        <initializer>= ScalarType:: Float</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="88" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a8db8c6db433cf839cf8673264483968d" prot="public" static="no" mutable="no">
        <type>constexpr ScalarType</type>
        <definition>constexpr ScalarType at::kDouble</definition>
        <argsstring></argsstring>
        <name>kDouble</name>
        <initializer>= ScalarType:: Double</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="88" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a56f87c30d20612eb539af234b61af2d3" prot="public" static="no" mutable="no">
        <type><ref refid="classat_1_1_context" kindref="compound">Context</ref> *</type>
        <definition>Context * at::context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <initializer>{THTensor} * tensor</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/GeneratorDerived.h" line="27" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/GeneratorDerived.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1abbd1c5b82c48e3d23aed77be1ccafeb0" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>at::friend struct</definition>
        <argsstring></argsstring>
        <name>friend struct</name>
        <initializer>{<ref refid="structat_1_1_type" kindref="compound">Type</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/StorageDerived.h" line="29" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/StorageDerived.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a3159817a48353b48de9ac78b05442dd3" prot="public" static="no" mutable="no">
        <type><ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref></type>
        <definition> at::Tensor at::Storage</definition>
        <argsstring></argsstring>
        <name>Storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/Tensor.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a1b7483edd167c3948446c435a979a230" prot="public" static="no" mutable="no">
        <type>enum at::TypeID</type>
        <definition>enum at::TypeID at::Tensor</definition>
        <argsstring></argsstring>
        <name>Tensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/Type.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1a4e48f2f68c87294210404614e1823a7b" prot="public" static="no" mutable="no">
        <type>class <ref refid="classat_1_1_tensor_accessor_base" kindref="compound">at::TensorAccessorBase</ref></type>
        <definition>class at::TensorAccessorBase at::Type</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorAccessor.h" line="28" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceat_1abf84d74da1ae04f408084fde440bf829" prot="public" static="no" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t at::dim_bitset_size</definition>
        <argsstring></argsstring>
        <name>dim_bitset_size</name>
        <initializer>= 64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtilsMulti.h" line="13" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtilsMulti.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceat_1add8b57bab1c0fbb5562d6a838fc6a355" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::masked_select_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mask)</argsstring>
        <name>masked_select_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="21" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1157" bodyend="1159"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac20a9c145c606f17d15f81f385a2bc51" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::masked_select</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mask)</argsstring>
        <name>masked_select</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="22" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1160" bodyend="1162"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aef91e60894a3ca53fa08adf48a3bd61c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::nonzero_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>nonzero_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="23" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1163" bodyend="1165"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad0dc1795ec3f591843ea50ba0acb29d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::nonzero</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>nonzero</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="24" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1166" bodyend="1168"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1cf28447d062fec623e5efd2e0e485c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::th_clone</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>th_clone</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="25" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1169" bodyend="1171"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a47d4c1627c176690995e7d2c27baf91e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_resize_as_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;the_template)</argsstring>
        <name>th_resize_as_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>the_template</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="26" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1172" bodyend="1174"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0ff5fb8c1c70eab8d2f693f73fc6e8e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::index_select_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, const Tensor &amp;index)</argsstring>
        <name>index_select_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="27" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1175" bodyend="1177"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a21648eb998143e628e52a19d14aca245" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::index_select</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, const Tensor &amp;index)</argsstring>
        <name>index_select</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="28" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1178" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a65b06ea7a20b941188ea99aa8c289fb6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::take_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;index)</argsstring>
        <name>take_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="29" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1181" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1540902062b036489d540448ffbeebf7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::take</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;index)</argsstring>
        <name>take</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="30" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1184" bodyend="1186"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6d29da713216e0de62df204faa76c1fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_range_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end, Scalar step=1)</argsstring>
        <name>_range_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>step</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="31" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1187" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8a5d572f342a0bac274803cf5be85b0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_arange_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end, Scalar step=1)</argsstring>
        <name>_arange_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>step</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="32" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1190" bodyend="1192"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8c401cc3e2f65b0c512e201a18a8e5d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_arange_out</definition>
        <argsstring>(Tensor &amp;result, Scalar end)</argsstring>
        <name>_arange_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="33" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1193" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac14de4b6c7ff9046f366b13eeacec38e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::gather_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, const Tensor &amp;index)</argsstring>
        <name>gather_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="34" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1196" bodyend="1198"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adab738a3d4cea8a622a64502dfb920e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::gather</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, const Tensor &amp;index)</argsstring>
        <name>gather</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="35" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1199" bodyend="1201"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab5c3f388e23accb180fe7319377dc498" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::equal</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>equal</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="36" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1202" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9b5fb8106997aa9f47c1dd0150307bed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::__and___out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>__and___out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="37" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1205" bodyend="1207"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab4890f6f7eaccd58ca3245821283af61" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::__and__</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>__and__</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="38" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1208" bodyend="1210"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae0dfe6fb45c3bd432befbe59f1502e5a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::__and___out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>__and___out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="39" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1211" bodyend="1213"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afe646e737e8dec4de261cf6d379db2e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::__and__</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>__and__</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="40" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1214" bodyend="1216"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afdef6d852ef9782f4614716c65476950" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::__or___out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>__or___out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="41" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1217" bodyend="1219"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abbed114cc5ae5a02f9a2cb04ea3b7b63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::__or__</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>__or__</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="42" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1220" bodyend="1222"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abf3e1000110522bd37c59d8e8e423ab8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::__or___out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>__or___out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="43" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1223" bodyend="1225"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a312a3550760673cd9487342b7ccc6c09" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::__or__</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>__or__</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="44" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1226" bodyend="1228"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a592d564dd33d09bfc179393a10bad249" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::__xor___out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>__xor___out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="45" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1229" bodyend="1231"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4f96b95377c3c71a938339255602ee04" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::__xor__</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>__xor__</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="46" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1232" bodyend="1234"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7f2a353ce3d0d4dba0dc2608b28172cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::__xor___out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>__xor___out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="47" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1235" bodyend="1237"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab18fc23f82fb20a0c191cf821e34b83f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::__xor__</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>__xor__</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="48" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1238" bodyend="1240"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac35ed9a4e4ab866ec5280a3aab3601a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::__lshift___out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>__lshift___out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="49" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1241" bodyend="1243"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2e2af876ef5394f0b9b08a6122e5e109" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::__lshift__</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>__lshift__</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="50" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1244" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0a0c88903324bc395cc7088e95ee8451" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::__lshift___out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>__lshift___out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="51" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1247" bodyend="1249"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad4666713361b8f407d693b7cb82d1b0c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::__lshift__</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>__lshift__</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="52" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1250" bodyend="1252"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afdebf8c0658f1740eb28b8d74620d89e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::__rshift___out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>__rshift___out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1253" bodyend="1255"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a38a42d12147f87b92313ede65346b708" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::__rshift__</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>__rshift__</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="54" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1256" bodyend="1258"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acf42c1c59e9e3be371625f8d61792ae3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::__rshift___out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>__rshift___out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="55" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1259" bodyend="1261"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a23dc782dc5fb568b4f7a76ecd00dc33e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::__rshift__</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>__rshift__</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="56" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1262" bodyend="1264"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac4d1e15e625f3dfcc0c9c0ab5990f548" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::lt_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>lt_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="57" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1265" bodyend="1267"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a627a4cb8dcac0bd64793ce9da60d39e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::lt</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>lt</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="58" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1268" bodyend="1270"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a58b83510ef90a6658ea56e7184ff635f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::lt_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>lt_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="59" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1271" bodyend="1273"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a52a09eb70136f3a1e1133209eff10cc5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::lt</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>lt</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="60" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1274" bodyend="1276"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab20b794fb26c8107c0e763eb912d6554" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::gt_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>gt_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="61" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1277" bodyend="1279"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2d0bc9420f2d3437ad2418749f8c3c70" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::gt</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>gt</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="62" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1280" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adbca306c2ed4cedb44f2c2f5eff8dbc6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::gt_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>gt_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="63" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1283" bodyend="1285"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2b478a7345ef9c165c18f7cdb9fb4961" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::gt</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>gt</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="64" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1286" bodyend="1288"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acd998744f4b0eff56cc3a16037ce259e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::le_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>le_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="65" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1289" bodyend="1291"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af4cf6bb5ec4877a51616f59b507b7aea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::le</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>le</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="66" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1292" bodyend="1294"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a41da2e030aa898708cc9553e8f27cce2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::le_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>le_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="67" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1295" bodyend="1297"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae785ec424bf67ee4cdb1fb22b27a65b9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::le</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>le</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="68" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1298" bodyend="1300"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af70bd411c15b41bcf052bd239ccdecfb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::ge_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>ge_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="69" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1301" bodyend="1303"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa2352eb1e593f2ee872d8ff44d2cfd36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::ge</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>ge</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="70" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1304" bodyend="1306"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9408ea8905f957931c8d93452387e01f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::ge_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>ge_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="71" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1307" bodyend="1309"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa0a2e1181b832d1a8d90e3ed07288a97" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::ge</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>ge</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="72" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1310" bodyend="1312"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a33055cb03bc8deb76087b2daa721f632" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::eq_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>eq_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="73" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1313" bodyend="1315"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2b226bed3f4f2e28d8013be0428df609" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::eq</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>eq</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="74" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1316" bodyend="1318"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5c87c49cacee0a1355bb6d9fee446aec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::eq_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>eq_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="75" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1319" bodyend="1321"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adcbdc3af5ee098ca7b05fcb2395e8daa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::eq</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>eq</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="76" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1322" bodyend="1324"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad590d741fc47db69f6350c02a7b21de0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::ne_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>ne_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="77" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1325" bodyend="1327"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab1e10506f73a7569f5a6a3ecb19fdc33" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::ne</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>ne</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="78" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1328" bodyend="1330"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a959357eed0bb9f9401da53e2979c1444" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::ne_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>ne_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="79" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1331" bodyend="1333"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0891f75d7bafae18820ca7485a591d10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::ne</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>ne</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="80" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1334" bodyend="1336"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a425bf34a219c9437d9917a640216127e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::min_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>min_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="81" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1337" bodyend="1339"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5515e8f3764b57943685c3ca764e2fe4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::min</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>min</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="82" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1340" bodyend="1342"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0eab9a57b54c53031fdfa546a0f70f07" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::min</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>min</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="83" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1343" bodyend="1345"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6a84beef27b9aa09369866209cb2a1d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::_th_min_out</definition>
        <argsstring>(Tensor &amp;min, Tensor &amp;min_indices, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_min_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>min_indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="84" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1346" bodyend="1348"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aef67e22e665cb4a01033f7c9182d6f24" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::_th_min</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_min</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="85" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1349" bodyend="1351"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a44cb02c760e60cfe139ce684be3603f7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::max_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>max_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="86" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1352" bodyend="1354"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0aea8ff54ee1109dc5f28472a190965a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>max</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="87" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1355" bodyend="1357"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a25e151d18662c07e1d72247ee83e36ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>max</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="88" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1358" bodyend="1360"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a54c9d7295abc937c2d0d439e3ec9ba35" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::_th_max_out</definition>
        <argsstring>(Tensor &amp;max, Tensor &amp;max_indices, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_max_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>max_indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1361" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5a1bd5134e6fa2b7a7421a8648c0134c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::_th_max</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_max</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="90" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1364" bodyend="1366"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8e8687213f3aeb4fb5a0c5ceae2ede12" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::_th_kthvalue_out</definition>
        <argsstring>(Tensor &amp;values, Tensor &amp;indices, const Tensor &amp;self, int64_t k, int64_t dim=-1, bool keepdim=false)</argsstring>
        <name>_th_kthvalue_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="91" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1367" bodyend="1369"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7ccdc1c35efe8657a45d63e4081aee08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::_th_kthvalue</definition>
        <argsstring>(const Tensor &amp;self, int64_t k, int64_t dim=-1, bool keepdim=false)</argsstring>
        <name>_th_kthvalue</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="92" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1370" bodyend="1372"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a11e877bf4b350c3ed591bb97c1482aea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::_th_mode_out</definition>
        <argsstring>(Tensor &amp;values, Tensor &amp;indices, const Tensor &amp;self, int64_t dim=-1, bool keepdim=false)</argsstring>
        <name>_th_mode_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="93" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1373" bodyend="1375"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9d858385b52d44bd91ce826e5ee43240" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::_th_mode</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim=-1, bool keepdim=false)</argsstring>
        <name>_th_mode</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="94" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1376" bodyend="1378"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aca0372e4a266cc84b14d0ddb5d748f24" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::median</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>median</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="95" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1379" bodyend="1381"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a38e8e0ed701bc4d096d7232f72e1b8d2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::_th_median_out</definition>
        <argsstring>(Tensor &amp;values, Tensor &amp;indices, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_median_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="96" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1382" bodyend="1384"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1308bd36f75c12b1391676b906e41323" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::_th_median</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_median</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="97" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1385" bodyend="1387"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a464d7bd92028196bb0a57f3b70f85605" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::sort_out</definition>
        <argsstring>(Tensor &amp;values, Tensor &amp;indices, const Tensor &amp;self, int64_t dim=-1, bool descending=false)</argsstring>
        <name>sort_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>descending</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="98" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1388" bodyend="1390"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae4aeb6d5ecc953e5e221a44016550b89" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::sort</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim=-1, bool descending=false)</argsstring>
        <name>sort</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>descending</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="99" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1391" bodyend="1393"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab902cd870a5c1f0abe3afe4dc6cd075c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::topk_out</definition>
        <argsstring>(Tensor &amp;values, Tensor &amp;indices, const Tensor &amp;self, int64_t k, int64_t dim=-1, bool largest=true, bool sorted=true)</argsstring>
        <name>topk_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>largest</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sorted</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="100" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1394" bodyend="1396"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acf88a07f29865d491a093d6aaa422663" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::topk</definition>
        <argsstring>(const Tensor &amp;self, int64_t k, int64_t dim=-1, bool largest=true, bool sorted=true)</argsstring>
        <name>topk</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>largest</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sorted</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="101" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1397" bodyend="1399"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0d603d2579b559ee8b85965adf35a250" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::all</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>all</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="102" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1400" bodyend="1402"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5206da9962b928179cdfb1761e81ee44" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_all_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_all_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="103" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1403" bodyend="1405"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4c335fe3c07d42ca7adbd91bfc3c8e6b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_th_all</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_all</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="104" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1406" bodyend="1408"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aee657f10de2b5d71789cebf24974d74c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::any</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>any</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="105" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1409" bodyend="1411"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a80fae02131e51e2945868249bd6fe491" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_any_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_any_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="106" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1412" bodyend="1414"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa5f8abc911053b8f230c55d2dfa5cd73" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_th_any</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_any</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="107" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1415" bodyend="1417"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a817a1eded242360c414a9bd9c2fc974c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::_th_get_device</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_th_get_device</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="108" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1418" bodyend="1420"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acdeaf911175c887b9698fa203bace575" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_abs_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_abs_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="109" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1421" bodyend="1423"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a40f82f0878893be41bd1ff0609810de1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_abs</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_abs</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="110" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1424" bodyend="1426"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a13dba5dd5c5b3fe2b2330802c1d56a29" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_sigmoid_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_th_sigmoid_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="111" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1427" bodyend="1429"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af99f8508292d5ee6ac1e7a790fa4c950" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_th_sigmoid</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_th_sigmoid</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="112" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1430" bodyend="1432"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa3fb257586c792c2dd2698613c57f73b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_log_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_log_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="113" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1433" bodyend="1435"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a468a5124e533c310acfd9f6250cc2147" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_log</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_log</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="114" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1436" bodyend="1438"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a35d846c199737eaecbac3cd450b3d8f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_log10_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_log10_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="115" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1439" bodyend="1441"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad7295d57af91527cf981396ce3a73068" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_log10</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_log10</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="116" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1442" bodyend="1444"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3a9948fae185a657ed8921ff4cc4245e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_log1p_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_log1p_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="117" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1445" bodyend="1447"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a445583f8e56d257ca1b704aed1594c08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_log1p</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_log1p</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="118" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1448" bodyend="1450"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a61b72a0c88c21042067abeb0927d1e87" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_log2_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_log2_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="119" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1451" bodyend="1453"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acaa69fee24ad58e2abbded263d756fc5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_log2</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_log2</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="120" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1454" bodyend="1456"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a77c0368b5cdc3f31fd23ddd8a29ee2bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::lgamma_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>lgamma_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="121" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1457" bodyend="1459"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae80021c749d42d0625e90973b18a00bc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::lgamma</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>lgamma</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="122" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1460" bodyend="1462"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a69933073a65dce8602d6e08be5f8ef1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::digamma_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>digamma_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="123" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1463" bodyend="1465"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a00ee8ed2c46a9a4ae84ded7432ef0291" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::digamma</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>digamma</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="124" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1466" bodyend="1468"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1331923ce9e48d04480d675cd09c7382" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::polygamma_out</definition>
        <argsstring>(Tensor &amp;result, int64_t n, const Tensor &amp;self)</argsstring>
        <name>polygamma_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="125" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1469" bodyend="1471"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a98080f784a3c761958a42f273ac5cfd2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::polygamma</definition>
        <argsstring>(int64_t n, const Tensor &amp;self)</argsstring>
        <name>polygamma</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="126" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1472" bodyend="1474"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ace64fefc83838186ac31ecb6f3e6aff0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_exp_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_exp_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="127" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1475" bodyend="1477"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a535c40acf648fba5e19913a0c3e543b9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_exp</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_exp</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="128" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1478" bodyend="1480"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a047cc2e94356a96344daf14bb041093e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_expm1_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_expm1_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="129" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1481" bodyend="1483"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa8296effa111fc0ef095a15b0686c67a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_expm1</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_expm1</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="130" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1484" bodyend="1486"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7f9ea71f8603e6bec8db5ff7d58ad180" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_cos_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_cos_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="131" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1487" bodyend="1489"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a34c862f3e00e11effb9b17af42ca1c14" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cos</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_cos</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="132" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1490" bodyend="1492"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0c4b75b630de22cced9ea9abecb50f29" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_acos_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_acos_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="133" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1493" bodyend="1495"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a711879729e3a18f57301dfc20c8b6622" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_acos</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_acos</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="134" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1496" bodyend="1498"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0f0e0f63954798a097a47b17dfd32470" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_cosh_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_cosh_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="135" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1499" bodyend="1501"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af0c753bad0bc934176bbe19ac3a6a0ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cosh</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_cosh</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="136" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1502" bodyend="1504"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae088ba59c70e19c3a54e6b1c86013135" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_sin_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_sin_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="137" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1505" bodyend="1507"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aecb465ac5d759190897479586af7e01a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_sin</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_sin</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="138" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1508" bodyend="1510"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa084bf5c17cafca1b4a6a89f3e7f78e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_asin_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_asin_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="139" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1511" bodyend="1513"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a44db7764239146a8f9adda4271706309" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_asin</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_asin</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="140" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1514" bodyend="1516"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aac4973a38184dd81109b62ceca6e9a88" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_sinh_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_sinh_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="141" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1517" bodyend="1519"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adb2a9ae4e3ae0d2ed295433cafe9d848" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_sinh</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_sinh</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="142" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1520" bodyend="1522"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad3153b842a64fb5d50a018d0f98c270b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_tan_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_tan_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="143" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1523" bodyend="1525"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adad00d4568f56b78f23f7ef1c50db97c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_tan</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_tan</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="144" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1526" bodyend="1528"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a158882c340411ce77b69b9973cfa93e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_atan_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_atan_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="145" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1529" bodyend="1531"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2c171abf3222001d88a7d5989ba196bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_atan</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_atan</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="146" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1532" bodyend="1534"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a770d19ac2f7a91c7d61189e0437d66f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_tanh_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_th_tanh_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="147" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1535" bodyend="1537"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afb42b0cc47b14615fd8e383d06afd69b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_th_tanh</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_th_tanh</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="148" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1538" bodyend="1540"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a024ce8347943530b120a8829e2ee91f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_erf_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_erf_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="149" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1541" bodyend="1543"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a499acfdfc97507d964caf5f828b0364c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_erf</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_erf</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="150" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1544" bodyend="1546"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa8a473941dfcd743f11262f5e4330d6e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_erfc_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_erfc_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="151" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1547" bodyend="1549"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7a84dbc995a578da3be9fcf309b0035c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_erfc</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_erfc</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="152" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1550" bodyend="1552"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abbfb20c1e1cdffb4ea31212b9d47242e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::erfinv_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>erfinv_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="153" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1553" bodyend="1555"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a693d96559dddb1337ed35295a6a316ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::erfinv</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>erfinv</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="154" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1556" bodyend="1558"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3db25908899fc60a7018719991787898" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_sqrt_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_sqrt_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="155" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1559" bodyend="1561"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab585dd8618425388176820364b463da8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_sqrt</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_sqrt</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="156" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1562" bodyend="1564"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3cf9ea77098cd11b16f1c5e55e2b690a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_rsqrt_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_rsqrt_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="157" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1565" bodyend="1567"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a841699a4ae34f219fd7ca433053948ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_rsqrt</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_rsqrt</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="158" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1568" bodyend="1570"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a86716c3483926c726f0aae3972d4a34f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_ceil_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_ceil_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="159" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1571" bodyend="1573"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7217961b098d5a584b25157da9dc18ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_ceil</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_ceil</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="160" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1574" bodyend="1576"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7fd82e2c29d3e8d27959fa31225badca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_floor_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_floor_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="161" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1577" bodyend="1579"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a996e8f3afd30ecb4fc173ee5aab2ab19" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_floor</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_floor</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="162" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1580" bodyend="1582"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6947a709217d7a8a3c10d0ca38bc5aeb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_round_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_round_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="163" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1583" bodyend="1585"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aadafbdcfb8f8943adefea1d3ed94d33d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_round</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_round</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="164" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1586" bodyend="1588"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6cfc250f3ecc0a8c00664bc3a2aa2d5f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_trunc_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>_trunc_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="165" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1589" bodyend="1591"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad4a39f22b5afe6a076a7f93660fc029d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_trunc</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_trunc</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="166" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1592" bodyend="1594"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2598e2420a48c305f3f4db86026c2e0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::frac_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>frac_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="167" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1595" bodyend="1597"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abb162a7a568ae1273f2483a624fc3558" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::frac</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>frac</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="168" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1598" bodyend="1600"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7180395a0e4e872df20eb81fd54edb98" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_var_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool unbiased=true, bool keepdim=false)</argsstring>
        <name>_th_var_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="169" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1601" bodyend="1603"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a52848b6eaad3915b20a575c47f8473cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_th_var</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool unbiased=true, bool keepdim=false)</argsstring>
        <name>_th_var</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="170" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1604" bodyend="1606"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5bcc2f15191777f1b3bd1cec5be9075e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_th_var</definition>
        <argsstring>(const Tensor &amp;self, bool unbiased=true)</argsstring>
        <name>_th_var</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="171" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1607" bodyend="1609"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adfc94ba4bab6dd36a5d60b99d19ad573" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_std_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool unbiased=true, bool keepdim=false)</argsstring>
        <name>_th_std_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="172" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1610" bodyend="1612"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3a48a6b3f61581c89f2d01366b9d09c4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_th_std</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool unbiased=true, bool keepdim=false)</argsstring>
        <name>_th_std</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="173" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1613" bodyend="1615"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aece81ae899735d705b74d75f2c23a423" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_th_std</definition>
        <argsstring>(const Tensor &amp;self, bool unbiased=true)</argsstring>
        <name>_th_std</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="174" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1616" bodyend="1618"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aad4e4fa63f24776f9c5c46dcbcb955a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::th_norm</definition>
        <argsstring>(const Tensor &amp;self, Scalar p=2)</argsstring>
        <name>th_norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="175" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1619" bodyend="1621"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6f0909e1668ef250e4b9e4d39d981d48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_norm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar p, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_norm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="176" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1622" bodyend="1624"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab44e72f282e2f6e0173172ebb457886b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_th_norm</definition>
        <argsstring>(const Tensor &amp;self, Scalar p, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="177" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1625" bodyend="1627"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7b5f671530097ae26061fbc60e29d925" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::renorm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar p, int64_t dim, Scalar maxnorm)</argsstring>
        <name>renorm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>maxnorm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="178" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1628" bodyend="1630"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a47f3eea93e2fe96d6642d95666d667f7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::renorm</definition>
        <argsstring>(const Tensor &amp;self, Scalar p, int64_t dim, Scalar maxnorm)</argsstring>
        <name>renorm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>maxnorm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="179" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1631" bodyend="1633"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a76a287212591e1c083ecc4fd77fcbbf1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::dist</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, Scalar p=2)</argsstring>
        <name>dist</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="180" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1634" bodyend="1636"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4b979ed72228756571e20a6faa40f79e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::reciprocal_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>reciprocal_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="181" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1637" bodyend="1639"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae1276a5cf73def9ec96ef520a7125642" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::reciprocal</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>reciprocal</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="182" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1640" bodyend="1642"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a72a43d9f90a5c71440cb4b219e61cdef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::neg_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>neg_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="183" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1643" bodyend="1645"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8a69cc08ef22c9e7cefaf0dac0674168" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::neg</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>neg</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="184" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1646" bodyend="1648"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae033b815ba29ee440047253fa54caf85" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::atan2_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>atan2_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="185" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1649" bodyend="1651"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a075df7032a897c6953004002998355b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::atan2</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>atan2</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="186" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1652" bodyend="1654"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a65260ffc9d416f3b5fab6113b811dd2d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_pow_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar exponent)</argsstring>
        <name>th_pow_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="187" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1655" bodyend="1657"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afcf849ced7373bf968daf6e07d1325b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::th_pow</definition>
        <argsstring>(const Tensor &amp;self, Scalar exponent)</argsstring>
        <name>th_pow</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="188" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1658" bodyend="1660"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab4693d35a1305956d8d7376d0e8c6d22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::pow_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;exponent)</argsstring>
        <name>pow_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="189" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1661" bodyend="1663"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a01a5e7ed3c49e907b3141fd2a202c30e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::pow</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;exponent)</argsstring>
        <name>pow</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="190" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1664" bodyend="1666"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a844581ac1920b35542e7741c842e2c59" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::pow_out</definition>
        <argsstring>(Tensor &amp;result, Scalar base, const Tensor &amp;self)</argsstring>
        <name>pow_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="191" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1667" bodyend="1669"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac84211eaa53b8a8f9b8096e5efaa6727" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::pow</definition>
        <argsstring>(Scalar base, const Tensor &amp;self)</argsstring>
        <name>pow</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="192" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1670" bodyend="1672"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a93f9be61987793e6a863648f6e629762" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::lerp_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;end, Scalar weight)</argsstring>
        <name>lerp_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="193" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1673" bodyend="1675"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3f3387e1de4c2b993466295e3180390f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::lerp</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;end, Scalar weight)</argsstring>
        <name>lerp</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="194" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1676" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acb45b9656507c42aa4d3653dbc5406ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_linspace_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end, int64_t steps=100)</argsstring>
        <name>_linspace_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>steps</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="195" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1679" bodyend="1681"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8ea881fbac77f83c9ff930419883646b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_logspace_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end, int64_t steps=100)</argsstring>
        <name>_logspace_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>steps</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="196" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1682" bodyend="1684"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1a01f484091e93861e7ff2ed93e8980b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::histc_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t bins=100, Scalar min=0, Scalar max=0)</argsstring>
        <name>histc_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>bins</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="197" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1685" bodyend="1687"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1aca43c07f66d859d01f86dbf5344cc7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::histc</definition>
        <argsstring>(const Tensor &amp;self, int64_t bins=100, Scalar min=0, Scalar max=0)</argsstring>
        <name>histc</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>bins</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="198" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1688" bodyend="1690"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4e12332d0701933abe8ade7dedcb1a34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_zero_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>th_zero_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="199" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1691" bodyend="1693"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5e11df2e6cf37f0b34cbf8ff75ee2a92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_sumall</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_sumall</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="200" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1694" bodyend="1696"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ace7cbe33e5b170a6f1b65ab70d42ec65" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_sum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_sum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="201" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1697" bodyend="1699"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3051fff154cf3cc939187a43e880cbea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_th_sum</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="202" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1700" bodyend="1702"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afb0f744af378a40c1f8830b15d3a395c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_prodall</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_prodall</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="203" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1703" bodyend="1705"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a073022509e244c7b9259d416804cac02" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_prod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_prod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="204" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1706" bodyend="1708"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2c2f09d4cad9d6a6b7db7cdd43dc90f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_th_prod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_th_prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="205" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1709" bodyend="1711"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a287cf7d309342178647aa18f2e279a4b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_cumsum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim)</argsstring>
        <name>_cumsum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="206" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1712" bodyend="1714"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a529a3d2839dfbdfad1ed2f9a85b71256" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cumsum</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>_cumsum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="207" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1715" bodyend="1717"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2530ee31800f5a6243c5e772379a0211" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_cumprod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim)</argsstring>
        <name>_cumprod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="208" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1718" bodyend="1720"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1e0ed0d19b8a654df9671b292357fd99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cumprod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>_cumprod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="209" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1721" bodyend="1723"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad4d9116f3bddca8985e08d670d920e23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sign_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>sign_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="210" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1724" bodyend="1726"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9624ed77d963cfbd2e580fa778770246" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sign</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>sign</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="211" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1727" bodyend="1729"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ade4208476ac706750804b51e9e86f975" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::trace</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>trace</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="212" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1730" bodyend="1732"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a20b5dc756dce9db6fbb5d423e2474842" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_add_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>th_add_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="213" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1733" bodyend="1735"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a49402a7bcb779b0eb9a577ef417007a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::th_add</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>th_add</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="214" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1736" bodyend="1738"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0b42e105cafab9afa42babceed0f6a1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::add_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other, Scalar alpha=1)</argsstring>
        <name>add_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="215" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1739" bodyend="1741"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a34787b400075a0b1880c726e5b1d4373" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::add</definition>
        <argsstring>(const Tensor &amp;self, Scalar other, Scalar alpha=1)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="216" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1742" bodyend="1744"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4bf660583ec4d83583847964f1b09bb8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_add_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>th_add_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="217" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1745" bodyend="1747"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0bdb6e0bc91c829a279b03198d92908d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_sub_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>th_sub_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="218" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1748" bodyend="1750"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a44614a6bfcad48570a6305fc8c5108ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::th_sub</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>th_sub</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="219" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1751" bodyend="1753"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6c2c533c7c201767480ecca4b18b3c28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sub_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other, Scalar alpha=1)</argsstring>
        <name>sub_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="220" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1754" bodyend="1756"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac18f4d0ca712c32acf17e9c848d9ef82" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sub</definition>
        <argsstring>(const Tensor &amp;self, Scalar other, Scalar alpha=1)</argsstring>
        <name>sub</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="221" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1757" bodyend="1759"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9cb0a02f17880e89f5e31c789ec5eb0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_sub_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>th_sub_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="222" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1760" bodyend="1762"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0ddd06290752e812de7299c6241a0f1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_mul_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>th_mul_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="223" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1763" bodyend="1765"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a711086e098848ce0ca4551ae0494da05" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::th_mul</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>th_mul</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="224" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1766" bodyend="1768"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a34e5f1734328ae82d02246df14724980" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_mul_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>th_mul_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="225" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1769" bodyend="1771"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5fae4faae29446c37bfad6e7e8579dba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::th_mul</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>th_mul</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="226" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1772" bodyend="1774"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae978302e62dac15647854cd2d1367852" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_mul_</definition>
        <argsstring>(Tensor &amp;self, Scalar other)</argsstring>
        <name>th_mul_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="227" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1775" bodyend="1777"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a91609fa22d35e401f05dc0254000f59f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_mul_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>th_mul_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="228" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1778" bodyend="1780"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab47ed683d8996013c2579e9d1fd75394" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_div_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>th_div_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="229" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1781" bodyend="1783"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab184d4abde9db3a9b5a67cbfeab501c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::th_div</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>th_div</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="230" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1784" bodyend="1786"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8ca1a91010896e6900df20f32a4dabbc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::div_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>div_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="231" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1787" bodyend="1789"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1c5daa7e60df6db3673363f8e0a14218" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::div</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>div</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="232" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1790" bodyend="1792"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5ec5da5bfdd269b3a931433f7f47e860" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_div_</definition>
        <argsstring>(Tensor &amp;self, Scalar other)</argsstring>
        <name>th_div_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="233" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1793" bodyend="1795"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a03af48e9f52cdb482c16cb9ac05340c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::fmod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>fmod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="234" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1796" bodyend="1798"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1d23e6340f4a8847ac3a1f30dd76ab7c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::fmod</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>fmod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="235" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1799" bodyend="1801"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afb07fd0996443b1d1f5c8e2533a9d309" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::fmod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>fmod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="236" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1802" bodyend="1804"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a02619538f17e6c51d1c2a4e504e8c5c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::fmod</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>fmod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="237" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1805" bodyend="1807"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a36f2f7630191c75aaf5c49e1a20d34d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::remainder_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>remainder_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="238" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1808" bodyend="1810"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a30481c60f9fed471020b8dbf827bdbe4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::remainder</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>remainder</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="239" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1811" bodyend="1813"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2269509ad6ff338e920bf3bc1afc943f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::remainder_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>remainder_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="240" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1814" bodyend="1816"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a34b780bf8b203f975b6b10625c9cb5fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::remainder</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>remainder</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="241" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1817" bodyend="1819"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a67c03f5ecbc24c9c34a674fdbd73da6d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_clamp_</definition>
        <argsstring>(Tensor &amp;self, Scalar min, Scalar max)</argsstring>
        <name>_th_clamp_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="242" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1820" bodyend="1822"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afb4b74b02066a53ec2979da9cb8f0ddb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_clamp_min_</definition>
        <argsstring>(Tensor &amp;self, Scalar min)</argsstring>
        <name>_th_clamp_min_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="243" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1823" bodyend="1825"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abe46183ecb4322064119519a33a90af1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_clamp_max_</definition>
        <argsstring>(Tensor &amp;self, Scalar max)</argsstring>
        <name>_th_clamp_max_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="244" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1826" bodyend="1828"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae2bb1ccd1ff89e7600c3c4387e6ec489" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_dot</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;tensor)</argsstring>
        <name>_dot</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="245" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1829" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aca417408411849a30b11d6996fd6b4be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::tril_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t diagonal=0)</argsstring>
        <name>tril_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>diagonal</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="246" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1832" bodyend="1834"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a95349c5b58123780bfc8a10106c7b796" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::tril</definition>
        <argsstring>(const Tensor &amp;self, int64_t diagonal=0)</argsstring>
        <name>tril</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>diagonal</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="247" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1835" bodyend="1837"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a67111a465028c66998013936a6e44134" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::triu_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t diagonal=0)</argsstring>
        <name>triu_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>diagonal</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="248" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1838" bodyend="1840"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6e00b525944fe21a56efb4d5588e8484" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::triu</definition>
        <argsstring>(const Tensor &amp;self, int64_t diagonal=0)</argsstring>
        <name>triu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>diagonal</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="249" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1841" bodyend="1843"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae7d37f55c22f9fe202303200a37136dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::cross_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other, int64_t dim=-1)</argsstring>
        <name>cross_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="250" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1844" bodyend="1846"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac43b7635be946786927a406cf343ff5d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cross</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, int64_t dim=-1)</argsstring>
        <name>cross</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="251" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1847" bodyend="1849"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a28a429a2253c99f854afa3db6b482d68" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::diag_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t diagonal=0)</argsstring>
        <name>diag_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>diagonal</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="252" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1850" bodyend="1852"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af9d5ff4161c027d2b8d6500633c200d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::diag</definition>
        <argsstring>(const Tensor &amp;self, int64_t diagonal=0)</argsstring>
        <name>diag</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>diagonal</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="253" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1853" bodyend="1855"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaa95e058fc8074f6ab560fed7b8cbdaa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_addmm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>th_addmm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="254" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1856" bodyend="1858"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2ea3025d6732b09f878a6fb5a3deae16" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::th_addmm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>th_addmm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="255" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1859" bodyend="1861"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a436f62686a642f1d8b5a69fb2ad81520" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::th_addmm_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>th_addmm_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="256" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1862" bodyend="1864"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9b9801f8495e2fe9f98782f7546048c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_addmv_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat, const Tensor &amp;vec, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>_addmv_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="257" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1865" bodyend="1867"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae18ff5da90112d182d0a4efceff3a69e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_addmv</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat, const Tensor &amp;vec, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>_addmv</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="258" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1868" bodyend="1870"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1c27451e00014413737c04255f273d1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_addr_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;vec1, const Tensor &amp;vec2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>_addr_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="259" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1871" bodyend="1873"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a98a4bc33b928bef509197714a6553dd0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_addr</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;vec1, const Tensor &amp;vec2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>_addr</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="260" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1874" bodyend="1876"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0c7367e5080051c46662aa3e42aee148" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_ger_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;vec2)</argsstring>
        <name>_ger_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="261" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1877" bodyend="1879"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4c627ff8df146658c6e4cb7f27a518d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_ger</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;vec2)</argsstring>
        <name>_ger</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="262" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1880" bodyend="1882"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a98e3db4130a34db74e32858bfc92a2fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_mv_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;vec)</argsstring>
        <name>_mv_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="263" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1883" bodyend="1885"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a488b80e8044335db5d48a2b02d92cd37" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_mv</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;vec)</argsstring>
        <name>_mv</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="264" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1886" bodyend="1888"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aad7fd1a80964b811be983018178fad6c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_mm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat2)</argsstring>
        <name>_mm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="265" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1889" bodyend="1891"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a65490f93354876ed5df1088f90b5bd09" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_mm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat2)</argsstring>
        <name>_mm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="266" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1892" bodyend="1894"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aeb6e7d38fe35597cdeced614b18f1733" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::bmm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat2)</argsstring>
        <name>bmm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="267" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1895" bodyend="1897"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aac51f71f807ca70fd210814114520c34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::bmm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat2)</argsstring>
        <name>bmm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="268" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1898" bodyend="1900"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a002ad29d92addc35c29b475a985e7fc8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::addbmm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;batch1, const Tensor &amp;batch2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>addbmm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>batch1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>batch2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="269" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1901" bodyend="1903"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aed6a03a8e28b107b5f8eb399c0ea341b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::addbmm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;batch1, const Tensor &amp;batch2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>addbmm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>batch1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>batch2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="270" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1904" bodyend="1906"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a80eb7461f95c65541431baa4143f9dab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::baddbmm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;batch1, const Tensor &amp;batch2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>baddbmm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>batch1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>batch2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="271" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1907" bodyend="1909"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a440572d9374ba82b7b084f6b36f6699c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::baddbmm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;batch1, const Tensor &amp;batch2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>baddbmm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>batch1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>batch2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="272" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1910" bodyend="1912"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab5ad41fd7958c57f4953f702f130333e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::addcmul_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;tensor1, const Tensor &amp;tensor2, Scalar value=1)</argsstring>
        <name>addcmul_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="273" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1913" bodyend="1915"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1ecc43dd8fe72b3698faabe42a4479b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::addcmul</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;tensor1, const Tensor &amp;tensor2, Scalar value=1)</argsstring>
        <name>addcmul</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="274" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1916" bodyend="1918"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab3106988cc343c1f06ace3f37b661414" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::addcdiv_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;tensor1, const Tensor &amp;tensor2, Scalar value=1)</argsstring>
        <name>addcdiv_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="275" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1919" bodyend="1921"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae229c0433a9241b5a066402f6a7f39b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::addcdiv</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;tensor1, const Tensor &amp;tensor2, Scalar value=1)</argsstring>
        <name>addcdiv</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="276" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1922" bodyend="1924"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adf5c8dbe375de81a956b663d3b34609e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::_gesv_single_out</definition>
        <argsstring>(Tensor &amp;solution, Tensor &amp;lu, const Tensor &amp;self, const Tensor &amp;A)</argsstring>
        <name>_gesv_single_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>solution</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>lu</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="277" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1925" bodyend="1927"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae07a72e9768506deb11f2103ff25d046" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::_gesv_single</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;A)</argsstring>
        <name>_gesv_single</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="278" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1928" bodyend="1930"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab3a0e636b5646bf3adfebe8f31285d14" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::gels_out</definition>
        <argsstring>(Tensor &amp;res1, Tensor &amp;res2, const Tensor &amp;self, const Tensor &amp;A)</argsstring>
        <name>gels_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="279" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1931" bodyend="1933"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adc944554902a28094e33c76b860a9eb6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::gels</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;A)</argsstring>
        <name>gels</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="280" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1934" bodyend="1936"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afa1abdbc7c0d3499f51f7de00c355f8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::trtrs_out</definition>
        <argsstring>(Tensor &amp;res1, Tensor &amp;res2, const Tensor &amp;self, const Tensor &amp;A, bool upper=true, bool transpose=false, bool unitriangular=false)</argsstring>
        <name>trtrs_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>transpose</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>unitriangular</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="281" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1937" bodyend="1939"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a658b6b15af891c6da39666cd898437bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::trtrs</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;A, bool upper=true, bool transpose=false, bool unitriangular=false)</argsstring>
        <name>trtrs</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>transpose</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>unitriangular</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="282" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1940" bodyend="1942"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a62fee9aa673c1fe7c705d1102e42ef45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::symeig_out</definition>
        <argsstring>(Tensor &amp;res1, Tensor &amp;res2, const Tensor &amp;self, bool eigenvectors=false, bool upper=true)</argsstring>
        <name>symeig_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>eigenvectors</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="283" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1943" bodyend="1945"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1f1a0f18bd5203e5b9a2e2c9e1b58abb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::symeig</definition>
        <argsstring>(const Tensor &amp;self, bool eigenvectors=false, bool upper=true)</argsstring>
        <name>symeig</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>eigenvectors</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="284" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1946" bodyend="1948"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af6ad4df44e040a7f78aedc63d1276e01" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::eig_out</definition>
        <argsstring>(Tensor &amp;res1, Tensor &amp;res2, const Tensor &amp;self, bool eigenvectors=false)</argsstring>
        <name>eig_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>eigenvectors</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="285" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1949" bodyend="1951"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad66783f082051f86d1330fdf2aac72c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::eig</definition>
        <argsstring>(const Tensor &amp;self, bool eigenvectors=false)</argsstring>
        <name>eig</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>eigenvectors</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="286" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1952" bodyend="1954"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab4fb5626219117e9b2c3413a0c51e44e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::svd_out</definition>
        <argsstring>(Tensor &amp;res1, Tensor &amp;res2, Tensor &amp;res3, const Tensor &amp;self, bool some=true)</argsstring>
        <name>svd_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res2</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res3</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>some</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="287" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1955" bodyend="1957"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a86755bfd7748e0dc084ea61aea1c156e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::svd</definition>
        <argsstring>(const Tensor &amp;self, bool some=true)</argsstring>
        <name>svd</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>some</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="288" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1958" bodyend="1960"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a95d5b205064d27ff8db1b0303d15be87" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_getri_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self)</argsstring>
        <name>_getri_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="289" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1961" bodyend="1963"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac8bff0bc8446962c2049b33395e0b285" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_getri</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_getri</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="290" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1964" bodyend="1966"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa31756e5c0c9f850d38ed3cb88574d99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::potrf_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, bool upper=true)</argsstring>
        <name>potrf_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="291" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1967" bodyend="1969"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab6bf9578f41c78dc563c0dda57230beb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::potrf</definition>
        <argsstring>(const Tensor &amp;self, bool upper=true)</argsstring>
        <name>potrf</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="292" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1970" bodyend="1972"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afcb41f63f5d16ed7a67fa4b8e5b55884" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::potrs_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;input2, bool upper=true)</argsstring>
        <name>potrs_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="293" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1973" bodyend="1975"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaf1c68687df6aa89bac18a05033c297b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::potrs</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;input2, bool upper=true)</argsstring>
        <name>potrs</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="294" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1976" bodyend="1978"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac59d374f5914c7bd2ce167dd5c4986e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::potri_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, bool upper=true)</argsstring>
        <name>potri_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="295" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1979" bodyend="1981"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a20be88185bc0161ea9e4fef5c2dab8ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::potri</definition>
        <argsstring>(const Tensor &amp;self, bool upper=true)</argsstring>
        <name>potri</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="296" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1982" bodyend="1984"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9c452d892aba14936203ae908f4d355b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::pstrf_out</definition>
        <argsstring>(Tensor &amp;res1, Tensor &amp;res2, const Tensor &amp;self, bool upper=true, Scalar tol=-1)</argsstring>
        <name>pstrf_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>tol</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="297" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1985" bodyend="1987"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abeedfb82335a01adaa7ff79d7c548bf9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::pstrf</definition>
        <argsstring>(const Tensor &amp;self, bool upper=true, Scalar tol=-1)</argsstring>
        <name>pstrf</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>upper</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>tol</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="298" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1988" bodyend="1990"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac7f37cf8e5a2838dca32682179f5e128" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::qr_out</definition>
        <argsstring>(Tensor &amp;res1, Tensor &amp;res2, const Tensor &amp;self)</argsstring>
        <name>qr_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="299" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1991" bodyend="1993"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a06a50cd6c0c8f8feb2e0c1dd0456b114" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::qr</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>qr</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="300" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1994" bodyend="1996"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aab77359831604661b0e5a771101fbe09" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::geqrf_out</definition>
        <argsstring>(Tensor &amp;res1, Tensor &amp;res2, const Tensor &amp;self)</argsstring>
        <name>geqrf_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>res2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="301" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1997" bodyend="1999"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a43fbba707930513ea5da85593dd53a41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::geqrf</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>geqrf</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="302" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2000" bodyend="2002"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0ee451ac2d0a2b7c57aa5202e6317c4d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::orgqr_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;input2)</argsstring>
        <name>orgqr_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="303" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2003" bodyend="2005"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac8f1ad85c8d0e71f4ef60e9f766ee4fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::orgqr</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;input2)</argsstring>
        <name>orgqr</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="304" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2006" bodyend="2008"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a886cdee77b39ce1b11846d9af374074f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::ormqr_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;input2, const Tensor &amp;input3, bool left=true, bool transpose=false)</argsstring>
        <name>ormqr_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input3</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>left</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>transpose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="305" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2009" bodyend="2011"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1e370cd7d9733b6f09a3927342f11dd6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::ormqr</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;input2, const Tensor &amp;input3, bool left=true, bool transpose=false)</argsstring>
        <name>ormqr</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input3</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>left</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>transpose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="306" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2012" bodyend="2014"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a71e0d02912f3a5a3c077a0ac38f42555" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::btrifact_out</definition>
        <argsstring>(Tensor &amp;result, Tensor &amp;pivots, const Tensor &amp;self, bool pivot=true)</argsstring>
        <name>btrifact_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>pivots</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pivot</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="307" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2015" bodyend="2017"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa16011d5bb49111219938a6e1c128981" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::btrifact</definition>
        <argsstring>(const Tensor &amp;self, bool pivot=true)</argsstring>
        <name>btrifact</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pivot</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="308" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2018" bodyend="2020"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0fda33d0ac8f664f15dc800eb7e258a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::btrifact_with_info_out</definition>
        <argsstring>(Tensor &amp;result, Tensor &amp;pivots, Tensor &amp;info, const Tensor &amp;self, bool pivot=true)</argsstring>
        <name>btrifact_with_info_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>pivots</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pivot</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="309" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2021" bodyend="2023"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a36ed726576da0ff94bfcf79720131a7d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::btrifact_with_info</definition>
        <argsstring>(const Tensor &amp;self, bool pivot=true)</argsstring>
        <name>btrifact_with_info</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pivot</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="310" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2024" bodyend="2026"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af6a690dde456d943e2e42405ec1d8a0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::btrisolve_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;LU_data, const Tensor &amp;LU_pivots)</argsstring>
        <name>btrisolve_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>LU_data</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>LU_pivots</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="311" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2027" bodyend="2029"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae98103d240f43a6312cea005dcaa0d87" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::btrisolve</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;LU_data, const Tensor &amp;LU_pivots)</argsstring>
        <name>btrisolve</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>LU_data</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>LU_pivots</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="312" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2030" bodyend="2032"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a57fb48262ff2fee2b0daca653011b4bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::multinomial_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t num_samples, bool replacement=false, Generator *generator=nullptr)</argsstring>
        <name>multinomial_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_samples</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>replacement</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="313" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2033" bodyend="2035"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac675eda9cae4819bc9311097af498b67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::multinomial</definition>
        <argsstring>(const Tensor &amp;self, int64_t num_samples, bool replacement=false, Generator *generator=nullptr)</argsstring>
        <name>multinomial</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_samples</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>replacement</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="314" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2036" bodyend="2038"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a221dbb9b709b701c8c19e3923ed63fae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::normal_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;mean, double std=1, Generator *generator=nullptr)</argsstring>
        <name>normal_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>double</type>
          <declname>std</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="315" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2039" bodyend="2041"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0a688eac89d39cc2d841feb51f15dd7b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::normal</definition>
        <argsstring>(const Tensor &amp;mean, double std=1, Generator *generator=nullptr)</argsstring>
        <name>normal</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>double</type>
          <declname>std</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="316" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2042" bodyend="2044"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a03dc26976cc54762256fdf9e2810c0c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::normal_out</definition>
        <argsstring>(Tensor &amp;output, double mean, const Tensor &amp;std, Generator *generator=nullptr)</argsstring>
        <name>normal_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>std</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="317" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2045" bodyend="2047"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af8598b49e964831d29ee519a45eb4ed3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::normal</definition>
        <argsstring>(double mean, const Tensor &amp;std, Generator *generator=nullptr)</argsstring>
        <name>normal</name>
        <param>
          <type>double</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>std</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="318" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2048" bodyend="2050"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2a9169215594b2c1a52ef33f57674467" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::normal_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;mean, const Tensor &amp;std, Generator *generator=nullptr)</argsstring>
        <name>normal_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>std</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="319" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2051" bodyend="2053"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac01b0a0fbfd6fbe2a9cc094c9fc92f71" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::normal</definition>
        <argsstring>(const Tensor &amp;mean, const Tensor &amp;std, Generator *generator=nullptr)</argsstring>
        <name>normal</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>std</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="320" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2054" bodyend="2056"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa404167bf6efc619632b9d69b8e33d77" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_th_bernoulli_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Generator *generator=nullptr)</argsstring>
        <name>_th_bernoulli_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="321" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2057" bodyend="2059"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afdd2524fd59a6b3d7d51cd280cb768d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_th_bernoulli</definition>
        <argsstring>(const Tensor &amp;self, Generator *generator=nullptr)</argsstring>
        <name>_th_bernoulli</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="322" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2060" bodyend="2062"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a58111a738b486ff50a89249549470338" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_dirichlet_grad_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;x, const Tensor &amp;alpha, const Tensor &amp;total)</argsstring>
        <name>_dirichlet_grad_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>total</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="323" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2063" bodyend="2065"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a11e59fec4bbd81c0755cf511004c164e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_dirichlet_grad</definition>
        <argsstring>(const Tensor &amp;x, const Tensor &amp;alpha, const Tensor &amp;total)</argsstring>
        <name>_dirichlet_grad</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>total</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="324" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2066" bodyend="2068"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8d97e430368f93e3b26e36cbccfd09ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::alias</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>alias</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="325" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2069" bodyend="2071"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aed1bc96954e29fc764cebe5c26c76ea6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_cat_out</definition>
        <argsstring>(Tensor &amp;self, TensorList tensors, int64_t dim=0)</argsstring>
        <name>_cat_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="326" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2072" bodyend="2074"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af006bea61c67eb889e54ab26997bb715" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cat</definition>
        <argsstring>(TensorList tensors, int64_t dim=0)</argsstring>
        <name>_cat</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="327" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2075" bodyend="2077"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af0711b2fa95eab3ec64d8111d1a4c185" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::binary_cross_entropy_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight={}, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>binary_cross_entropy_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="328" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2078" bodyend="2080"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9d3cb0e29fd60c53fa59116469e0922e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::binary_cross_entropy</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight={}, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>binary_cross_entropy</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="329" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2081" bodyend="2083"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae40fda5a7749a5d56b87f6ecf2bdee75" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::binary_cross_entropy_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight, int64_t reduction)</argsstring>
        <name>binary_cross_entropy_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="330" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2084" bodyend="2086"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa8f13d8772abc5b439c8d7a4a5e1d7e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::binary_cross_entropy_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight, int64_t reduction)</argsstring>
        <name>binary_cross_entropy_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="331" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2087" bodyend="2089"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad536c217a1ee500d54adf66879cca230" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::binary_cross_entropy_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight, int64_t reduction)</argsstring>
        <name>binary_cross_entropy_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="332" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2090" bodyend="2092"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaaf57aabb485bcd68dad64b6ef632538" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::binary_cross_entropy_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight, int64_t reduction)</argsstring>
        <name>binary_cross_entropy_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="333" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2093" bodyend="2095"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aafa9255e4986409bfb8bd48387bd2753" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::kl_div_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>kl_div_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="334" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2096" bodyend="2098"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5d189cdb49389ae3fe6ac8320fb9fe10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::kl_div</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>kl_div</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="335" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2099" bodyend="2101"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5702b645a6a91cafa7cbae7273ae6ea6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::kl_div_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>kl_div_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="336" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2102" bodyend="2104"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1f9e2e600e58fa9745b1ae43ee1e3a7e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::kl_div_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>kl_div_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="337" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2105" bodyend="2107"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5f1a6c92f4074deec7ea6f1b3a1de61e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::kl_div_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>kl_div_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="338" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2108" bodyend="2110"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a955f208e28ade2e50530a1b0405574d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::kl_div_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>kl_div_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="339" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2111" bodyend="2113"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0e84654b3b9ee2dbd86d30735cc5ef7c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::l1_loss_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>l1_loss_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="340" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2114" bodyend="2116"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a46ce0e50ed93da82e34db0471ce3eff2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::l1_loss</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>l1_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="341" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2117" bodyend="2119"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a85a209f9f76cb9365f6773ae888fbe49" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::l1_loss_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>l1_loss_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="342" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2120" bodyend="2122"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab033ee21cf6681f602bf9813e300d7f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::l1_loss_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>l1_loss_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="343" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2123" bodyend="2125"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8fd6709c548f5ff841829883c8b13287" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::l1_loss_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>l1_loss_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="344" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2126" bodyend="2128"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a379c37b5c7f2c030c73e6398abbc8075" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::l1_loss_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>l1_loss_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="345" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2129" bodyend="2131"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6574e48aabf92d3dd811a9fc9a21c921" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::mse_loss_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>mse_loss_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="346" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2132" bodyend="2134"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a36a7bf29b77bb64f5f7032f81b8380f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mse_loss</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>mse_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="347" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2135" bodyend="2137"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abfbbaf311f74e85d1ba18a9b9b596c3d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::mse_loss_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>mse_loss_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="348" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2138" bodyend="2140"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a156c87c77316a57401c9f45805885457" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mse_loss_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>mse_loss_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="349" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2141" bodyend="2143"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8ef3bfe0ae86e83f74d7cc5b14e9093e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::mse_loss_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>mse_loss_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="350" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2144" bodyend="2146"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6705d7a0fb89320786f67740aff10021" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mse_loss_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>mse_loss_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="351" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2147" bodyend="2149"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9ef4bb48b29cedbff9101c35a5063175" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::multi_margin_loss_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, Scalar p=1, Scalar margin=1, const Tensor &amp;weight={}, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>multi_margin_loss_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>margin</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="352" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2150" bodyend="2152"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2d67e21acdc01f1058ffb9a5f6c64e97" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::multi_margin_loss</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, Scalar p=1, Scalar margin=1, const Tensor &amp;weight={}, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>multi_margin_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>margin</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="353" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2153" bodyend="2155"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af4932c1ae0211f31e0fdbcdb434f8872" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::multi_margin_loss_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, Scalar p, Scalar margin, const Tensor &amp;weight, int64_t reduction)</argsstring>
        <name>multi_margin_loss_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>margin</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="354" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2156" bodyend="2158"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a16153b2f9b9822c2faf35a98dd1a6a97" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::multi_margin_loss_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, Scalar p, Scalar margin, const Tensor &amp;weight, int64_t reduction)</argsstring>
        <name>multi_margin_loss_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>margin</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="355" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2159" bodyend="2161"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad209056a4a3e7c2a0e43a9ddaa951e70" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::multi_margin_loss_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, Scalar p, Scalar margin, const Tensor &amp;weight, int64_t reduction)</argsstring>
        <name>multi_margin_loss_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>margin</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="356" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2162" bodyend="2164"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3662ba953299d9084cec882b3eb6a86a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::multi_margin_loss_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, Scalar p, Scalar margin, const Tensor &amp;weight, int64_t reduction)</argsstring>
        <name>multi_margin_loss_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>margin</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="357" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2165" bodyend="2167"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0c55e8cb55b622746f1790a6b089887c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::multilabel_margin_loss_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>multilabel_margin_loss_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="358" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2168" bodyend="2170"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acbf7b5d7c6c8011ddd16e4fe37a5e6ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::multilabel_margin_loss</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>multilabel_margin_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="359" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2171" bodyend="2173"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6604d244cb963127e409b0da19ab020d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::multilabel_margin_loss_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;is_target, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>multilabel_margin_loss_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>is_target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="360" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2174" bodyend="2176"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a182a09a9e4c47a747727d068d8213c1d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::multilabel_margin_loss_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>multilabel_margin_loss_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="361" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2177" bodyend="2179"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0f177afb9ab813a76952297f89d484a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::multilabel_margin_loss_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction, const Tensor &amp;is_target)</argsstring>
        <name>multilabel_margin_loss_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>is_target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="362" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2180" bodyend="2182"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9fe17a823d823313489d4f0f6bb5db1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::multilabel_margin_loss_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction, const Tensor &amp;is_target)</argsstring>
        <name>multilabel_margin_loss_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>is_target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="363" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2183" bodyend="2185"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad5c308c2a8a0d8172ae413d927e18f40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::nll_loss_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight={}, int64_t reduction=Reduction::ElementwiseMean, int64_t ignore_index=-100)</argsstring>
        <name>nll_loss_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ignore_index</declname>
          <defval>-100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="364" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2186" bodyend="2188"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa7fbcdde9992b26e0eb2d7b411026100" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::nll_loss</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight={}, int64_t reduction=Reduction::ElementwiseMean, int64_t ignore_index=-100)</argsstring>
        <name>nll_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ignore_index</declname>
          <defval>-100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="365" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2189" bodyend="2191"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad0c4c2e4699bff9f7c90ebc0b67a37bc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::nll_loss_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;total_weight, const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight, int64_t reduction, int64_t ignore_index)</argsstring>
        <name>nll_loss_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>total_weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ignore_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="366" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2192" bodyend="2194"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a20b025678f4ceb8778c8fb072cc01da1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::nll_loss_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight, int64_t reduction, int64_t ignore_index)</argsstring>
        <name>nll_loss_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ignore_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="367" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2195" bodyend="2197"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab43b04033ae2e75fa835832a75496eac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::nll_loss_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight, int64_t reduction, int64_t ignore_index, const Tensor &amp;total_weight)</argsstring>
        <name>nll_loss_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ignore_index</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>total_weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="368" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2198" bodyend="2200"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4b4577848a13d0a0df479d485bdb55d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::nll_loss_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight, int64_t reduction, int64_t ignore_index, const Tensor &amp;total_weight)</argsstring>
        <name>nll_loss_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ignore_index</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>total_weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="369" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2201" bodyend="2203"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac6981aa1387440bbb1d7aa49bf0c8080" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::nll_loss2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight={}, int64_t reduction=Reduction::ElementwiseMean, int64_t ignore_index=-100)</argsstring>
        <name>nll_loss2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ignore_index</declname>
          <defval>-100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="370" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2204" bodyend="2206"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaafddf8d788d563827876b2b2d53968c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::nll_loss2d</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight={}, int64_t reduction=Reduction::ElementwiseMean, int64_t ignore_index=-100)</argsstring>
        <name>nll_loss2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ignore_index</declname>
          <defval>-100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="371" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2207" bodyend="2209"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac65eb696d44fac34ed1f0540c02abf52" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::nll_loss2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;total_weight, const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight, int64_t reduction, int64_t ignore_index)</argsstring>
        <name>nll_loss2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>total_weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ignore_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="372" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2210" bodyend="2212"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a02fd0c9f4412e546adb324321a335da4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::nll_loss2d_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight, int64_t reduction, int64_t ignore_index)</argsstring>
        <name>nll_loss2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ignore_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="373" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2213" bodyend="2215"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a884867e5a206b35091913a9a387c2d23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::nll_loss2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight, int64_t reduction, int64_t ignore_index, const Tensor &amp;total_weight)</argsstring>
        <name>nll_loss2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ignore_index</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>total_weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="374" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2216" bodyend="2218"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3a8be2bdb7c6f7ebd4a64add6463eaf4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::nll_loss2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, const Tensor &amp;weight, int64_t reduction, int64_t ignore_index, const Tensor &amp;total_weight)</argsstring>
        <name>nll_loss2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ignore_index</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>total_weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="375" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2219" bodyend="2221"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4d56faf0e4b06821f7e25fa9f0af9168" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::smooth_l1_loss_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>smooth_l1_loss_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="376" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2222" bodyend="2224"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a17da8cec6dd4960ea765245a036d93f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::smooth_l1_loss</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>smooth_l1_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="377" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2225" bodyend="2227"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3f6824ecfde5c288bf8acc80725c33b1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::smooth_l1_loss_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>smooth_l1_loss_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="378" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2228" bodyend="2230"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abf4a3df2fa872337ec2d81d542b321e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::smooth_l1_loss_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>smooth_l1_loss_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="379" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2231" bodyend="2233"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3a4f97a55e9a449c56cb2f6a1cf5d487" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::smooth_l1_loss_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>smooth_l1_loss_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="380" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2234" bodyend="2236"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a86d47d767b3430f15977bb86787cc6fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::smooth_l1_loss_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>smooth_l1_loss_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="381" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2237" bodyend="2239"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab05963b14ed8a3174cf08c7f27fe00b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::soft_margin_loss_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>soft_margin_loss_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="382" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2240" bodyend="2242"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a34090c3d41b6148e895ed23b64581bbb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::soft_margin_loss</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>soft_margin_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="383" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2243" bodyend="2245"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aff4106e19bb5e60296266a2600625150" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::soft_margin_loss_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>soft_margin_loss_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="384" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2246" bodyend="2248"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a04782f508769ee7127c2b5d16721149d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::soft_margin_loss_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>soft_margin_loss_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="385" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2249" bodyend="2251"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad3047c6c4044c804146b5ac4e2d6b066" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::soft_margin_loss_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>soft_margin_loss_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="386" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2252" bodyend="2254"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab61b43bff4f3c5d6303e4ba3ef766bb4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::soft_margin_loss_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;target, int64_t reduction)</argsstring>
        <name>soft_margin_loss_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="387" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2255" bodyend="2257"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a07e748d526149535658f0df4cd1ce7c6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::elu_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Scalar alpha=1, Scalar scale=1)</argsstring>
        <name>elu_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>scale</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="388" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2258" bodyend="2260"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2c9bdf60264050f7d8037d5e54c3d544" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::elu</definition>
        <argsstring>(const Tensor &amp;self, Scalar alpha=1, Scalar scale=1)</argsstring>
        <name>elu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>scale</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="389" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2261" bodyend="2263"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a81f00ea4e3dfc945cc98a07c1ad66c98" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::elu_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Scalar alpha, Scalar scale)</argsstring>
        <name>elu_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="390" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2264" bodyend="2266"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aecad611995903de8e839f56a00558036" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::elu_forward</definition>
        <argsstring>(const Tensor &amp;self, Scalar alpha, Scalar scale)</argsstring>
        <name>elu_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="391" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2267" bodyend="2269"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6479fa449b6b6c14fa00b1a91a5d387e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::elu_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, Scalar alpha, Scalar scale, const Tensor &amp;output)</argsstring>
        <name>elu_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="392" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2270" bodyend="2272"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abe0b40d7c5f5c6181820671d95a785be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::elu_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, Scalar alpha, Scalar scale, const Tensor &amp;output)</argsstring>
        <name>elu_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="393" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2273" bodyend="2275"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aef714516f3db46a7866e16aadb13394a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::elu_</definition>
        <argsstring>(Tensor &amp;self, Scalar alpha=1, Scalar scale=1)</argsstring>
        <name>elu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>scale</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="394" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2276" bodyend="2278"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a90acfbad3d0d7418f2790015657fa0f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::elu_forward_</definition>
        <argsstring>(Tensor &amp;self, Scalar alpha, Scalar scale)</argsstring>
        <name>elu_forward_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="395" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2279" bodyend="2281"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acd9cb794fafc09bb75677508031f364d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::glu_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, int64_t dim=-1)</argsstring>
        <name>glu_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="396" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2282" bodyend="2284"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9013f8a860be31b6b2af07bf99309740" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::glu</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim=-1)</argsstring>
        <name>glu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="397" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2285" bodyend="2287"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a987633010e18f3cc6ba71e964ebc3f45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::glu_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, int64_t dim)</argsstring>
        <name>glu_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="398" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2288" bodyend="2290"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0e4393af517758fccf74f3caa800fa75" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::glu_forward</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>glu_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="399" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2291" bodyend="2293"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae9c5a6a261613ac663d0ec2e76677833" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::glu_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, int64_t dim)</argsstring>
        <name>glu_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="400" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2294" bodyend="2296"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab8c306863f40913b2c747717769fb2d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::glu_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, int64_t dim)</argsstring>
        <name>glu_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="401" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2297" bodyend="2299"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aba4d7e987f8b05d9118f0e47b2f9fa37" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::hardtanh_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Scalar min_val=-1, Scalar max_val=1)</argsstring>
        <name>hardtanh_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min_val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max_val</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="402" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2300" bodyend="2302"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad86e1a19d95e6c3e2e4a33cc82c8099d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hardtanh</definition>
        <argsstring>(const Tensor &amp;self, Scalar min_val=-1, Scalar max_val=1)</argsstring>
        <name>hardtanh</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min_val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max_val</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="403" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2303" bodyend="2305"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5164c1ac9d8b554e3fc82017f53a1c4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::hardtanh_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Scalar min_val, Scalar max_val)</argsstring>
        <name>hardtanh_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min_val</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="404" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2306" bodyend="2308"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0b2d7fbedaf230d80aada36ee7be7b73" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hardtanh_forward</definition>
        <argsstring>(const Tensor &amp;self, Scalar min_val, Scalar max_val)</argsstring>
        <name>hardtanh_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min_val</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="405" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2309" bodyend="2311"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aba12416f3936ea19cd9f28eb9599fe11" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::hardtanh_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, Scalar min_val, Scalar max_val)</argsstring>
        <name>hardtanh_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min_val</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="406" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2312" bodyend="2314"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2bef11f4afea827e7c98ac81348a288a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hardtanh_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, Scalar min_val, Scalar max_val)</argsstring>
        <name>hardtanh_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min_val</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="407" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2315" bodyend="2317"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a03521b84b8a70707f046a8aa01294895" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::hardtanh_</definition>
        <argsstring>(Tensor &amp;self, Scalar min_val=-1, Scalar max_val=1)</argsstring>
        <name>hardtanh_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min_val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max_val</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="408" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2318" bodyend="2320"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a64dbefb769937abd7f631e953edbcd7c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::hardtanh_forward_</definition>
        <argsstring>(Tensor &amp;self, Scalar min_val, Scalar max_val)</argsstring>
        <name>hardtanh_forward_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min_val</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="409" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2321" bodyend="2323"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a60e7b8a328374a0e46c46d1c855ab19b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::leaky_relu_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Scalar negative_slope=0.01)</argsstring>
        <name>leaky_relu_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>negative_slope</declname>
          <defval>0.01</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="410" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2324" bodyend="2326"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a611b02cd0467723b6f5dd1ee8a7727b1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::leaky_relu</definition>
        <argsstring>(const Tensor &amp;self, Scalar negative_slope=0.01)</argsstring>
        <name>leaky_relu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>negative_slope</declname>
          <defval>0.01</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="411" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2327" bodyend="2329"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a67b46bf1fa6765cab14459e332eb7711" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::leaky_relu_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Scalar negative_slope)</argsstring>
        <name>leaky_relu_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>negative_slope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="412" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2330" bodyend="2332"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ace8b880b577fe73f0d25150833f86761" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::leaky_relu_forward</definition>
        <argsstring>(const Tensor &amp;self, Scalar negative_slope)</argsstring>
        <name>leaky_relu_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>negative_slope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="413" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2333" bodyend="2335"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1f6114f27b68237007b9b988ba6489f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::leaky_relu_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, Scalar negative_slope)</argsstring>
        <name>leaky_relu_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>negative_slope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="414" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2336" bodyend="2338"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad835fbcfcf43ba134da481a24afcc1ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::leaky_relu_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, Scalar negative_slope)</argsstring>
        <name>leaky_relu_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>negative_slope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="415" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2339" bodyend="2341"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a795b2e53edef5e077d3aff755369aff2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::leaky_relu_</definition>
        <argsstring>(Tensor &amp;self, Scalar negative_slope=0.01)</argsstring>
        <name>leaky_relu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>negative_slope</declname>
          <defval>0.01</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="416" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2342" bodyend="2344"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2db3e04cc70b1f0a421319f4fb75dacb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::leaky_relu_forward_</definition>
        <argsstring>(Tensor &amp;self, Scalar negative_slope)</argsstring>
        <name>leaky_relu_forward_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>negative_slope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="417" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2345" bodyend="2347"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a654feaca60e8142713e83183b69e848f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::log_sigmoid_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self)</argsstring>
        <name>log_sigmoid_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="418" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2348" bodyend="2350"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7bb9887208fe2f33a53f81d971c7f877" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::log_sigmoid</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>log_sigmoid</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="419" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2351" bodyend="2353"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3970ed55f417e8b5d9bbd0fd4e936039" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::log_sigmoid_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;buffer, const Tensor &amp;self)</argsstring>
        <name>log_sigmoid_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="420" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2354" bodyend="2356"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aede4c38d8a5c8012c998d547b034f8a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::log_sigmoid_forward</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>log_sigmoid_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="421" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2357" bodyend="2359"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adf04f1e3dd509f848a2d7f55fcb46008" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::log_sigmoid_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;buffer)</argsstring>
        <name>log_sigmoid_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="422" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2360" bodyend="2362"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a652f12614a219a9a38d36ca2af536795" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::log_sigmoid_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;buffer)</argsstring>
        <name>log_sigmoid_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="423" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2363" bodyend="2365"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4fa2ad85340f895d6baefc388c2997ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::prelu_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;weight)</argsstring>
        <name>prelu_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="424" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2366" bodyend="2368"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abf44ae8225c2686571207f6f48f35b42" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::prelu</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight)</argsstring>
        <name>prelu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="425" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2369" bodyend="2371"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a97712bb13569fe9148477f2f56c587ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::prelu_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;weight)</argsstring>
        <name>prelu_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="426" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2372" bodyend="2374"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af666065a813810360416ec7eef466251" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::prelu_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight)</argsstring>
        <name>prelu_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="427" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2375" bodyend="2377"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a86f77ca5cfb315cb6e245f57feec31c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::prelu_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, Tensor &amp;grad_weight, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight)</argsstring>
        <name>prelu_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="428" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2378" bodyend="2380"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7c54cc0a98af9cd474c1cbf2f46a7006" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::prelu_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, std::array&lt; bool, 2 &gt; output_mask={{true, true}})</argsstring>
        <name>prelu_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 2 &gt;</type>
          <declname>output_mask</declname>
          <defval>{{true, true}}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="429" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2381" bodyend="2383"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac97a1e309cd66995b35e4bd9c9996e42" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::rrelu_with_noise_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;noise, Scalar lower=0.125, Scalar upper=0.3333333333333333, bool training=false, Generator *generator=nullptr)</argsstring>
        <name>rrelu_with_noise_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>noise</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lower</declname>
          <defval>0.125</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>upper</declname>
          <defval>0.3333333333333333</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="430" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2384" bodyend="2386"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab3ed7b7ba12bb31702e431ee0bb51bc1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::rrelu_with_noise</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;noise, Scalar lower=0.125, Scalar upper=0.3333333333333333, bool training=false, Generator *generator=nullptr)</argsstring>
        <name>rrelu_with_noise</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>noise</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lower</declname>
          <defval>0.125</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>upper</declname>
          <defval>0.3333333333333333</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="431" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2387" bodyend="2389"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa445580314702c84e52ef6162516b9da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::rrelu_with_noise_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;noise, Scalar lower, Scalar upper, bool training, Generator *generator)</argsstring>
        <name>rrelu_with_noise_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>noise</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>upper</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="432" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2390" bodyend="2392"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4f39c7238d7ace3274b2097e0c0954f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::rrelu_with_noise_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;noise, Scalar lower, Scalar upper, bool training, Generator *generator)</argsstring>
        <name>rrelu_with_noise_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>noise</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>upper</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="433" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2393" bodyend="2395"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5b8b2aa554a366b366adba40215d1932" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::rrelu_with_noise_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;noise, Scalar lower, Scalar upper, bool training)</argsstring>
        <name>rrelu_with_noise_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>noise</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>upper</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="434" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2396" bodyend="2398"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a35f7eb0899461988eb1247f06894c677" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::rrelu_with_noise_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;noise, Scalar lower, Scalar upper, bool training)</argsstring>
        <name>rrelu_with_noise_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>noise</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>upper</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="435" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2399" bodyend="2401"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa479e0556ac545e79e9c12cc5e205fa7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::rrelu_with_noise_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;noise, Scalar lower=0.125, Scalar upper=0.3333333333333333, bool training=false, Generator *generator=nullptr)</argsstring>
        <name>rrelu_with_noise_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>noise</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lower</declname>
          <defval>0.125</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>upper</declname>
          <defval>0.3333333333333333</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="436" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2402" bodyend="2404"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af766f9e3d321d6d18d3ee184ba596202" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::rrelu_with_noise_forward_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;noise, Scalar lower, Scalar upper, bool training, Generator *generator)</argsstring>
        <name>rrelu_with_noise_forward_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>noise</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>upper</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="437" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2405" bodyend="2407"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0bda769f26bd0d4b9fbd9bca2c42c8de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::softplus_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Scalar beta=1, Scalar threshold=20)</argsstring>
        <name>softplus_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="438" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2408" bodyend="2410"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab80f62e1499d8654faeeb0bc98578e5d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::softplus</definition>
        <argsstring>(const Tensor &amp;self, Scalar beta=1, Scalar threshold=20)</argsstring>
        <name>softplus</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="439" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2411" bodyend="2413"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2d8e723cc50fad75bcfa418993240316" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::softplus_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Scalar beta, Scalar threshold)</argsstring>
        <name>softplus_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="440" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2414" bodyend="2416"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac40681c71ef6d5db14911437176ad628" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::softplus_forward</definition>
        <argsstring>(const Tensor &amp;self, Scalar beta, Scalar threshold)</argsstring>
        <name>softplus_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="441" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2417" bodyend="2419"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9ad46a9f76a3d916da8e04ea60e1e666" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::softplus_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, Scalar beta, Scalar threshold, const Tensor &amp;output)</argsstring>
        <name>softplus_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="442" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2420" bodyend="2422"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a709dc9b0397cf0379469923af9147f74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::softplus_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, Scalar beta, Scalar threshold, const Tensor &amp;output)</argsstring>
        <name>softplus_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="443" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2423" bodyend="2425"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac343fd8d0efbf5d264e4a217f450c0d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::softshrink_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Scalar lambd=0.5)</argsstring>
        <name>softshrink_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lambd</declname>
          <defval>0.5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="444" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2426" bodyend="2428"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aebb5a290f2024fd5e7fd72ada3415d52" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::softshrink</definition>
        <argsstring>(const Tensor &amp;self, Scalar lambd=0.5)</argsstring>
        <name>softshrink</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lambd</declname>
          <defval>0.5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="445" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2429" bodyend="2431"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a10f093c2016a5d01826cd0d697123b73" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::softshrink_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Scalar lambd)</argsstring>
        <name>softshrink_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lambd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="446" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2432" bodyend="2434"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4767656ccc23f039f658e376fe66557b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::softshrink_forward</definition>
        <argsstring>(const Tensor &amp;self, Scalar lambd)</argsstring>
        <name>softshrink_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lambd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="447" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2435" bodyend="2437"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad1eb96826116fac8740e30392f9a4903" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::softshrink_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, Scalar lambd)</argsstring>
        <name>softshrink_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lambd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="448" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2438" bodyend="2440"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abc6d3f88e8787c99a5dc1be1bc11d245" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::softshrink_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, Scalar lambd)</argsstring>
        <name>softshrink_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lambd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="449" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2441" bodyend="2443"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2d318bafa84b98fc853df6508408dae1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::threshold_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Scalar threshold, Scalar value)</argsstring>
        <name>threshold_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="450" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2444" bodyend="2446"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3aeb7de2c933d6c73e4b96378efce40a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::threshold</definition>
        <argsstring>(const Tensor &amp;self, Scalar threshold, Scalar value)</argsstring>
        <name>threshold</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="451" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2447" bodyend="2449"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3f9cc4640b116239a64dbcefcaa21bc6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::threshold_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, Scalar threshold, Scalar value)</argsstring>
        <name>threshold_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="452" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2450" bodyend="2452"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aff658fc277cd97c4b18113d8310dc355" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::threshold_forward</definition>
        <argsstring>(const Tensor &amp;self, Scalar threshold, Scalar value)</argsstring>
        <name>threshold_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="453" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2453" bodyend="2455"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae83527aaf24ffd6dec81ccf303886cca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::threshold_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, Scalar threshold, Scalar value)</argsstring>
        <name>threshold_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="454" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2456" bodyend="2458"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a712173c8a6fcace7f515016646507ead" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::threshold_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, Scalar threshold, Scalar value)</argsstring>
        <name>threshold_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="455" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2459" bodyend="2461"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae8aaf606ad78bbafd1ace09c420ed145" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::threshold_</definition>
        <argsstring>(Tensor &amp;self, Scalar threshold, Scalar value)</argsstring>
        <name>threshold_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="456" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2462" bodyend="2464"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8168ca30e41efdbdfdb6709a18cba9cb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::threshold_forward_</definition>
        <argsstring>(Tensor &amp;self, Scalar threshold, Scalar value)</argsstring>
        <name>threshold_forward_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>threshold</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="457" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2465" bodyend="2467"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aba715fc5b43f57469c4d322ff8522738" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::adaptive_avg_pool2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_avg_pool2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="458" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2468" bodyend="2470"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9946198140e38716759e77790ca5317e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::adaptive_avg_pool2d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_avg_pool2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="459" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2471" bodyend="2473"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af30acf4bd8f9a52728934446a6052b57" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::adaptive_avg_pool2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_avg_pool2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="460" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2474" bodyend="2476"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aae3fb6581d05308fe2ff0e0d6dfe015e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::adaptive_avg_pool2d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_avg_pool2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="461" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2477" bodyend="2479"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7a261508cbfd60fddc1ec641130b3bc1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::adaptive_avg_pool2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self)</argsstring>
        <name>adaptive_avg_pool2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="462" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2480" bodyend="2482"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a48ddc655c2cd1da51ac4fd07415767c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::adaptive_avg_pool2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self)</argsstring>
        <name>adaptive_avg_pool2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="463" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2483" bodyend="2485"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7afe7799960331ec80036fbd04a5f2c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::adaptive_avg_pool3d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_avg_pool3d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="464" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2486" bodyend="2488"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af919cf9b77c62296d1b867d70d0f1520" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::adaptive_avg_pool3d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_avg_pool3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="465" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2489" bodyend="2491"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a83ebb00a61217e1e7e227c0e5dfc15a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::adaptive_avg_pool3d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_avg_pool3d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="466" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2492" bodyend="2494"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1489085d3eb1a923b16087aab6ca111f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::adaptive_avg_pool3d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_avg_pool3d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="467" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2495" bodyend="2497"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a48b825343b95187deb7c817695257be3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::adaptive_avg_pool3d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self)</argsstring>
        <name>adaptive_avg_pool3d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="468" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2498" bodyend="2500"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a646574394798d859486360f915b06635" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::adaptive_avg_pool3d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self)</argsstring>
        <name>adaptive_avg_pool3d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="469" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2501" bodyend="2503"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a487aa985b705c2e77fa8d62802e62688" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::adaptive_max_pool2d_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;indices, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_max_pool2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="470" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2504" bodyend="2506"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1f61c85c5b262e0b58f9d6d78d03b824" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::adaptive_max_pool2d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_max_pool2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="471" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2507" bodyend="2509"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af35fd5eb5c635e81c4e4c78c5373312d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::adaptive_max_pool2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;indices, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_max_pool2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="472" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2510" bodyend="2512"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a80d2d745993711864cefb98e62e6e674" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::adaptive_max_pool2d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_max_pool2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="473" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2513" bodyend="2515"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac92891c0b16763022a850a5538dd38e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::adaptive_max_pool2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;indices)</argsstring>
        <name>adaptive_max_pool2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="474" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2516" bodyend="2518"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aca1c4d6d8ad1d17e9149f7106a3c1c3c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::adaptive_max_pool2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;indices)</argsstring>
        <name>adaptive_max_pool2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="475" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2519" bodyend="2521"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad6036b1d25d43d36e6aa61e70aab0f1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::adaptive_max_pool3d_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;indices, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_max_pool3d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="476" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2522" bodyend="2524"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a622c7deab7cb287079397166fab31956" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::adaptive_max_pool3d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_max_pool3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="477" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2525" bodyend="2527"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a63f6aa12b9982b910c139847f5218467" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::adaptive_max_pool3d_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;indices, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_max_pool3d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="478" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2528" bodyend="2530"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a20a14d378450bbd2cd776e04cc938c21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::adaptive_max_pool3d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_max_pool3d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="479" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2531" bodyend="2533"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2da4020a8188860d5640911f6c554969" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::adaptive_max_pool3d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;indices)</argsstring>
        <name>adaptive_max_pool3d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="480" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2534" bodyend="2536"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a45a6c14f21a2162006a2863cf0b9ead1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::adaptive_max_pool3d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;indices)</argsstring>
        <name>adaptive_max_pool3d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="481" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2537" bodyend="2539"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aed235eb25045c59afa76d1dfdcfd7fd1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::avg_pool2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, bool ceil_mode=false, bool count_include_pad=true)</argsstring>
        <name>avg_pool2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="482" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2540" bodyend="2542"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a891031c8d2903b37cdf0951c4af888da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::avg_pool2d</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, bool ceil_mode=false, bool count_include_pad=true)</argsstring>
        <name>avg_pool2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="483" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2543" bodyend="2545"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a87d1dd84f16af1eb84dd71ebfaf6b500" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::avg_pool2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, bool ceil_mode, bool count_include_pad)</argsstring>
        <name>avg_pool2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="484" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2546" bodyend="2548"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8c53e8f6539991dd27fa3f3d3a66cac2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::avg_pool2d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, bool ceil_mode, bool count_include_pad)</argsstring>
        <name>avg_pool2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="485" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2549" bodyend="2551"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6a2629b4fc67020922736526796fc5ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::avg_pool2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, bool ceil_mode, bool count_include_pad)</argsstring>
        <name>avg_pool2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="486" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2552" bodyend="2554"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a972f7e4c2d7abaea41e1b7f0fc30550b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::avg_pool2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, bool ceil_mode, bool count_include_pad)</argsstring>
        <name>avg_pool2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="487" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2555" bodyend="2557"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a578a59f0aee12c8556c08ed182c065f7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::avg_pool3d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, bool ceil_mode=false, bool count_include_pad=true)</argsstring>
        <name>avg_pool3d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="488" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2558" bodyend="2560"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a23a038871b05af98d51437652e8f2407" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::avg_pool3d</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, bool ceil_mode=false, bool count_include_pad=true)</argsstring>
        <name>avg_pool3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="489" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2561" bodyend="2563"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a462a00a8df976d222cc25364e090cdc2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::avg_pool3d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, bool ceil_mode, bool count_include_pad)</argsstring>
        <name>avg_pool3d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="490" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2564" bodyend="2566"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a333b2f025840e3f82d5e5a36ba893b7c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::avg_pool3d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, bool ceil_mode, bool count_include_pad)</argsstring>
        <name>avg_pool3d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="491" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2567" bodyend="2569"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acc31d68b8da1dae38d4416e2a144e6a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::avg_pool3d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, bool ceil_mode, bool count_include_pad)</argsstring>
        <name>avg_pool3d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="492" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2570" bodyend="2572"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5c641a5f1a151575afc09334070d548d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::avg_pool3d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, bool ceil_mode, bool count_include_pad)</argsstring>
        <name>avg_pool3d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="493" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2573" bodyend="2575"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab2d69a84c5d983c43fe16dcd6b8d36d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::fractional_max_pool2d_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;indices, const Tensor &amp;self, IntList kernel_size, IntList output_size, const Tensor &amp;random_samples)</argsstring>
        <name>fractional_max_pool2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>random_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="494" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2576" bodyend="2578"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaf4f28a349c63576139fb17f2ed5a432" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::fractional_max_pool2d</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList output_size, const Tensor &amp;random_samples)</argsstring>
        <name>fractional_max_pool2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>random_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="495" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2579" bodyend="2581"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a53efcbd227d10452d690fff83d97558b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::fractional_max_pool2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;indices, const Tensor &amp;self, IntList kernel_size, IntList output_size, const Tensor &amp;random_samples)</argsstring>
        <name>fractional_max_pool2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>random_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="496" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2582" bodyend="2584"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a60749d60d794827a7dbe41cdc4f02aa0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::fractional_max_pool2d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList output_size, const Tensor &amp;random_samples)</argsstring>
        <name>fractional_max_pool2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>random_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="497" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2585" bodyend="2587"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a29d6eba4d7fc1a6d5c7a98935703d23f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::fractional_max_pool2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, IntList kernel_size, IntList output_size, const Tensor &amp;indices)</argsstring>
        <name>fractional_max_pool2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="498" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2588" bodyend="2590"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab94b9bea79ccac076df05d453a35fc00" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::fractional_max_pool2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, IntList kernel_size, IntList output_size, const Tensor &amp;indices)</argsstring>
        <name>fractional_max_pool2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="499" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2591" bodyend="2593"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4440fb7b3ac6e5badc08d3748c76ef17" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::max_pool2d_with_indices_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;indices, const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, IntList dilation=1, bool ceil_mode=false)</argsstring>
        <name>max_pool2d_with_indices_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="500" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2594" bodyend="2596"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7fb213d949e2f1ac0bd57811b2244e0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::max_pool2d_with_indices</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, IntList dilation=1, bool ceil_mode=false)</argsstring>
        <name>max_pool2d_with_indices</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="501" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2597" bodyend="2599"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acc82a5d0c5851a422ce6d486b3c8df9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::max_pool2d_with_indices_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;indices, const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, IntList dilation, bool ceil_mode)</argsstring>
        <name>max_pool2d_with_indices_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="502" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2600" bodyend="2602"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a580822373dea09d8865621f3321b36b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::max_pool2d_with_indices_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, IntList dilation, bool ceil_mode)</argsstring>
        <name>max_pool2d_with_indices_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="503" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2603" bodyend="2605"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae94bbed06c251340ef9018dcb8d4da9c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::max_pool2d_with_indices_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, IntList dilation, bool ceil_mode, const Tensor &amp;indices)</argsstring>
        <name>max_pool2d_with_indices_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="504" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2606" bodyend="2608"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6134f7a081bea16a8d580bf84d95605c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max_pool2d_with_indices_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, IntList dilation, bool ceil_mode, const Tensor &amp;indices)</argsstring>
        <name>max_pool2d_with_indices_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="505" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2609" bodyend="2611"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4a24360aabefab7b435dd1ba38b873f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::max_pool3d_with_indices_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;indices, const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, IntList dilation=1, bool ceil_mode=false)</argsstring>
        <name>max_pool3d_with_indices_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="506" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2612" bodyend="2614"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7dda7ac4e013e0ce4942a776d6e4186a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::max_pool3d_with_indices</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, IntList dilation=1, bool ceil_mode=false)</argsstring>
        <name>max_pool3d_with_indices</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="507" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2615" bodyend="2617"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3c63e26696a9697022e35ccf5afa354e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::max_pool3d_with_indices_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;indices, const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, IntList dilation, bool ceil_mode)</argsstring>
        <name>max_pool3d_with_indices_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="508" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2618" bodyend="2620"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7590e472e97aab94597f599db27850f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::max_pool3d_with_indices_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, IntList dilation, bool ceil_mode)</argsstring>
        <name>max_pool3d_with_indices_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="509" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2621" bodyend="2623"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a861b3ad798a8f27f282154458a3704f7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::max_pool3d_with_indices_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, IntList dilation, bool ceil_mode, const Tensor &amp;indices)</argsstring>
        <name>max_pool3d_with_indices_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="510" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2624" bodyend="2626"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae30cbbd4ee1619bbff50214505145079" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max_pool3d_with_indices_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, IntList kernel_size, IntList stride, IntList padding, IntList dilation, bool ceil_mode, const Tensor &amp;indices)</argsstring>
        <name>max_pool3d_with_indices_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="511" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2627" bodyend="2629"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a74dceb0235426f9e690a9cd9d24a0e8a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::max_unpool2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;indices, IntList output_size)</argsstring>
        <name>max_unpool2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="512" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2630" bodyend="2632"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3632e4550b3bc61834f3041d783eda5a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max_unpool2d</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;indices, IntList output_size)</argsstring>
        <name>max_unpool2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="513" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2633" bodyend="2635"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1b111bc373a2b581dd4890df19ed43ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::max_unpool2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;indices, IntList output_size)</argsstring>
        <name>max_unpool2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="514" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2636" bodyend="2638"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1a954309d2ba65fe9e128f75ea448163" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max_unpool2d_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;indices, IntList output_size)</argsstring>
        <name>max_unpool2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="515" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2639" bodyend="2641"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9e5059c3e5e7c6e73e425220d4f04c4f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::max_unpool2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;indices, IntList output_size)</argsstring>
        <name>max_unpool2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="516" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2642" bodyend="2644"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a55221599fe35dafa2f1bab6a394509da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max_unpool2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;indices, IntList output_size)</argsstring>
        <name>max_unpool2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="517" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2645" bodyend="2647"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5964edea337f772a6c1a0823b0a78077" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::max_unpool3d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;indices, IntList output_size, IntList stride, IntList padding)</argsstring>
        <name>max_unpool3d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="518" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2648" bodyend="2650"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a40a4c7235191e09c6172a38df1b925e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max_unpool3d</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;indices, IntList output_size, IntList stride, IntList padding)</argsstring>
        <name>max_unpool3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="519" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2651" bodyend="2653"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4dd799bcf3bfe4d8bc22b61ea7bf1fc4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::max_unpool3d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;indices, IntList output_size, IntList stride, IntList padding)</argsstring>
        <name>max_unpool3d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="520" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2654" bodyend="2656"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae7eebc649a36e1048265c7376fa2e846" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max_unpool3d_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;indices, IntList output_size, IntList stride, IntList padding)</argsstring>
        <name>max_unpool3d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="521" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2657" bodyend="2659"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af29335d4ce96d7e8c55628955c927d72" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::max_unpool3d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;indices, IntList output_size, IntList stride, IntList padding)</argsstring>
        <name>max_unpool3d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="522" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2660" bodyend="2662"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2400f60117565c0da250a457b5cb34a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max_unpool3d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;indices, IntList output_size, IntList stride, IntList padding)</argsstring>
        <name>max_unpool3d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="523" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2663" bodyend="2665"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a28dcff5ea82343d07feb536ce1b9d6f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::reflection_pad1d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>reflection_pad1d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="524" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2666" bodyend="2668"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae2142f3071d350f92d243453ded0f926" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::reflection_pad1d</definition>
        <argsstring>(const Tensor &amp;self, IntList padding)</argsstring>
        <name>reflection_pad1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="525" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2669" bodyend="2671"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a50757fd2932c0ef09cf91d99782e10a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::reflection_pad1d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>reflection_pad1d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="526" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2672" bodyend="2674"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aed09935ca712d72bd921b5d1047d8cff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::reflection_pad1d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList padding)</argsstring>
        <name>reflection_pad1d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="527" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2675" bodyend="2677"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a87557bb08efd084b93e75d458bb7c95e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::reflection_pad1d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>reflection_pad1d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="528" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2678" bodyend="2680"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9aff9157f6d53abd9ff0616e698ee8fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::reflection_pad1d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>reflection_pad1d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="529" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2681" bodyend="2683"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a00ec661f29d39afa9c3ad20cd73e14d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::reflection_pad2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>reflection_pad2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="530" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2684" bodyend="2686"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a59348f971cfef84434a5ba755cb44be8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::reflection_pad2d</definition>
        <argsstring>(const Tensor &amp;self, IntList padding)</argsstring>
        <name>reflection_pad2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="531" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2687" bodyend="2689"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aef55af2c9b90675851f63a25bb139b8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::reflection_pad2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>reflection_pad2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="532" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2690" bodyend="2692"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aadbbf071b1184567a75d031e1753bedf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::reflection_pad2d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList padding)</argsstring>
        <name>reflection_pad2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="533" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2693" bodyend="2695"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2d5b7ca7eb94e6a324909474009f95af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::reflection_pad2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>reflection_pad2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="534" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2696" bodyend="2698"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae7026bfdc156363c4b76a9a933a2116b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::reflection_pad2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>reflection_pad2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="535" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2699" bodyend="2701"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5419a661b6c20fb1ea8328d1f05b27ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::replication_pad1d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad1d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="536" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2702" bodyend="2704"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a37cbe17d74db343d61028f7534f74fe6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::replication_pad1d</definition>
        <argsstring>(const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="537" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2705" bodyend="2707"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4a0b768de69fd944b8ab684d1362a0cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::replication_pad1d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad1d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="538" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2708" bodyend="2710"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6ebcbef1317922c252d3fa7fe2ca8d86" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::replication_pad1d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad1d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="539" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2711" bodyend="2713"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aead5554dd363e404461d74931f41b7c9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::replication_pad1d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad1d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="540" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2714" bodyend="2716"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1c71573bd129716f1ff93f18b2d4bf5f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::replication_pad1d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad1d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="541" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2717" bodyend="2719"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab0a91048e9350afb9ef36954ff19ba9b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::replication_pad2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="542" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2720" bodyend="2722"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0963ea7a4304f60b7460dd60836f65e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::replication_pad2d</definition>
        <argsstring>(const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="543" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2723" bodyend="2725"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1d5539b016bfd3eaa73705c546ddc9cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::replication_pad2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="544" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2726" bodyend="2728"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6069d36520acded5008bd90db43e0bb7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::replication_pad2d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="545" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2729" bodyend="2731"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6aa7e5e8e3e8e53467747ca885f43ae5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::replication_pad2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="546" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2732" bodyend="2734"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1f92276e96a78782060da2de115b6af7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::replication_pad2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="547" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2735" bodyend="2737"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab9a8fbed637d6dc7f5ee285484bb0dd8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::replication_pad3d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad3d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="548" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2738" bodyend="2740"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad1fba659c323e3389e6feb83890bc2ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::replication_pad3d</definition>
        <argsstring>(const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="549" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2741" bodyend="2743"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afb686a70f83fa5864b9bd32a401cab41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::replication_pad3d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad3d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="550" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2744" bodyend="2746"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae3d2085cc6f674f62730ce449701ee9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::replication_pad3d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad3d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="551" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2747" bodyend="2749"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a148231fbe260be496eba8f12ed94626d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::replication_pad3d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad3d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="552" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2750" bodyend="2752"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5471067ed18c490dbfe96be40d725e0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::replication_pad3d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding)</argsstring>
        <name>replication_pad3d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="553" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2753" bodyend="2755"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aee074002002125d22d72e0a6557b42c4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_linear1d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size, bool align_corners)</argsstring>
        <name>upsample_linear1d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="554" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2756" bodyend="2758"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac76f19cec03fda76c7e0352df13b9223" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_linear1d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size, bool align_corners)</argsstring>
        <name>upsample_linear1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="555" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2759" bodyend="2761"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad5d8beedf36c74182185a54a1d2bdca6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_linear1d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size, bool align_corners)</argsstring>
        <name>upsample_linear1d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="556" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2762" bodyend="2764"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0923f5b48e75d5f97d39c0ba371eb907" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_linear1d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size, bool align_corners)</argsstring>
        <name>upsample_linear1d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="557" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2765" bodyend="2767"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adad18430fa394692b5b9e1fe45c38e8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_linear1d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, IntList output_size, IntList input_size, bool align_corners)</argsstring>
        <name>upsample_linear1d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="558" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2768" bodyend="2770"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a96dec38b1d01b14c34710d8c22bda580" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_linear1d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, IntList output_size, IntList input_size, bool align_corners)</argsstring>
        <name>upsample_linear1d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="559" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2771" bodyend="2773"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8172553d633b563c1e9dab3cd23fb524" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_bilinear2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size, bool align_corners)</argsstring>
        <name>upsample_bilinear2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="560" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2774" bodyend="2776"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a01bafc14cfc9c1025c210aab49be1a8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_bilinear2d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size, bool align_corners)</argsstring>
        <name>upsample_bilinear2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="561" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2777" bodyend="2779"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac6ab39921c6b6df7c83a364981f5e40f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_bilinear2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size, bool align_corners)</argsstring>
        <name>upsample_bilinear2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="562" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2780" bodyend="2782"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a03eb316e56ba2c5b2abde31f61351b89" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_bilinear2d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size, bool align_corners)</argsstring>
        <name>upsample_bilinear2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="563" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2783" bodyend="2785"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab875a700f878207d6d4be591377b3b28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_bilinear2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, IntList output_size, IntList input_size, bool align_corners)</argsstring>
        <name>upsample_bilinear2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="564" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2786" bodyend="2788"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2f9b92e5f880d71653b0d60daf268e35" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_bilinear2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, IntList output_size, IntList input_size, bool align_corners)</argsstring>
        <name>upsample_bilinear2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="565" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2789" bodyend="2791"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af35891dcf8321437df524cb9dd120f08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_trilinear3d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size, bool align_corners)</argsstring>
        <name>upsample_trilinear3d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="566" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2792" bodyend="2794"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4c728a349e639fa8999a066abfe4b0fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_trilinear3d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size, bool align_corners)</argsstring>
        <name>upsample_trilinear3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="567" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2795" bodyend="2797"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6d54bf6784d9d8d402129752401e3132" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_trilinear3d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size, bool align_corners)</argsstring>
        <name>upsample_trilinear3d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="568" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2798" bodyend="2800"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6cf914636363a7f10fee258ff47f1bfb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_trilinear3d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size, bool align_corners)</argsstring>
        <name>upsample_trilinear3d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="569" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2801" bodyend="2803"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a08ce84594866c460e17203e701622f77" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_trilinear3d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, IntList output_size, IntList input_size, bool align_corners)</argsstring>
        <name>upsample_trilinear3d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="570" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2804" bodyend="2806"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afffb840c8e4021823f93c1c6a7bcbe28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_trilinear3d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, IntList output_size, IntList input_size, bool align_corners)</argsstring>
        <name>upsample_trilinear3d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>align_corners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="571" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2807" bodyend="2809"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a177e349393116f08b2a8cc01acbe0da6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_nearest1d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>upsample_nearest1d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="572" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2810" bodyend="2812"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad273da567fe821ec3da1007dc60d8ef1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_nearest1d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>upsample_nearest1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="573" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2813" bodyend="2815"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0f97cb25a5bcb9065457898dc4bace4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_nearest1d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>upsample_nearest1d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="574" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2816" bodyend="2818"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5d09ea661887dba80879acab25d4f00b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_nearest1d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>upsample_nearest1d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="575" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2819" bodyend="2821"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac84efe59a1820e74ca6b59ff830f6f63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_nearest1d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, IntList output_size, IntList input_size)</argsstring>
        <name>upsample_nearest1d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="576" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2822" bodyend="2824"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a289d5dfe98069532a38a9f92f6bdcb67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_nearest1d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, IntList output_size, IntList input_size)</argsstring>
        <name>upsample_nearest1d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="577" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2825" bodyend="2827"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a72be08a7e46f981dbacba3b9b4939acd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_nearest2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>upsample_nearest2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="578" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2828" bodyend="2830"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a26cb04e01abe831e40c2f7c0686e6a6b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_nearest2d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>upsample_nearest2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="579" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2831" bodyend="2833"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7c140787ae8c91bbf80e13300b8dbd42" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_nearest2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>upsample_nearest2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="580" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2834" bodyend="2836"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae8f421d7db1cc98e25d47cd0650b51db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_nearest2d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>upsample_nearest2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="581" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2837" bodyend="2839"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae6cde0f0dd21a60f31db4082914bdc47" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_nearest2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, IntList output_size, IntList input_size)</argsstring>
        <name>upsample_nearest2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="582" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2840" bodyend="2842"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acbb03a1d0e0369a89167547979b0f392" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_nearest2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, IntList output_size, IntList input_size)</argsstring>
        <name>upsample_nearest2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="583" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2843" bodyend="2845"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6ee216103a63a7d713016241e6532d78" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_nearest3d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>upsample_nearest3d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="584" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2846" bodyend="2848"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0d506afa266cbce6411fee42a01e7859" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_nearest3d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>upsample_nearest3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="585" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2849" bodyend="2851"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9df1506064fd9d2b3277ee70d71c9537" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_nearest3d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, IntList output_size)</argsstring>
        <name>upsample_nearest3d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="586" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2852" bodyend="2854"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0bf21e766f230e829c1dfef862155cb8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_nearest3d_forward</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>upsample_nearest3d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="587" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2855" bodyend="2857"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a440fdc848319ec42c67b66899d618dd4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::upsample_nearest3d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, IntList output_size, IntList input_size)</argsstring>
        <name>upsample_nearest3d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="588" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2858" bodyend="2860"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6991cb4c746dd43d6454e320a89e12ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::upsample_nearest3d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, IntList output_size, IntList input_size)</argsstring>
        <name>upsample_nearest3d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>input_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="589" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2861" bodyend="2863"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8aac69f8d73f246841d796836d276622" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_sigmoid_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self)</argsstring>
        <name>_sigmoid_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="590" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2864" bodyend="2866"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2831f1bb27d43959cb6b0aa27fe8e3ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_sigmoid</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_sigmoid</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="591" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2867" bodyend="2869"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aeff23f56c7690d97f6045e638e947344" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_sigmoid_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self)</argsstring>
        <name>_sigmoid_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="592" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2870" bodyend="2872"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab09916270554426f9dcf61852f4663d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_sigmoid_forward</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_sigmoid_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="593" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2873" bodyend="2875"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afb320f24434e5218e614c67572e34669" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_sigmoid_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;output)</argsstring>
        <name>_sigmoid_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="594" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2876" bodyend="2878"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a59dd7bc6c0cfb396093eff9622464efb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_sigmoid_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;output)</argsstring>
        <name>_sigmoid_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="595" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2879" bodyend="2881"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae03775c04a3a41b986c7c5681790a0bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_tanh_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self)</argsstring>
        <name>_tanh_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="596" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2882" bodyend="2884"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a00a365598159979240b6d781aee1256c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_tanh</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_tanh</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="597" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2885" bodyend="2887"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a42d8f5cbd6bbdc879abf493c978aaaec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_tanh_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self)</argsstring>
        <name>_tanh_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="598" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2888" bodyend="2890"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aed954d50f9a0e0c7b193188fe178d6f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_tanh_forward</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_tanh_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="599" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2891" bodyend="2893"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae662b0dea53bd33727309781efa05842" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_tanh_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, const Tensor &amp;grad_output, const Tensor &amp;output)</argsstring>
        <name>_tanh_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="600" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2894" bodyend="2896"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab91aac24f90ee72ed26ff258b34060a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_tanh_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;output)</argsstring>
        <name>_tanh_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="601" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2897" bodyend="2899"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a077e077fba02be91c116830c01d1a1f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_batch_norm_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;weight, const Tensor &amp;bias, const Tensor &amp;running_mean, const Tensor &amp;running_var, bool training, double momentum, double eps)</argsstring>
        <name>thnn_batch_norm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type>double</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="602" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2900" bodyend="2902"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a785d5ebbc89b2137cb8d3f1be504975b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_batch_norm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, const Tensor &amp;bias, const Tensor &amp;running_mean, const Tensor &amp;running_var, bool training, double momentum, double eps)</argsstring>
        <name>thnn_batch_norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type>double</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="603" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2903" bodyend="2905"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aea9c2a3f6e293fa0e1bb2926bfd7f6f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_batch_norm_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;save_mean, Tensor &amp;save_std, const Tensor &amp;self, const Tensor &amp;weight, const Tensor &amp;bias, const Tensor &amp;running_mean, const Tensor &amp;running_var, bool training, double momentum, double eps)</argsstring>
        <name>thnn_batch_norm_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>save_mean</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>save_std</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type>double</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="604" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2906" bodyend="2908"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1fc43bd79c263bc62b8dffaff7684b81" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_batch_norm_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, const Tensor &amp;bias, const Tensor &amp;running_mean, const Tensor &amp;running_var, bool training, double momentum, double eps)</argsstring>
        <name>thnn_batch_norm_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type>double</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="605" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2909" bodyend="2911"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4c27d146ef0294e51bb10d823e875852" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_batch_norm_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, Tensor &amp;grad_weight, Tensor &amp;grad_bias, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, const Tensor &amp;running_mean, const Tensor &amp;running_var, bool training, double eps, const Tensor &amp;save_mean, const Tensor &amp;save_std)</argsstring>
        <name>thnn_batch_norm_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_weight</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>save_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>save_std</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="606" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2912" bodyend="2914"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7a73ac7d45e43a9401a101cfdecddf87" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_batch_norm_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, const Tensor &amp;running_mean, const Tensor &amp;running_var, bool training, double eps, const Tensor &amp;save_mean, const Tensor &amp;save_std, std::array&lt; bool, 3 &gt; output_mask={{true, true, true}})</argsstring>
        <name>thnn_batch_norm_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>save_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>save_std</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
          <defval>{{true, true, true}}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="607" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2915" bodyend="2917"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abae407c025b22281e8ccb2d03cb01373" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_conv_transpose2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList output_padding=0, IntList dilation=1)</argsstring>
        <name>thnn_conv_transpose2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="608" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2918" bodyend="2920"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7211cf05314d664511fc41595cadac4b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_conv_transpose2d</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList output_padding=0, IntList dilation=1)</argsstring>
        <name>thnn_conv_transpose2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="609" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2921" bodyend="2923"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a85ff683d341a4acd2d1893c492b9451e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_conv_transpose2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;columns, Tensor &amp;ones, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding, IntList output_padding, IntList dilation)</argsstring>
        <name>thnn_conv_transpose2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ones</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="610" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2924" bodyend="2926"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0dba13d6f7c39fa72566b23e1e0ef34e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_conv_transpose2d_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding, IntList output_padding, IntList dilation)</argsstring>
        <name>thnn_conv_transpose2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="611" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2927" bodyend="2929"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab4a6606a4ede74f99b64ef419c7dc6e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_conv_transpose2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, Tensor &amp;grad_weight, Tensor &amp;grad_bias, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, IntList output_padding, IntList dilation, const Tensor &amp;columns, const Tensor &amp;ones)</argsstring>
        <name>thnn_conv_transpose2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_weight</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ones</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="612" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2930" bodyend="2932"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2220e5ea462b309e0840ee2cdbec8bf1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_conv_transpose2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, IntList output_padding, IntList dilation, const Tensor &amp;columns, const Tensor &amp;ones, std::array&lt; bool, 3 &gt; output_mask={{true, true, true}})</argsstring>
        <name>thnn_conv_transpose2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ones</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
          <defval>{{true, true, true}}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="613" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2933" bodyend="2935"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac369910840c2d9c4e40751038df7673a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_conv_transpose3d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList output_padding=0, IntList dilation=1)</argsstring>
        <name>thnn_conv_transpose3d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="614" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2936" bodyend="2938"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a92f38a48b5df3c09c55e8ce2c698ac3b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_conv_transpose3d</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList output_padding=0, IntList dilation=1)</argsstring>
        <name>thnn_conv_transpose3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="615" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2939" bodyend="2941"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3f676d6c031d174d0bf4b7e1f0844c07" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_conv_transpose3d_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;finput, Tensor &amp;fgrad_input, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding, IntList output_padding, IntList dilation)</argsstring>
        <name>thnn_conv_transpose3d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>finput</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>fgrad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="616" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2942" bodyend="2944"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5eb80c4d6d116ef37cac03b6581d0ec7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_conv_transpose3d_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding, IntList output_padding, IntList dilation)</argsstring>
        <name>thnn_conv_transpose3d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="617" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2945" bodyend="2947"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa4bbf7eb0a1f33701667c11083b8e763" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_conv_transpose3d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, Tensor &amp;grad_weight, Tensor &amp;grad_bias, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, IntList output_padding, IntList dilation, const Tensor &amp;finput, const Tensor &amp;fgrad_input)</argsstring>
        <name>thnn_conv_transpose3d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_weight</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>finput</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>fgrad_input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="618" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2948" bodyend="2950"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9f52f95fc90730fceabac9e826085a04" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_conv_transpose3d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, IntList output_padding, IntList dilation, const Tensor &amp;finput, const Tensor &amp;fgrad_input, std::array&lt; bool, 3 &gt; output_mask={{true, true, true}})</argsstring>
        <name>thnn_conv_transpose3d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>finput</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>fgrad_input</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
          <defval>{{true, true, true}}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="619" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2951" bodyend="2953"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2f5ce8a4ed3c215b2ab186ff50a1b728" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_conv2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0)</argsstring>
        <name>thnn_conv2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="620" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2954" bodyend="2956"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7c12ba09e4511b1ee37cfd684ccb31ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_conv2d</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0)</argsstring>
        <name>thnn_conv2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="621" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2957" bodyend="2959"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af73799417cf22451f71787348a7b9fa4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_conv2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;finput, Tensor &amp;fgrad_input, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding)</argsstring>
        <name>thnn_conv2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>finput</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>fgrad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="622" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2960" bodyend="2962"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8f81652b330db038c07d7a7f9cef9763" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_conv2d_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding)</argsstring>
        <name>thnn_conv2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="623" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2963" bodyend="2965"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0948fc963e33c60d033e2bf8c1dde88b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_conv2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, Tensor &amp;grad_weight, Tensor &amp;grad_bias, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, const Tensor &amp;finput, const Tensor &amp;fgrad_input)</argsstring>
        <name>thnn_conv2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_weight</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>finput</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>fgrad_input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="624" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2966" bodyend="2968"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a595851874dc4bf96386076efcc075c89" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_conv2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, const Tensor &amp;finput, const Tensor &amp;fgrad_input, std::array&lt; bool, 3 &gt; output_mask={{true, true, true}})</argsstring>
        <name>thnn_conv2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>finput</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>fgrad_input</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
          <defval>{{true, true, true}}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="625" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2969" bodyend="2971"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a62e9aae66ea1b74801a802c4a3a497ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_conv_depthwise2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList dilation=1)</argsstring>
        <name>thnn_conv_depthwise2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="626" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2972" bodyend="2974"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac27114ed1fd48ee0803fd97607c54af8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_conv_depthwise2d</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList dilation=1)</argsstring>
        <name>thnn_conv_depthwise2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="627" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2975" bodyend="2977"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aebad53f76a50836c09a332615f54d512" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_conv_depthwise2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation)</argsstring>
        <name>thnn_conv_depthwise2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="628" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2978" bodyend="2980"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a845ac3e4c71a72ce2abb91147d595bef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_conv_depthwise2d_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation)</argsstring>
        <name>thnn_conv_depthwise2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="629" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2981" bodyend="2983"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4d42f357f958e64efec8999344f6554e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::thnn_conv_depthwise2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, Tensor &amp;grad_weight, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, IntList dilation)</argsstring>
        <name>thnn_conv_depthwise2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="630" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2984" bodyend="2986"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a99c3668f2a94854491ea3a4995306951" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::thnn_conv_depthwise2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, IntList dilation, std::array&lt; bool, 2 &gt; output_mask={{true, true}})</argsstring>
        <name>thnn_conv_depthwise2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 2 &gt;</type>
          <declname>output_mask</declname>
          <defval>{{true, true}}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="631" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2987" bodyend="2989"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5d742948548ac3843c69b74a8ce2fa22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_conv3d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0)</argsstring>
        <name>thnn_conv3d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="632" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2990" bodyend="2992"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a631efac7092d34ac113e401bbd7aa745" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_conv3d</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0)</argsstring>
        <name>thnn_conv3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="633" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2993" bodyend="2995"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5861872db49a95128c5a326ec9770f28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_conv3d_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;finput, Tensor &amp;fgrad_input, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding)</argsstring>
        <name>thnn_conv3d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>finput</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>fgrad_input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="634" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2996" bodyend="2998"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad83c45f12a69cba835f6b80092a6e326" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_conv3d_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding)</argsstring>
        <name>thnn_conv3d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="635" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="2999" bodyend="3001"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a34105359acdadb914c592f5030b59ce8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_conv3d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, Tensor &amp;grad_weight, Tensor &amp;grad_bias, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, const Tensor &amp;finput, const Tensor &amp;fgrad_input)</argsstring>
        <name>thnn_conv3d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_weight</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>finput</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>fgrad_input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="636" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3002" bodyend="3004"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a55af60207d93a1ecce36fada797beee3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_conv3d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, const Tensor &amp;finput, const Tensor &amp;fgrad_input, std::array&lt; bool, 3 &gt; output_mask={{true, true, true}})</argsstring>
        <name>thnn_conv3d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>finput</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>fgrad_input</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
          <defval>{{true, true, true}}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="637" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3005" bodyend="3007"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acf9027b44e02c62ccfe1f49d1a2676b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_conv_dilated2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList dilation=1)</argsstring>
        <name>thnn_conv_dilated2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="638" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3008" bodyend="3010"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae72a3324b30dcd6df2330969028a2df6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_conv_dilated2d</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList dilation=1)</argsstring>
        <name>thnn_conv_dilated2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="639" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3011" bodyend="3013"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aece0f2217afee27942749303ef5abcb3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_conv_dilated2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;columns, Tensor &amp;ones, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation)</argsstring>
        <name>thnn_conv_dilated2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ones</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="640" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3014" bodyend="3016"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a49b71c3061b2851ea25be195412e5960" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_conv_dilated2d_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation)</argsstring>
        <name>thnn_conv_dilated2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="641" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3017" bodyend="3019"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8f20e8e38ad1f4eb91c6ee39f5f983a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_conv_dilated2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, Tensor &amp;grad_weight, Tensor &amp;grad_bias, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, IntList dilation, const Tensor &amp;columns, const Tensor &amp;ones)</argsstring>
        <name>thnn_conv_dilated2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_weight</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ones</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="642" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3020" bodyend="3022"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af4c5de5c254e40bc8fc6b89bf1e2be44" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_conv_dilated2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, IntList dilation, const Tensor &amp;columns, const Tensor &amp;ones, std::array&lt; bool, 3 &gt; output_mask={{true, true, true}})</argsstring>
        <name>thnn_conv_dilated2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ones</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
          <defval>{{true, true, true}}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="643" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3023" bodyend="3025"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6b4ce0b4d9db03d57459e855e3f469f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_conv_dilated3d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList dilation=1)</argsstring>
        <name>thnn_conv_dilated3d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="644" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3026" bodyend="3028"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaf43281ae5898a9391192e2368f43880" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_conv_dilated3d</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList dilation=1)</argsstring>
        <name>thnn_conv_dilated3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="645" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3029" bodyend="3031"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3c19f12b3af45579e5c5e79a75ee613d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_conv_dilated3d_forward_out</definition>
        <argsstring>(Tensor &amp;output, Tensor &amp;columns, Tensor &amp;ones, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation)</argsstring>
        <name>thnn_conv_dilated3d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ones</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="646" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3032" bodyend="3034"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7014829cad97a0c2c5ba61daf798a3ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_conv_dilated3d_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation)</argsstring>
        <name>thnn_conv_dilated3d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="647" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3035" bodyend="3037"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8b793f349e38a1e94df5581d00cd8966" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp;, Tensor &amp; &gt; at::thnn_conv_dilated3d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, Tensor &amp;grad_weight, Tensor &amp;grad_bias, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, IntList dilation, const Tensor &amp;columns, const Tensor &amp;ones)</argsstring>
        <name>thnn_conv_dilated3d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_weight</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ones</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="648" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3038" bodyend="3040"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad65af81242cd32fee7a99ae229ca4603" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::thnn_conv_dilated3d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;weight, IntList kernel_size, IntList stride, IntList padding, IntList dilation, const Tensor &amp;columns, const Tensor &amp;ones, std::array&lt; bool, 3 &gt; output_mask={{true, true, true}})</argsstring>
        <name>thnn_conv_dilated3d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ones</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
          <defval>{{true, true, true}}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="649" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3041" bodyend="3043"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac2eb0b859a21e54e1536aca946d9e0bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_grid_sampler_bilinear2d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>thnn_grid_sampler_bilinear2d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="650" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3044" bodyend="3046"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad2035689e5899265f555bd914df8712c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_grid_sampler_bilinear2d</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>thnn_grid_sampler_bilinear2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="651" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3047" bodyend="3049"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1fc36d11ed2e13b2a9396104ef16d28d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_grid_sampler_bilinear2d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>thnn_grid_sampler_bilinear2d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="652" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3050" bodyend="3052"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a96a2516b995480a77c01bab2f6aa59f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_grid_sampler_bilinear2d_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>thnn_grid_sampler_bilinear2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="653" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3053" bodyend="3055"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4a4ce474c58f9b47c90eec70c4c0ba63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::thnn_grid_sampler_bilinear2d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, Tensor &amp;grad_grid, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>thnn_grid_sampler_bilinear2d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_grid</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="654" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3056" bodyend="3058"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab3be88bc1cf770cd7de39c0cca45ad1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::thnn_grid_sampler_bilinear2d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>thnn_grid_sampler_bilinear2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="655" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3059" bodyend="3061"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4e712147c289e76febe0cac13badc12a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_grid_sampler_bilinear3d_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>thnn_grid_sampler_bilinear3d_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="656" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3062" bodyend="3064"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3413d27ba280545c11bc812bcbc47f2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_grid_sampler_bilinear3d</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>thnn_grid_sampler_bilinear3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="657" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3065" bodyend="3067"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a618ee078ebb28d0c9d76a40440b02f8f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::thnn_grid_sampler_bilinear3d_forward_out</definition>
        <argsstring>(Tensor &amp;output, const Tensor &amp;self, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>thnn_grid_sampler_bilinear3d_forward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="658" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3068" bodyend="3070"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aea3ce144adf4424fc1ee9640f92b3199" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::thnn_grid_sampler_bilinear3d_forward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>thnn_grid_sampler_bilinear3d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="659" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3071" bodyend="3073"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3553ba41469f3c95c532a6d825ab9b8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::thnn_grid_sampler_bilinear3d_backward_out</definition>
        <argsstring>(Tensor &amp;grad_input, Tensor &amp;grad_grid, const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>thnn_grid_sampler_bilinear3d_backward_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_input</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_grid</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="660" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3074" bodyend="3076"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a63e2e1886e0b4ba12dcb9cc702800330" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::thnn_grid_sampler_bilinear3d_backward</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;self, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>thnn_grid_sampler_bilinear3d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="661" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3077" bodyend="3079"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a91a177256ab33b873d687e19c3280883" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cast_Byte</definition>
        <argsstring>(const Tensor &amp;self, bool non_blocking=false)</argsstring>
        <name>_cast_Byte</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>non_blocking</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="662" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3080" bodyend="3082"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aad42d014a9a5d12b03348bc9f6819e8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cast_Char</definition>
        <argsstring>(const Tensor &amp;self, bool non_blocking=false)</argsstring>
        <name>_cast_Char</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>non_blocking</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="663" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3083" bodyend="3085"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a041227584f954580aebef51288ac7ef7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cast_Double</definition>
        <argsstring>(const Tensor &amp;self, bool non_blocking=false)</argsstring>
        <name>_cast_Double</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>non_blocking</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="664" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3086" bodyend="3088"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4532e8431126861af416593e3596d903" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cast_Float</definition>
        <argsstring>(const Tensor &amp;self, bool non_blocking=false)</argsstring>
        <name>_cast_Float</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>non_blocking</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="665" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3089" bodyend="3091"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a53e25ebc1d37caa171f93a48f70517ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cast_Int</definition>
        <argsstring>(const Tensor &amp;self, bool non_blocking=false)</argsstring>
        <name>_cast_Int</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>non_blocking</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="666" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3092" bodyend="3094"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0ab5d190a6656a3a0966da3fcbc8fb41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cast_Long</definition>
        <argsstring>(const Tensor &amp;self, bool non_blocking=false)</argsstring>
        <name>_cast_Long</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>non_blocking</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="667" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3095" bodyend="3097"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a32c3ae35b2d20d7926e844e353e3b5e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cast_Short</definition>
        <argsstring>(const Tensor &amp;self, bool non_blocking=false)</argsstring>
        <name>_cast_Short</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>non_blocking</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="668" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3098" bodyend="3100"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1f0df76b8f2d31de8a8242f178da7886" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cast_Half</definition>
        <argsstring>(const Tensor &amp;self, bool non_blocking=false)</argsstring>
        <name>_cast_Half</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>non_blocking</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="669" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3101" bodyend="3103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a44046c342e06b0903ad391071e5a1213" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cudnn_rnn_flatten_weight</definition>
        <argsstring>(TensorList weight_arr, int64_t weight_stride0, int64_t input_size, int64_t mode, int64_t hidden_size, int64_t num_layers, bool batch_first, bool bidirectional)</argsstring>
        <name>_cudnn_rnn_flatten_weight</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>weight_arr</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>weight_stride0</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>input_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>hidden_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_layers</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>batch_first</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bidirectional</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="670" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3104" bodyend="3106"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3fd3c0c837d78413de6a9aa1ba3fa425" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor, Tensor, Tensor &gt; at::_cudnn_rnn</definition>
        <argsstring>(const Tensor &amp;input, TensorList weight, int64_t weight_stride0, const Tensor &amp;weight_buf, const Tensor &amp;hx, const Tensor &amp;cx, int64_t mode, int64_t hidden_size, int64_t num_layers, bool batch_first, double dropout, bool train, bool bidirectional, IntList batch_sizes, const Tensor &amp;dropout_state)</argsstring>
        <name>_cudnn_rnn</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>weight_stride0</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight_buf</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>hx</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>hidden_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_layers</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>batch_first</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dropout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>train</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bidirectional</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>batch_sizes</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dropout_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="671" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3107" bodyend="3109"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9076ba83f6901ce1dda474c5d3eda1e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt; &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor, std::vector&lt; Tensor &gt; &gt; at::_cudnn_rnn_backward</definition>
        <argsstring>(const Tensor &amp;input, TensorList weight, int64_t weight_stride0, const Tensor &amp;weight_buf, const Tensor &amp;hx, const Tensor &amp;cx, const Tensor &amp;output, const Tensor &amp;grad_output, const Tensor &amp;grad_hy, const Tensor &amp;grad_cy, int64_t mode, int64_t hidden_size, int64_t num_layers, bool batch_first, double dropout, bool train, bool bidirectional, IntList batch_sizes, const Tensor &amp;dropout_state, const Tensor &amp;reserve, std::array&lt; bool, 4 &gt; output_mask)</argsstring>
        <name>_cudnn_rnn_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>weight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>weight_stride0</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight_buf</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>hx</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>cx</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_hy</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_cy</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>hidden_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_layers</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>batch_first</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dropout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>train</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bidirectional</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>batch_sizes</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dropout_state</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>reserve</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 4 &gt;</type>
          <declname>output_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="672" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3110" bodyend="3112"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a549946defe386444ce849c6113a58009" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_cudnn_init_dropout_state</definition>
        <argsstring>(const Type &amp;self_ty, double dropout, bool train, int64_t dropout_seed)</argsstring>
        <name>_cudnn_init_dropout_state</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>self_ty</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dropout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>train</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dropout_seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="673" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3113" bodyend="3115"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a514afabf36bc821632d27f1fb0c8830b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::abs</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>abs</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="674" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3116" bodyend="3118"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a468b3a2dab90ab0d2bcedf0c478aebac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::abs_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>abs_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="675" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3119" bodyend="3121"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a02b3014719e12fb057d66a64f7d43fab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::abs_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>abs_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="676" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3122" bodyend="3124"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a73e3fe1e7655e7501c2029b5f4c3a7cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::acos</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>acos</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="677" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3125" bodyend="3127"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aff3a429eb0402204a3dd23862c47d054" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::acos_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>acos_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="678" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3128" bodyend="3130"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aebef762c9b9c8591f34a2ed929490a44" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::acos_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>acos_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="679" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3131" bodyend="3133"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a040ba1ca3c95f7c27e8e15fd011f4f37" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::avg_pool1d</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, bool ceil_mode=false, bool count_include_pad=true)</argsstring>
        <name>avg_pool1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>count_include_pad</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="680" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3134" bodyend="3136"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a27da05fd05e4d03e383a27798290ea0a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::adaptive_avg_pool1d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_avg_pool1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="681" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3137" bodyend="3139"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a45997ddf4498afb0f0a0f7d467278cfb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::adaptive_max_pool1d</definition>
        <argsstring>(const Tensor &amp;self, IntList output_size)</argsstring>
        <name>adaptive_max_pool1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="682" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3140" bodyend="3142"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6718f09b724a8c39442d1a1585db19e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::allclose</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, double rtol=1e-05, double atol=1e-08, bool equal_nan=false)</argsstring>
        <name>allclose</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rtol</declname>
          <defval>1e-05</defval>
        </param>
        <param>
          <type>double</type>
          <declname>atol</declname>
          <defval>1e-08</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>equal_nan</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="683" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3143" bodyend="3145"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaf7481bc4e3d22e958ac10c45bda1dd6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::addmv</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat, const Tensor &amp;vec, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>addmv</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="684" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3146" bodyend="3148"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab30cf123ff3c652ddb8b3c779bb79d45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::addmv_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;mat, const Tensor &amp;vec, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>addmv_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="685" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3149" bodyend="3151"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abc36a3d6f924a55a522f70c545fb627b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::addmv_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat, const Tensor &amp;vec, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>addmv_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="686" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3152" bodyend="3154"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae62ff171bfc8630dec04983e448c94bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::addr</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;vec1, const Tensor &amp;vec2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>addr</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="687" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3155" bodyend="3157"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afbdc9c781e6087b9a4b8e35b1d3d9489" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::addr_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;vec1, const Tensor &amp;vec2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>addr_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="688" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3158" bodyend="3160"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aeaaf3b650f4ab8ffced266aefd006138" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::all</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>all</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="689" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3161" bodyend="3163"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad0a28cd0205a70f3b1969361df24f783" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::all_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>all_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="690" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3164" bodyend="3166"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aeab2706c1401077dc10babd81beaa624" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::any</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>any</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="691" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3167" bodyend="3169"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a471a5507be837e8550f5a525ebe30ba5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::any_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>any_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="692" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3170" bodyend="3172"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adfa071f47c9bb857ac647f12539c6b56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::arange</definition>
        <argsstring>(Scalar start, Scalar end, const TensorOptions &amp;options={})</argsstring>
        <name>arange</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="693" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3173" bodyend="3176"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a834f4c3d8593d8106474bae08c5b36d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::arange</definition>
        <argsstring>(Scalar start, Scalar end, Scalar step, const TensorOptions &amp;options={})</argsstring>
        <name>arange</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>step</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="694" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3177" bodyend="3180"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7adf4b2abf5275e1141ce0d4d1a6c33e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::arange_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end)</argsstring>
        <name>arange_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="695" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3181" bodyend="3183"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1024e2afad8aa7ee48b9c08b84b787a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::arange_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end, Scalar step)</argsstring>
        <name>arange_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="696" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3184" bodyend="3186"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a50793f4e667cd88f636870fc4b57e5ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::arange</definition>
        <argsstring>(Scalar end, const TensorOptions &amp;options={})</argsstring>
        <name>arange</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="697" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3187" bodyend="3190"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3211da2f6ad93b91f5b799d972a44970" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::arange_out</definition>
        <argsstring>(Tensor &amp;result, Scalar end)</argsstring>
        <name>arange_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="698" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3191" bodyend="3193"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9f6d81896b014a184d2cdc16e36e5c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::AT_DEPRECATED</definition>
        <argsstring>(static inline Tensor arange(const Type &amp;dtype, Scalar start, Scalar end, Scalar step=1))</argsstring>
        <name>AT_DEPRECATED</name>
        <param>
          <type>static inline <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> </type>
          <declname>arange</declname>
          <array>const Type &amp;dtype, Scalar start, Scalar end, Scalar step=1</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="699" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7acad8a85cf60bb43c43e119d19fb119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::AT_DEPRECATED</definition>
        <argsstring>(static inline Tensor arange(const Type &amp;dtype, Scalar end))</argsstring>
        <name>AT_DEPRECATED</name>
        <param>
          <type>static inline <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> </type>
          <declname>arange</declname>
          <array>const Type &amp;dtype, Scalar end</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="700" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a56114c4c86c0b2b570308cd9b5d95f75" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_dim_arange</definition>
        <argsstring>(const Tensor &amp;like, int64_t dim)</argsstring>
        <name>_dim_arange</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>like</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="701" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3200" bodyend="3202"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9c09fbcf3c3403ebd821324c467ff301" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::argmax</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>argmax</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="702" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3203" bodyend="3205"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0f870c1b10edb5626484609302507c0b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::argmax</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>argmax</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="703" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3206" bodyend="3208"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1757d95bc70dad706325ece533e8e35e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_argmax</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_argmax</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="704" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3209" bodyend="3211"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a50394bc92555e7d658360ef9938fba66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::argmin</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>argmin</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="705" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3212" bodyend="3214"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad8d3e18ec95f34cbfa3fcb09b813fb6a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::argmin</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>argmin</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="706" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3215" bodyend="3217"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a40a43259277e10466d413b7865b63dde" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_argmin</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_argmin</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="707" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3218" bodyend="3220"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a89a889047e240a4a667208a2f1c28b6d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::as_strided</definition>
        <argsstring>(const Tensor &amp;self, IntList size, IntList stride)</argsstring>
        <name>as_strided</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="708" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3221" bodyend="3223"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac4df13384d47640813f4ed4816c4b29d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::as_strided_</definition>
        <argsstring>(Tensor &amp;self, IntList size, IntList stride)</argsstring>
        <name>as_strided_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="709" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3224" bodyend="3226"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a97785b9a1bae3e86538997583581ca30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::as_strided</definition>
        <argsstring>(const Tensor &amp;self, IntList size, IntList stride, int64_t storage_offset)</argsstring>
        <name>as_strided</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>storage_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="710" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3227" bodyend="3229"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1f724d8e463e1fabbcc3142c4332dd5a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::as_strided_</definition>
        <argsstring>(Tensor &amp;self, IntList size, IntList stride, int64_t storage_offset)</argsstring>
        <name>as_strided_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>storage_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="711" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3230" bodyend="3232"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac3411e4ff6bdb7841c1555beabe4efbe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::asin</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>asin</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="712" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3233" bodyend="3235"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a81c633c2837d173c6f2f69107d0e4b76" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::asin_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>asin_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="713" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3236" bodyend="3238"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a61cdb428bf91cecccd413dc1ec2302c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::asin_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>asin_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="714" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3239" bodyend="3241"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aea730970ddeda1abf6699af9bb3166e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::atan</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>atan</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="715" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3242" bodyend="3244"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a250ba75ab32a0dab0f08e8da8e9e66fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::atan_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>atan_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="716" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3245" bodyend="3247"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5b27af163485a1e1ed548ed60d6cc7d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::atan_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>atan_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="717" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3248" bodyend="3250"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa01c2035e4b25d4534d94ea337fa996e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::bartlett_window</definition>
        <argsstring>(int64_t window_length, const TensorOptions &amp;options={})</argsstring>
        <name>bartlett_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="718" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3251" bodyend="3254"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae622fefbd64a3ee7574a7eb8812674a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::bartlett_window</definition>
        <argsstring>(int64_t window_length, bool periodic, const TensorOptions &amp;options={})</argsstring>
        <name>bartlett_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="719" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3255" bodyend="3258"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa1ee4e013baf81d4469a9865d190ec34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::batch_norm</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, const Tensor &amp;running_mean, const Tensor &amp;running_var, bool training, double momentum, double eps, bool cudnn_enabled)</argsstring>
        <name>batch_norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type>double</type>
          <declname>momentum</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cudnn_enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="720" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3259" bodyend="3261"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4bce94888c508ae55a95d0222cad861f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::bernoulli</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;p, Generator *generator=nullptr)</argsstring>
        <name>bernoulli</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="721" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3262" bodyend="3264"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7d722645f77dafc9ece61cfb862dcaaf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::bernoulli</definition>
        <argsstring>(const Tensor &amp;self, double p, Generator *generator=nullptr)</argsstring>
        <name>bernoulli</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="722" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3265" bodyend="3267"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a528fc6413570091c13588162b3201304" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::bernoulli</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>bernoulli</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="723" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3268" bodyend="3270"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a28b302ae48f8ab9984effe0323ff6749" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::bernoulli_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;p, Generator *generator=nullptr)</argsstring>
        <name>bernoulli_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="724" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3271" bodyend="3273"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac215008dd4f2efc7ee2d12c0e94dd5ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::bernoulli_</definition>
        <argsstring>(Tensor &amp;self, double p, Generator *generator=nullptr)</argsstring>
        <name>bernoulli_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="725" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3274" bodyend="3276"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aebdae1d29b7937e1d4ca8415ec1cdf94" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::bernoulli_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>bernoulli_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="726" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3277" bodyend="3279"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac24d9b6c6c8ec40e8632290793142cc6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::bilinear</definition>
        <argsstring>(const Tensor &amp;input1, const Tensor &amp;input2, const Tensor &amp;weight, const Tensor &amp;bias)</argsstring>
        <name>bilinear</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="727" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3280" bodyend="3282"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af9c029c13ae758726b598270ed777f69" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::bincount</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weights={}, int64_t minlength=0)</argsstring>
        <name>bincount</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weights</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>minlength</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="728" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3283" bodyend="3285"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab7589531f4a90dfd6ca09944a97c211b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::blackman_window</definition>
        <argsstring>(int64_t window_length, const TensorOptions &amp;options={})</argsstring>
        <name>blackman_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="729" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3286" bodyend="3289"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af992529f04ab4821464a07126909292e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::blackman_window</definition>
        <argsstring>(int64_t window_length, bool periodic, const TensorOptions &amp;options={})</argsstring>
        <name>blackman_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="730" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3290" bodyend="3293"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af839d613b74129cfea41b6591d1706fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cat</definition>
        <argsstring>(TensorList tensors, int64_t dim=0)</argsstring>
        <name>cat</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="731" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3294" bodyend="3296"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab6c880adff5da9d95a63413eb4d45d11" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::cat_out</definition>
        <argsstring>(Tensor &amp;result, TensorList tensors, int64_t dim=0)</argsstring>
        <name>cat_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="732" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3297" bodyend="3299"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a70953390dce069de766ad62fc60ee59a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::ceil</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>ceil</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="733" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3300" bodyend="3302"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acba95ad2428cb0132f6484773a39bacb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::ceil_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>ceil_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="734" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3303" bodyend="3305"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a97b65b81010c0b934144ece3b1c8517b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::ceil_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>ceil_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="735" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3306" bodyend="3308"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af9736d4f1a4249746eb5df4e8ccbafab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::vector&lt; Tensor &gt; at::chunk</definition>
        <argsstring>(const Tensor &amp;self, int64_t chunks, int64_t dim=0)</argsstring>
        <name>chunk</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>chunks</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="736" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3309" bodyend="3311"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a03f6ec17e197d99c98bba6b1634f3adf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::clamp</definition>
        <argsstring>(const Tensor &amp;self, Scalar min, Scalar max)</argsstring>
        <name>clamp</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="737" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3312" bodyend="3314"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a42e80bf4cb763e232dda02d34d1ac0b9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::clamp_</definition>
        <argsstring>(Tensor &amp;self, Scalar min, Scalar max)</argsstring>
        <name>clamp_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="738" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3315" bodyend="3317"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a02d12e2b9a6c27b17b5143c867dd76d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::clamp_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar min, Scalar max)</argsstring>
        <name>clamp_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="739" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3318" bodyend="3320"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab838000b4810bff416dce47af5604d3b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::clamp_max</definition>
        <argsstring>(const Tensor &amp;self, Scalar max)</argsstring>
        <name>clamp_max</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="740" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3321" bodyend="3323"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad3c6587beb497f07dcb6fde61955c821" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::clamp_max_</definition>
        <argsstring>(Tensor &amp;self, Scalar max)</argsstring>
        <name>clamp_max_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="741" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3324" bodyend="3326"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5a5778bc3c4b4d969874a1db5d5b1723" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::clamp_max_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar max)</argsstring>
        <name>clamp_max_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="742" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3327" bodyend="3329"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6252024ab4dff4edb47ed33c3ffbf987" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::clamp_min</definition>
        <argsstring>(const Tensor &amp;self, Scalar min)</argsstring>
        <name>clamp_min</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="743" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3330" bodyend="3332"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af2898a24cf72e3c0675af33e6dea5a1d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::clamp_min_</definition>
        <argsstring>(Tensor &amp;self, Scalar min)</argsstring>
        <name>clamp_min_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="744" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3333" bodyend="3335"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa8d25a7418059bbcaacf9d6c60023fd1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::clamp_min_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar min)</argsstring>
        <name>clamp_min_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>min</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="745" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3336" bodyend="3338"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9f175faeff1a338e113e1e159ec6f32b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::cudnn_is_acceptable</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>cudnn_is_acceptable</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="746" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3339" bodyend="3341"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adff258b9628f46eb1055fd6aaf239158" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::convolution</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation, bool transposed, IntList output_padding, int64_t groups)</argsstring>
        <name>convolution</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="747" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3342" bodyend="3344"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a47c121f805501f521b22fa52ec84c377" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_convolution</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation, bool transposed, IntList output_padding, int64_t groups, bool benchmark, bool deterministic, bool cudnn_enabled)</argsstring>
        <name>_convolution</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cudnn_enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="748" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3345" bodyend="3347"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1accdd0496240232297bc24eeea6128e04" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_convolution_nogroup</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, IntList stride, IntList padding, IntList dilation, bool transposed, IntList output_padding)</argsstring>
        <name>_convolution_nogroup</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="749" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3348" bodyend="3350"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a48783207f8a773b187b26798ee545fdc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::_convolution_double_backward</definition>
        <argsstring>(const Tensor &amp;ggI, const Tensor &amp;ggW, const Tensor &amp;ggb, const Tensor &amp;gO, const Tensor &amp;weight, const Tensor &amp;self, IntList stride, IntList padding, IntList dilation, bool transposed, IntList output_padding, int64_t groups, bool benchmark, bool deterministic, bool cudnn_enabled, std::array&lt; bool, 3 &gt; output_mask)</argsstring>
        <name>_convolution_double_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ggI</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ggW</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>ggb</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>gO</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transposed</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cudnn_enabled</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="750" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3351" bodyend="3353"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5c5d14a6cd79452d889abc675c7f0ed6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::conv1d</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList dilation=1, int64_t groups=1)</argsstring>
        <name>conv1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="751" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3354" bodyend="3356"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae62019b4bbc1dd91b8cdc17c8784a4a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::conv2d</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList dilation=1, int64_t groups=1)</argsstring>
        <name>conv2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="752" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3357" bodyend="3359"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9c3b7fb4dcf5aee0c0640298fa742ff1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::conv3d</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList dilation=1, int64_t groups=1)</argsstring>
        <name>conv3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="753" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3360" bodyend="3362"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a67509ff597ddaa0e53c5f9408fe7accb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::conv_tbc</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, const Tensor &amp;bias, int64_t pad)</argsstring>
        <name>conv_tbc</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="754" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3363" bodyend="3365"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaa8be12ec5695aaa7916b5553638b210" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::conv_tbc_backward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, int64_t pad)</argsstring>
        <name>conv_tbc_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="755" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3366" bodyend="3368"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4cac3640c87e880faa8c8cd7a4f45ed8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::conv_transpose1d</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList output_padding=0, int64_t groups=1, IntList dilation=1)</argsstring>
        <name>conv_transpose1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="756" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3369" bodyend="3371"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae43b5c12fc8814d9e4cca7abf5869a7f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::conv_transpose2d</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList output_padding=0, int64_t groups=1, IntList dilation=1)</argsstring>
        <name>conv_transpose2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="757" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3372" bodyend="3374"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a63270d595f4777f7031c870e3948917b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::conv_transpose3d</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias={}, IntList stride=1, IntList padding=0, IntList output_padding=0, int64_t groups=1, IntList dilation=1)</argsstring>
        <name>conv_transpose3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="758" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3375" bodyend="3377"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abf8d833da61c59c98cbf4745fdc03c1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cos</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>cos</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="759" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3378" bodyend="3380"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af2e1be214bb3c8920341115a06642ef4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::cos_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>cos_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="760" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3381" bodyend="3383"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae7bea6608954d8eb0f9eeef80b1fd591" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::cos_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>cos_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="761" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3384" bodyend="3386"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adc562f6d7c66b7f5a0c3dd2169e1393c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cosh</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>cosh</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="762" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3387" bodyend="3389"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8b60824331fe1ae26c2910522f17778a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::cosh_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>cosh_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="763" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3390" bodyend="3392"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a88e653d9ae90f4556be549930c6ccf3b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::cosh_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>cosh_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="764" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3393" bodyend="3395"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad56cc26ed1b1cc674d5a06bccaf14526" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cosine_embedding_loss</definition>
        <argsstring>(const Tensor &amp;input1, const Tensor &amp;input2, const Tensor &amp;target, double margin=0.0, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>cosine_embedding_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>double</type>
          <declname>margin</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="765" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3396" bodyend="3398"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a26c89fd1e18d6d11d6b109a04d226be6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cudnn_affine_grid_generator</definition>
        <argsstring>(const Tensor &amp;theta, int64_t N, int64_t C, int64_t H, int64_t W)</argsstring>
        <name>cudnn_affine_grid_generator</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>C</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>H</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>W</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="766" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3399" bodyend="3401"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6653478c5e87a656c68a9b049752d05b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cudnn_affine_grid_generator_backward</definition>
        <argsstring>(const Tensor &amp;grad, int64_t N, int64_t C, int64_t H, int64_t W)</argsstring>
        <name>cudnn_affine_grid_generator_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>C</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>H</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>W</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="767" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3402" bodyend="3404"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a49f07eb0f183e021eab329f24d81701e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::cudnn_batch_norm</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;weight, const Tensor &amp;bias, const Tensor &amp;running_mean, const Tensor &amp;running_var, bool training, double exponential_average_factor, double epsilon)</argsstring>
        <name>cudnn_batch_norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_var</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
        </param>
        <param>
          <type>double</type>
          <declname>exponential_average_factor</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="768" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3405" bodyend="3407"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a864e19c70c58cb00358e348f5065d6c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::cudnn_batch_norm_backward</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;grad_output, const Tensor &amp;weight, const Tensor &amp;running_mean, const Tensor &amp;running_var, const Tensor &amp;save_mean, const Tensor &amp;save_var, double epsilon)</argsstring>
        <name>cudnn_batch_norm_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>running_var</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>save_mean</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>save_var</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="769" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3408" bodyend="3410"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a59cf3e105a897c18385028f0f278d482" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cudnn_convolution</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, const Tensor &amp;bias, IntList padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic)</argsstring>
        <name>cudnn_convolution</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="770" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3411" bodyend="3413"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1b1d13ea9e7a2688c9bb65f75a21ec15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cudnn_convolution_backward_input</definition>
        <argsstring>(IntList self_size, const Tensor &amp;grad_output, const Tensor &amp;weight, IntList padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic)</argsstring>
        <name>cudnn_convolution_backward_input</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>self_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="771" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3414" bodyend="3416"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a39f66cfa52922222c328035a509dfab1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::cudnn_convolution_backward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;grad_output, const Tensor &amp;weight, IntList padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic, std::array&lt; bool, 3 &gt; output_mask)</argsstring>
        <name>cudnn_convolution_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="772" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3417" bodyend="3419"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae11fc9ecd5184cd9b3a821a9ed9b0f85" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cudnn_convolution_backward_bias</definition>
        <argsstring>(const Tensor &amp;grad_output)</argsstring>
        <name>cudnn_convolution_backward_bias</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="773" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3420" bodyend="3422"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8395a7b68846d41b03d5725874f4e6fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cudnn_convolution_backward_weight</definition>
        <argsstring>(IntList weight_size, const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic)</argsstring>
        <name>cudnn_convolution_backward_weight</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>weight_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="774" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3423" bodyend="3425"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a457e85d7ce3852fdf59343da87574bd8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cudnn_convolution_transpose</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, const Tensor &amp;bias, IntList padding, IntList output_padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic)</argsstring>
        <name>cudnn_convolution_transpose</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="775" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3426" bodyend="3428"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aafd233c748486840ec3adbbf46d01250" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::cudnn_convolution_transpose_backward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;grad_output, const Tensor &amp;weight, IntList padding, IntList output_padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic, std::array&lt; bool, 3 &gt; output_mask)</argsstring>
        <name>cudnn_convolution_transpose_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="776" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3429" bodyend="3431"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa3750eefe956adad37044d0b8291419d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cudnn_convolution_transpose_backward_bias</definition>
        <argsstring>(const Tensor &amp;grad_output)</argsstring>
        <name>cudnn_convolution_transpose_backward_bias</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="777" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3432" bodyend="3434"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4164174e0be56355059480e1cd107ffe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cudnn_convolution_transpose_backward_input</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;weight, IntList padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic)</argsstring>
        <name>cudnn_convolution_transpose_backward_input</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="778" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3435" bodyend="3437"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a75b56c80361957ea7f48fc8f64274e15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cudnn_convolution_transpose_backward_weight</definition>
        <argsstring>(IntList weight_size, const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding, IntList stride, IntList dilation, int64_t groups, bool benchmark, bool deterministic)</argsstring>
        <name>cudnn_convolution_transpose_backward_weight</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>weight_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>benchmark</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="779" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3438" bodyend="3440"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3af24d676399047ba497c180f59f4563" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cudnn_grid_sampler</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;grid)</argsstring>
        <name>cudnn_grid_sampler</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="780" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3441" bodyend="3443"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a98469f7a70e8816af84c3f8c1c228664" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::cudnn_grid_sampler_backward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;grid, const Tensor &amp;grad_output)</argsstring>
        <name>cudnn_grid_sampler_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="781" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3444" bodyend="3446"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a382ad757bb784431cee50553547abaa0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cumsum</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>cumsum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="782" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3447" bodyend="3449"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a481d2ece256cccd2a091f5fc9dff4161" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cumsum</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>cumsum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="783" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3450" bodyend="3452"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab2deb7bf467555d08329901a7550151c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::cumsum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>cumsum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="784" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3453" bodyend="3455"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0c85ac88f461d5344c3b0c1b5a8fbf1e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::cumsum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim)</argsstring>
        <name>cumsum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="785" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3456" bodyend="3458"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7bcc2046ce10afe6efb7a92c4e68225f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cumprod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>cumprod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="786" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3459" bodyend="3461"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2ff8cf232e7affad108de21787629559" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::cumprod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>cumprod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="787" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3462" bodyend="3464"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac3e91acd35cc340580b6542fa3a4ce89" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::cumprod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>cumprod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="788" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3465" bodyend="3467"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3fff5246653a8a43f1d8f6950d7bd31d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::cumprod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim)</argsstring>
        <name>cumprod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="789" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3468" bodyend="3470"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a922ae94d41acc876e8ff18faa711de0b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::det</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>det</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="790" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3471" bodyend="3473"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adc80ded13aee4a6c5f9c00f4273c58da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::diagflat</definition>
        <argsstring>(const Tensor &amp;self, int64_t offset=0)</argsstring>
        <name>diagflat</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="791" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3474" bodyend="3476"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8d56d4d525ab0efaf33a9c0979a081e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::diagonal</definition>
        <argsstring>(const Tensor &amp;self, int64_t offset=0, int64_t dim1=0, int64_t dim2=1)</argsstring>
        <name>diagonal</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim1</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim2</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="792" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3477" bodyend="3479"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a85b4aa562c561f73766af7547d2389b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::dot</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;tensor)</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="793" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3480" bodyend="3482"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afb36487c6acd0e3b1619c02c9fa6f8a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::dot_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;tensor)</argsstring>
        <name>dot_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="794" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3483" bodyend="3485"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad1a19b8d88d8e8a9d16630922dcd7676" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::einsum</definition>
        <argsstring>(std::string equation, TensorList tensors)</argsstring>
        <name>einsum</name>
        <param>
          <type>std::string</type>
          <declname>equation</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="795" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3486" bodyend="3488"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abe4d57b34f7261a73118048aa5fd40c4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::embedding</definition>
        <argsstring>(const Tensor &amp;weight, const Tensor &amp;indices, int64_t padding_idx=-1, bool scale_grad_by_freq=false, bool sparse=false)</argsstring>
        <name>embedding</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_idx</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sparse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="796" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3489" bodyend="3491"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8459f56a53233a0c3271e3a3fe1b2b55" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::embedding_backward</definition>
        <argsstring>(const Tensor &amp;grad, const Tensor &amp;indices, int64_t num_weights, int64_t padding_idx, bool scale_grad_by_freq, bool sparse)</argsstring>
        <name>embedding_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_weights</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_idx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sparse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="797" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3492" bodyend="3494"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae1373214754b1cc6948761a0a01c48e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::embedding_dense_backward</definition>
        <argsstring>(const Tensor &amp;grad, const Tensor &amp;indices, int64_t num_weights, int64_t padding_idx, bool scale_grad_by_freq)</argsstring>
        <name>embedding_dense_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_weights</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_idx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="798" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3495" bodyend="3497"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2e24b3abb0f34e847a01ad14e187c0c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::embedding_renorm_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;indices, double max_norm, double norm_type)</argsstring>
        <name>embedding_renorm_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_norm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>norm_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="799" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3498" bodyend="3500"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5a5eca9026357ed2c90d8a64cf743165" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::embedding_sparse_backward</definition>
        <argsstring>(const Tensor &amp;grad, const Tensor &amp;indices, int64_t num_weights, int64_t padding_idx, bool scale_grad_by_freq)</argsstring>
        <name>embedding_sparse_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_weights</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_idx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="800" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3501" bodyend="3503"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4f246cda80a183a02aa7d02f34848cb9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor, Tensor &gt; at::embedding_bag</definition>
        <argsstring>(const Tensor &amp;weight, const Tensor &amp;indices, const Tensor &amp;offsets, bool scale_grad_by_freq=false, int64_t mode=0, bool sparse=false)</argsstring>
        <name>embedding_bag</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>mode</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sparse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="801" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3504" bodyend="3506"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0f286035bf7ffc5419ee548f32c8e5e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor, Tensor &gt; at::_embedding_bag</definition>
        <argsstring>(const Tensor &amp;weight, const Tensor &amp;indices, const Tensor &amp;offsets, bool scale_grad_by_freq=false, int64_t mode=0, bool sparse=false)</argsstring>
        <name>_embedding_bag</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>mode</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sparse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="802" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3507" bodyend="3509"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8db217488f95552d69c5127b7bd31b66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_embedding_bag_backward</definition>
        <argsstring>(const Tensor &amp;grad, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;offset2bag, const Tensor &amp;bag_size, const Tensor &amp;maximum_indices, int64_t num_weights, bool scale_grad_by_freq, int64_t mode, bool sparse)</argsstring>
        <name>_embedding_bag_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offset2bag</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bag_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>maximum_indices</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_weights</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sparse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="803" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3510" bodyend="3512"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abc2a477d9a34cf8cbbb7334bb5f77239" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_embedding_bag_sparse_backward</definition>
        <argsstring>(const Tensor &amp;grad, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;offset2bag, const Tensor &amp;bag_size, int64_t num_weights, bool scale_grad_by_freq, int64_t mode)</argsstring>
        <name>_embedding_bag_sparse_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offset2bag</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bag_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_weights</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="804" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3513" bodyend="3515"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad17d9f1338931763f66ec55604d4a36d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_embedding_bag_dense_backward</definition>
        <argsstring>(const Tensor &amp;grad, const Tensor &amp;indices, const Tensor &amp;offsets, const Tensor &amp;offset2bag, const Tensor &amp;bag_size, const Tensor &amp;maximum_indices, int64_t num_weights, bool scale_grad_by_freq, int64_t mode)</argsstring>
        <name>_embedding_bag_dense_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>offset2bag</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bag_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>maximum_indices</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_weights</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>scale_grad_by_freq</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="805" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3516" bodyend="3518"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a14bcdfb77836bdbf087a667746d5c7bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::empty</definition>
        <argsstring>(IntList size, const TensorOptions &amp;options={})</argsstring>
        <name>empty</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="806" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3519" bodyend="3522"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5421641234e0d25ca9fc64ad5df490c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::empty_out</definition>
        <argsstring>(Tensor &amp;result, IntList size)</argsstring>
        <name>empty_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="807" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3523" bodyend="3525"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af2e0e65a921cffb1ed1d3f961663576e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::empty_like</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>empty_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="808" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3526" bodyend="3528"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8fd7995f6c3e39bf39e87ce50a414a5e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::empty_like</definition>
        <argsstring>(const Tensor &amp;self, const TensorOptions &amp;options)</argsstring>
        <name>empty_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="809" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3529" bodyend="3532"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a12883051cd678fecc5b10ca587c6f93a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::AT_DEPRECATED</definition>
        <argsstring>(static inline Tensor empty(const Type &amp;dtype, IntList size))</argsstring>
        <name>AT_DEPRECATED</name>
        <param>
          <type>static inline <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> </type>
          <declname>empty</declname>
          <array>const Type &amp;dtype, IntList size</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="810" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a37daa9bb9a05250496be3cc6448077ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::erf</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>erf</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="811" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3536" bodyend="3538"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acdc69a78cc3e16525258175a60913c7d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::erf_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>erf_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="812" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3539" bodyend="3541"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac32270c440bbbd54bba7e29b7c07502e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::erf_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>erf_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="813" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3542" bodyend="3544"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6a05ce1fd50d34ae044dbfe6f358ce20" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::erfc</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>erfc</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="814" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3545" bodyend="3547"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a58a6930969e13ab09477af83b174ba6e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::erfc_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>erfc_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="815" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3548" bodyend="3550"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a86b67f4fbd6f0c70c003bc3865ed76a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::erfc_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>erfc_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="816" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3551" bodyend="3553"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3e012377af19b8b619fd9aa1938fa72d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::exp</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>exp</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="817" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3554" bodyend="3556"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aacd6b02857cf600d3c75de6b3858d675" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::exp_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>exp_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="818" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3557" bodyend="3559"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1d4248fcc33b40d48568ef787d927976" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::exp_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>exp_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="819" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3560" bodyend="3562"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3fd84139fa7003b8efe9c4fd6fa078a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::expm1</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>expm1</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="820" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3563" bodyend="3565"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aff2a121bb0a56c52bf9d4346f537c00f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::expm1_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>expm1_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="821" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3566" bodyend="3568"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9e0b9f745b78783788478b1e6bd40652" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::expm1_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>expm1_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="822" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3569" bodyend="3571"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3b527f085c232949879495d846b1ac21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::eye</definition>
        <argsstring>(int64_t n, const TensorOptions &amp;options={})</argsstring>
        <name>eye</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="823" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3572" bodyend="3575"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1a6b8e3a72116ec07c1563fcd9db0d04" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::eye</definition>
        <argsstring>(int64_t n, int64_t m, const TensorOptions &amp;options={})</argsstring>
        <name>eye</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="824" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3576" bodyend="3579"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a09e2cfce96b9c55d5af7288e7ca08250" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::eye_out</definition>
        <argsstring>(Tensor &amp;result, int64_t n)</argsstring>
        <name>eye_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="825" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3580" bodyend="3582"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a72a5514d195b0501f02908cff8b365f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::eye_out</definition>
        <argsstring>(Tensor &amp;result, int64_t n, int64_t m)</argsstring>
        <name>eye_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="826" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3583" bodyend="3585"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a934a908f210709f2033989f6624a93a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::AT_DEPRECATED</definition>
        <argsstring>(static inline Tensor eye(const Type &amp;dtype, int64_t n, int64_t m=-1))</argsstring>
        <name>AT_DEPRECATED</name>
        <param>
          <type>static inline <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> </type>
          <declname>eye</declname>
          <array>const Type &amp;dtype, int64_t n, int64_t m=-1</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="827" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a55843006e38a3a24949dc0704598da87" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::flatten</definition>
        <argsstring>(const Tensor &amp;self, int64_t start_dim=0, int64_t end_dim=-1)</argsstring>
        <name>flatten</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start_dim</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>end_dim</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="828" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3589" bodyend="3591"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a51b8e8d6acf9df09d7d507dd2dc4b556" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::fill_</definition>
        <argsstring>(Tensor &amp;self, Scalar value)</argsstring>
        <name>fill_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="829" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3592" bodyend="3594"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0427cb29203212797c284a0a3062a4d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::fill_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;value)</argsstring>
        <name>fill_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="830" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3595" bodyend="3597"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa6f1ef7a4554f521bdd551b496165cd1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::floor</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>floor</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="831" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3598" bodyend="3600"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac9c5a707faafb916ed8ac61d86e1a3e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::floor_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>floor_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="832" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3601" bodyend="3603"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaf74009f1b37c5eafb7ced9216ff2cff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::floor_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>floor_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="833" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3604" bodyend="3606"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acdfc1896a1d3e7186df0d5248f7decc8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::full</definition>
        <argsstring>(IntList size, Scalar fill_value, const TensorOptions &amp;options={})</argsstring>
        <name>full</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>fill_value</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="834" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3607" bodyend="3610"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae80491c64a811ba9ec5e25db583b024b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::full_out</definition>
        <argsstring>(Tensor &amp;result, IntList size, Scalar fill_value)</argsstring>
        <name>full_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>fill_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="835" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3611" bodyend="3613"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa1099905ada26a500e9946c26f9d045b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::full_like</definition>
        <argsstring>(const Tensor &amp;self, Scalar fill_value)</argsstring>
        <name>full_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>fill_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="836" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3614" bodyend="3616"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae1c79920a5bb040d48e0f9ee117a852d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::full_like</definition>
        <argsstring>(const Tensor &amp;self, Scalar fill_value, const TensorOptions &amp;options)</argsstring>
        <name>full_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>fill_value</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="837" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3617" bodyend="3620"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ace526504de8499ba5ad973a6a4efaf50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::AT_DEPRECATED</definition>
        <argsstring>(static inline Tensor full(const Type &amp;dtype, IntList size, Scalar fill_value))</argsstring>
        <name>AT_DEPRECATED</name>
        <param>
          <type>static inline <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> </type>
          <declname>full</declname>
          <array>const Type &amp;dtype, IntList size, Scalar fill_value</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="838" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a84c0d38d7fcbab687045dec2794ce261" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::grid_sampler</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;grid, int64_t padding_mode)</argsstring>
        <name>grid_sampler</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>padding_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="839" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3624" bodyend="3626"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2e1b1e68be0e91aa1abee3e85ab8cbc0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hann_window</definition>
        <argsstring>(int64_t window_length, const TensorOptions &amp;options={})</argsstring>
        <name>hann_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="840" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3627" bodyend="3630"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0a1ba89f5a1b9197089cba8070cce2e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hann_window</definition>
        <argsstring>(int64_t window_length, bool periodic, const TensorOptions &amp;options={})</argsstring>
        <name>hann_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="841" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3631" bodyend="3634"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abada76a4b67ef1ae65ee2590f242cc5f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hamming_window</definition>
        <argsstring>(int64_t window_length, const TensorOptions &amp;options={})</argsstring>
        <name>hamming_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="842" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3635" bodyend="3638"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ada4ad5e50ffaef02dcf5ebd6fd736472" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hamming_window</definition>
        <argsstring>(int64_t window_length, bool periodic, const TensorOptions &amp;options={})</argsstring>
        <name>hamming_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="843" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3639" bodyend="3642"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aefde725b94ff060e90f05f2ffe1d4ab8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hamming_window</definition>
        <argsstring>(int64_t window_length, bool periodic, double alpha, const TensorOptions &amp;options={})</argsstring>
        <name>hamming_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="844" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3643" bodyend="3646"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab61972626244227489ce0c719662f6d2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hamming_window</definition>
        <argsstring>(int64_t window_length, bool periodic, double alpha, double beta, const TensorOptions &amp;options={})</argsstring>
        <name>hamming_window</name>
        <param>
          <type>int64_t</type>
          <declname>window_length</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>periodic</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="845" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3647" bodyend="3650"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2e700268d2b0f6404074bee01f5a34aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hinge_embedding_loss</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;target, double margin=1.0, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>hinge_embedding_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>double</type>
          <declname>margin</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="846" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3651" bodyend="3653"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8344c6c44d36d4884a2ca83e7e547b0a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::ger</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;vec2)</argsstring>
        <name>ger</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="847" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3654" bodyend="3656"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac2c9cdaba76b4eb25e4e19a4240499d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::ger_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;vec2)</argsstring>
        <name>ger_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="848" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3657" bodyend="3659"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1b8737cb4f4d0a10e8662ceae908b36f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::gesv</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;A)</argsstring>
        <name>gesv</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="849" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3660" bodyend="3662"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3bfdd8e847a5f6f7eeff31e3cbd2b001" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::gesv_out</definition>
        <argsstring>(Tensor &amp;solution, Tensor &amp;lu, const Tensor &amp;self, const Tensor &amp;A)</argsstring>
        <name>gesv_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>solution</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>lu</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="850" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3663" bodyend="3665"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac39e483eb693d0648dc032427a1040b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::_gesv_helper</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;A)</argsstring>
        <name>_gesv_helper</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="851" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3666" bodyend="3668"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abdbb72e70f6be26fd8c3f686ac4ec8f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::group_norm</definition>
        <argsstring>(const Tensor &amp;input, int64_t num_groups, const Tensor &amp;weight={}, const Tensor &amp;bias={}, double eps=1e-05, bool cudnn_enabled=true)</argsstring>
        <name>group_norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>num_groups</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval>1e-05</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>cudnn_enabled</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="852" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3669" bodyend="3671"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3c00c632a6391e6fb8246938ad254da1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::fft</definition>
        <argsstring>(const Tensor &amp;self, int64_t signal_ndim, bool normalized=false)</argsstring>
        <name>fft</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>signal_ndim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>normalized</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="853" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3672" bodyend="3674"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a420a51562a7a5bc58720a0d578fd20c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::ifft</definition>
        <argsstring>(const Tensor &amp;self, int64_t signal_ndim, bool normalized=false)</argsstring>
        <name>ifft</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>signal_ndim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>normalized</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="854" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3675" bodyend="3677"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a60d175318c1efc1402a27484de1c2e80" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::rfft</definition>
        <argsstring>(const Tensor &amp;self, int64_t signal_ndim, bool normalized=false, bool onesided=true)</argsstring>
        <name>rfft</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>signal_ndim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>normalized</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>onesided</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="855" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3678" bodyend="3680"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4bc423d97606def7ad4a460d107c7a63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::irfft</definition>
        <argsstring>(const Tensor &amp;self, int64_t signal_ndim, bool normalized=false, bool onesided=true, IntList signal_sizes={})</argsstring>
        <name>irfft</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>signal_ndim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>normalized</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>onesided</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>signal_sizes</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="856" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3681" bodyend="3683"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac1b89a56a50fe843ca3ec7b104dce5c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_fft_with_size</definition>
        <argsstring>(const Tensor &amp;self, int64_t signal_ndim, bool complex_input, bool complex_output, bool inverse, IntList checked_signal_sizes, bool normalized, bool onesided, IntList output_sizes)</argsstring>
        <name>_fft_with_size</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>signal_ndim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>complex_input</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>complex_output</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inverse</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>checked_signal_sizes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>normalized</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onesided</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>output_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="857" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3684" bodyend="3686"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af74aec110ea8f339a19f2c8d6c8f0b92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::_cufft_get_plan_cache_size</definition>
        <argsstring>()</argsstring>
        <name>_cufft_get_plan_cache_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="858" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3687" bodyend="3689"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1748201bcce33c31ed45ab9d26b871d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::_cufft_get_plan_cache_max_size</definition>
        <argsstring>()</argsstring>
        <name>_cufft_get_plan_cache_max_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="859" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3690" bodyend="3692"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae7429b2c05bb82ed6a33ba683725be8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::_cufft_set_plan_cache_max_size</definition>
        <argsstring>(int64_t max_size)</argsstring>
        <name>_cufft_set_plan_cache_max_size</name>
        <param>
          <type>int64_t</type>
          <declname>max_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="860" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3693" bodyend="3695"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a73cb7cb8484e2a8c6ea6c06ccab0ad5c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::_cufft_clear_plan_cache</definition>
        <argsstring>()</argsstring>
        <name>_cufft_clear_plan_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="861" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3696" bodyend="3698"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa35c2bf04b75e2a7e61fcbe034acc5d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::index</definition>
        <argsstring>(const Tensor &amp;self, TensorList indices)</argsstring>
        <name>index</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="862" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3699" bodyend="3701"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a429926e714f83c286496c837fd04d8fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::index_put</definition>
        <argsstring>(const Tensor &amp;self, TensorList indices, const Tensor &amp;values)</argsstring>
        <name>index_put</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="863" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3702" bodyend="3704"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad00c5be1363446aa68425ce1d7f3e2ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::index_put_</definition>
        <argsstring>(Tensor &amp;self, TensorList indices, const Tensor &amp;values)</argsstring>
        <name>index_put_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="864" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3705" bodyend="3707"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abacfa3904f73dbb0409368a19964e040" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::inverse</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>inverse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="865" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3708" bodyend="3710"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4f80d9a430abdf42b1cf987cc9a19b4b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::inverse_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>inverse_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="866" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3711" bodyend="3713"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab11337f0080c25f6daa096090a39fd53" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::isclose</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, double rtol=1e-05, double atol=1e-08, bool equal_nan=false)</argsstring>
        <name>isclose</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rtol</declname>
          <defval>1e-05</defval>
        </param>
        <param>
          <type>double</type>
          <declname>atol</declname>
          <defval>1e-08</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>equal_nan</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="867" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3714" bodyend="3716"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aff8dd95e2451890f7a74439e1faa0b94" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::is_cuda</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>is_cuda</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="868" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3717" bodyend="3719"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7c714b048d5089e5669734b1484a5ccb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::is_distributed</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>is_distributed</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="869" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3720" bodyend="3722"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acf997a7a3a7746c7283a5536e667659f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::is_floating_point</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>is_floating_point</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="870" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3723" bodyend="3725"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a457bcb97f5ec7792e7200a1ad9bf30cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::is_nonzero</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>is_nonzero</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="871" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3726" bodyend="3728"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6b17af210da01ebbe7b36da7e398f33e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::is_same_size</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>is_same_size</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="872" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3729" bodyend="3731"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a08793a31e10355f32a515a1d9bf45b3e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::is_signed</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>is_signed</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="873" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3732" bodyend="3734"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0eff8ba66d91ab9906605ca277d53744" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::is_sparse</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>is_sparse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="874" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3735" bodyend="3737"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a693f136d11a2380f9223e005c15a261f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::kthvalue</definition>
        <argsstring>(const Tensor &amp;self, int64_t k, int64_t dim=-1, bool keepdim=false)</argsstring>
        <name>kthvalue</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="875" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3738" bodyend="3740"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5b9d34a7d5de3334054c3a2c40dc0c11" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::kthvalue_out</definition>
        <argsstring>(Tensor &amp;values, Tensor &amp;indices, const Tensor &amp;self, int64_t k, int64_t dim=-1, bool keepdim=false)</argsstring>
        <name>kthvalue_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="876" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3741" bodyend="3743"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5d2ff50fb98f5d746cbb5fde860e7484" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::layer_norm</definition>
        <argsstring>(const Tensor &amp;input, IntList normalized_shape, const Tensor &amp;weight={}, const Tensor &amp;bias={}, double eps=1e-05, bool cudnn_enable=true)</argsstring>
        <name>layer_norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>normalized_shape</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval>1e-05</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>cudnn_enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="877" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3744" bodyend="3746"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a85d8ea21a95a9dccad60e12bcbd87822" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::linspace</definition>
        <argsstring>(Scalar start, Scalar end, const TensorOptions &amp;options={})</argsstring>
        <name>linspace</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="878" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3747" bodyend="3750"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4f3c447fd2074036272a0293ca68bbf9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::linspace</definition>
        <argsstring>(Scalar start, Scalar end, int64_t steps, const TensorOptions &amp;options={})</argsstring>
        <name>linspace</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>steps</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="879" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3751" bodyend="3754"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0c57fdaedbfe2da93b81491a8646d462" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::linspace_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end)</argsstring>
        <name>linspace_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="880" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3755" bodyend="3757"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aef2f3f4fc25cb425a056d3eb64cd83ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::linspace_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end, int64_t steps)</argsstring>
        <name>linspace_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="881" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3758" bodyend="3760"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2fb237cfe0c6cf0e371ff4433fe94e9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::AT_DEPRECATED</definition>
        <argsstring>(static inline Tensor linspace(const Type &amp;dtype, Scalar start, Scalar end, int64_t steps=100))</argsstring>
        <name>AT_DEPRECATED</name>
        <param>
          <type>static inline <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> </type>
          <declname>linspace</declname>
          <array>const Type &amp;dtype, Scalar start, Scalar end, int64_t steps=100</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="882" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afbad55cdae7cd84b8ae632c3158d14b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::log</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>log</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="883" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3764" bodyend="3766"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a416482646bda474d760ce7943ce91084" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::log_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>log_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="884" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3767" bodyend="3769"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8a8d0f1c5490981c7506af5defd62427" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::log_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>log_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="885" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3770" bodyend="3772"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a42d41fd1b0cf703e59388bce15a9dc3d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::log10</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>log10</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="886" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3773" bodyend="3775"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ade82634a232421aa83defa848d616a22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::log10_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>log10_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="887" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3776" bodyend="3778"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6b787b116ad917efb6a110118f4aeb18" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::log10_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>log10_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="888" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3779" bodyend="3781"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2b335b37762be7e605b514563fa039e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::log1p</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>log1p</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="889" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3782" bodyend="3784"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a954e20f612e883aaca7b89788df59dc0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::log1p_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>log1p_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="890" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3785" bodyend="3787"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1753fa7188a8b98ab23466e0b3a5c68a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::log1p_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>log1p_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="891" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3788" bodyend="3790"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a24bc24f71c7215adfe958115f8028670" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::log2</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>log2</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="892" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3791" bodyend="3793"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaf876053e1b04bdad23674c5d6978fc9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::log2_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>log2_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="893" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3794" bodyend="3796"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aef28bc508f86ce1073f6603d244f690b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::log2_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>log2_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="894" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3797" bodyend="3799"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afd7127fdecd7303bd25bc084f3d3625d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::logdet</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>logdet</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="895" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3800" bodyend="3802"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0eb2b36ef570ae31b2fd6411251ce880" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::logspace</definition>
        <argsstring>(Scalar start, Scalar end, const TensorOptions &amp;options={})</argsstring>
        <name>logspace</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="896" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3803" bodyend="3806"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaa69e3a549a4c51d38128b78a80592d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::logspace</definition>
        <argsstring>(Scalar start, Scalar end, int64_t steps, const TensorOptions &amp;options={})</argsstring>
        <name>logspace</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>steps</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="897" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3807" bodyend="3810"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8a09b6924a491c4305a17bfa7b175580" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::logspace_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end)</argsstring>
        <name>logspace_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="898" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3811" bodyend="3813"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a90e0589b03e69f9c433081a2694dea8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::logspace_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end, int64_t steps)</argsstring>
        <name>logspace_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="899" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3814" bodyend="3816"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adc71dae066a5ac6e27da2df69cfb85bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::log_softmax</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>log_softmax</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="901" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3820" bodyend="3822"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aec8d7196da7aa91155e90cbca97579e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::log_softmax_backward_data</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;output, int64_t dim, const Tensor &amp;self)</argsstring>
        <name>log_softmax_backward_data</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="902" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3823" bodyend="3825"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3ddc6c222fa8b9da38a63f80d95936fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::logsumexp</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>logsumexp</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="903" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3826" bodyend="3828"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aea4de0d2a554b358f49dc3b21da121e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::logsumexp_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>logsumexp_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="904" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3829" bodyend="3831"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1abd2d1ba6246e9f43a01a7b40b808ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::margin_ranking_loss</definition>
        <argsstring>(const Tensor &amp;input1, const Tensor &amp;input2, const Tensor &amp;target, double margin=0.0, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>margin_ranking_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>double</type>
          <declname>margin</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="905" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3832" bodyend="3834"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0e928e234e518e16f2f3b1c66b53c27d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::matmul</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>matmul</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="906" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3835" bodyend="3837"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af85d1f94d881f92935d5c516ed16479e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::matmul_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>matmul_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="907" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3838" bodyend="3840"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a49425db0199b37853776e83658c6b27c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::max</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>max</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="908" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3841" bodyend="3843"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1e4ffc4577835767d7826e758dd45098" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::max_out</definition>
        <argsstring>(Tensor &amp;max, Tensor &amp;max_values, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>max_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>max_values</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="909" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3844" bodyend="3846"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4b2e68d938027a45ff42bb94a9649fb1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max_values</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>max_values</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="910" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3847" bodyend="3849"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2e18347fefc918b035ef2154a08fe5e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::max_pool1d_with_indices</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, IntList dilation=1, bool ceil_mode=false)</argsstring>
        <name>max_pool1d_with_indices</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="911" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3850" bodyend="3852"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adc29791313430b94c75f75a8ae116530" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max_pool1d</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, IntList dilation=1, bool ceil_mode=false)</argsstring>
        <name>max_pool1d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="912" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3853" bodyend="3855"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a024f50e7c64675f2d1ab2e30ae62db14" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max_pool2d</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, IntList dilation=1, bool ceil_mode=false)</argsstring>
        <name>max_pool2d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="913" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3856" bodyend="3858"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a265b286c88ead4a48e9e006f0f4c4ac7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::max_pool3d</definition>
        <argsstring>(const Tensor &amp;self, IntList kernel_size, IntList stride={}, IntList padding=0, IntList dilation=1, bool ceil_mode=false)</argsstring>
        <name>max_pool3d</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>kernel_size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>ceil_mode</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="914" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3859" bodyend="3861"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abfdb7a5b7a662805aa389c8756f03f70" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mean</definition>
        <argsstring>(const Tensor &amp;self, ScalarType dtype)</argsstring>
        <name>mean</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="915" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3862" bodyend="3864"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0e31c08047fb39c0000086b891f6efbb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mean</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>mean</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="916" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3865" bodyend="3867"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a20e83d5dc706a5253f29e3b61bf63d18" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mean</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim, ScalarType dtype)</argsstring>
        <name>mean</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="917" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3868" bodyend="3870"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2a1849eceb59d3ab21eb174ab8e9ea84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mean</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>mean</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="918" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3871" bodyend="3873"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a77388e4157cf43749c9558505bf406f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mean</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>mean</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="919" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3874" bodyend="3876"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3218e93cec9625d75dd19dd83f0de5cb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::mean_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim, ScalarType dtype)</argsstring>
        <name>mean_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="920" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3877" bodyend="3879"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a22cf4078e47e5496f834072d5f1682be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::mean_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>mean_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="921" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3880" bodyend="3882"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2f2583f44da9a1277a1c87ae626ce116" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::mean_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>mean_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="922" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3883" bodyend="3885"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af05c0d1b40e4f3b6fb8622ff4aad2827" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::median</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>median</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="923" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3886" bodyend="3888"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0c28537154033f551a2cb2121eae72f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::median_out</definition>
        <argsstring>(Tensor &amp;values, Tensor &amp;indices, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>median_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="924" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3889" bodyend="3891"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3b65df64cb3dc3a1dcb6a115f541b6b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::min</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>min</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="925" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3892" bodyend="3894"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af55a2673d947e6d83d9ca9bdd56abb79" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::min_out</definition>
        <argsstring>(Tensor &amp;min, Tensor &amp;min_indices, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>min_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>min_indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="926" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3895" bodyend="3897"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab09dfa09f4d447dd4288e9f6610e3c72" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::min_values</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>min_values</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="927" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3898" bodyend="3900"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a88148d1639721dc0a464f081b85edb1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mkldnn_convolution</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;weight, const Tensor &amp;bias, IntList padding, IntList stride, IntList dilation, int64_t groups)</argsstring>
        <name>mkldnn_convolution</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="928" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3901" bodyend="3903"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8dcbad9bd4ef44da180a8e315b2a745d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mkldnn_convolution_backward_input</definition>
        <argsstring>(IntList self_size, const Tensor &amp;grad_output, const Tensor &amp;weight, IntList padding, IntList stride, IntList dilation, int64_t groups, bool bias_defined)</argsstring>
        <name>mkldnn_convolution_backward_input</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>self_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bias_defined</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="929" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3904" bodyend="3906"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad83a480c208e7dbc635a333d981a7a99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::mkldnn_convolution_backward_weights</definition>
        <argsstring>(IntList weight_size, const Tensor &amp;grad_output, const Tensor &amp;self, IntList padding, IntList stride, IntList dilation, int64_t groups, bool bias_defined)</argsstring>
        <name>mkldnn_convolution_backward_weights</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>weight_size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bias_defined</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="930" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3907" bodyend="3909"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afff5e5a931ace00072f04b803c788877" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor, Tensor &gt; at::mkldnn_convolution_backward</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;grad_output, const Tensor &amp;weight, IntList padding, IntList stride, IntList dilation, int64_t groups, std::array&lt; bool, 3 &gt; output_mask)</argsstring>
        <name>mkldnn_convolution_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>weight</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>padding</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dilation</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>std::array&lt; bool, 3 &gt;</type>
          <declname>output_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="931" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3910" bodyend="3912"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac21be4a6b3f22dfbb52300dc233e270c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat2)</argsstring>
        <name>mm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="932" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3913" bodyend="3915"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad11495ed2b400e9807086650fb93889a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::mm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat2)</argsstring>
        <name>mm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="933" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3916" bodyend="3918"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a021799cd137358db9099a2fb8cb9d72e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::mode</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim=-1, bool keepdim=false)</argsstring>
        <name>mode</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="934" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3919" bodyend="3921"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae39e583ae5b1a98462987afd5483b1fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp; &gt;</type>
        <definition>static std::tuple&lt; Tensor &amp;, Tensor &amp; &gt; at::mode_out</definition>
        <argsstring>(Tensor &amp;values, Tensor &amp;indices, const Tensor &amp;self, int64_t dim=-1, bool keepdim=false)</argsstring>
        <name>mode_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="935" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3922" bodyend="3924"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab81faebb455f8875ef5b29b6f0856773" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mv</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;vec)</argsstring>
        <name>mv</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="936" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3925" bodyend="3927"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab117d007a627170e588e4c532589eec5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::mv_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;vec)</argsstring>
        <name>mv_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="937" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3928" bodyend="3930"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acfb19b2b79f81e1faf67d55e801eee62" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::narrow</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, int64_t start, int64_t length)</argsstring>
        <name>narrow</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="938" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3931" bodyend="3933"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a32e90835d861f6d76b838bd1b1cfbb1d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::ones</definition>
        <argsstring>(IntList size, const TensorOptions &amp;options={})</argsstring>
        <name>ones</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="939" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3934" bodyend="3937"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4376ac948fdf407994c0073412c4de20" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::ones_out</definition>
        <argsstring>(Tensor &amp;result, IntList size)</argsstring>
        <name>ones_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="940" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3938" bodyend="3940"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3257973df99f2984e9db23266fd7ff2d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::ones_like</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>ones_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="941" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3941" bodyend="3943"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0157f2f33ff6095a1176eb2948d63ea6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::ones_like</definition>
        <argsstring>(const Tensor &amp;self, const TensorOptions &amp;options)</argsstring>
        <name>ones_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="942" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3944" bodyend="3947"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abec3a243119ea996db8e583db2e12178" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::pairwise_distance</definition>
        <argsstring>(const Tensor &amp;x1, const Tensor &amp;x2, double p=2, double eps=1e-06, bool keepdim=false)</argsstring>
        <name>pairwise_distance</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval>1e-06</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="944" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3951" bodyend="3953"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2d1a5a5a88bdbdcc52e7ecf7a3a75368" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::pin_memory</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>pin_memory</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="945" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3954" bodyend="3956"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0f76dc6207440c817cdc258783cf7a5d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::pinverse</definition>
        <argsstring>(const Tensor &amp;self, double rcond=1e-15)</argsstring>
        <name>pinverse</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rcond</declname>
          <defval>1e-15</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="946" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3957" bodyend="3959"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a269136da828fd3619424a77212780aa2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::rand</definition>
        <argsstring>(IntList size, const TensorOptions &amp;options={})</argsstring>
        <name>rand</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="947" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3960" bodyend="3963"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a122963f7d3e15bbea9f279a7657ae1e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::rand</definition>
        <argsstring>(IntList size, Generator *generator, const TensorOptions &amp;options={})</argsstring>
        <name>rand</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="948" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3964" bodyend="3967"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a833caed4c8965bf553bdd83bd9c8a513" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::rand_out</definition>
        <argsstring>(Tensor &amp;result, IntList size)</argsstring>
        <name>rand_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="949" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3968" bodyend="3970"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac680b88fe6e35936f609b80c4bf6415d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::rand_out</definition>
        <argsstring>(Tensor &amp;result, IntList size, Generator *generator)</argsstring>
        <name>rand_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="950" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3971" bodyend="3973"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afa483d06d898c0c8536ff86331c4f2d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::rand_like</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>rand_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="951" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3974" bodyend="3976"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9d5a20382db6c216079887c09cfa13bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::rand_like</definition>
        <argsstring>(const Tensor &amp;self, const TensorOptions &amp;options)</argsstring>
        <name>rand_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="952" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3977" bodyend="3980"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a74930133b1578e2faa02ab588b799a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::AT_DEPRECATED</definition>
        <argsstring>(static inline Tensor rand(const Type &amp;dtype, IntList size, Generator *generator=nullptr))</argsstring>
        <name>AT_DEPRECATED</name>
        <param>
          <type>static inline <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> </type>
          <declname>rand</declname>
          <array>const Type &amp;dtype, IntList size, Generator *generator=nullptr</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="953" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4bb47dcd06cbbc9a85e77a110c41a522" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randint</definition>
        <argsstring>(int64_t high, IntList size, const TensorOptions &amp;options={})</argsstring>
        <name>randint</name>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="954" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3984" bodyend="3987"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4f33caccf78b8138a87d220630962455" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randint</definition>
        <argsstring>(int64_t high, IntList size, Generator *generator, const TensorOptions &amp;options={})</argsstring>
        <name>randint</name>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="955" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3988" bodyend="3991"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae5889d39b5eaece04c90afdf965ed1f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randint</definition>
        <argsstring>(int64_t low, int64_t high, IntList size, const TensorOptions &amp;options={})</argsstring>
        <name>randint</name>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="956" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3992" bodyend="3995"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a87492d02df2f6b716193399e74b736c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randint</definition>
        <argsstring>(int64_t low, int64_t high, IntList size, Generator *generator, const TensorOptions &amp;options={})</argsstring>
        <name>randint</name>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="957" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3996" bodyend="3999"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3f0f06bdf5dc0a01345471c852076720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::AT_DEPRECATED</definition>
        <argsstring>(static inline Tensor randint(const Type &amp;dtype, int64_t high, IntList size, Generator *generator=nullptr))</argsstring>
        <name>AT_DEPRECATED</name>
        <param>
          <type>static inline <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> </type>
          <declname>randint</declname>
          <array>const Type &amp;dtype, int64_t high, IntList size, Generator *generator=nullptr</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="958" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adf75d41ed3caa8fcc250b5ec644219d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::AT_DEPRECATED</definition>
        <argsstring>(static inline Tensor randint(const Type &amp;dtype, int64_t low, int64_t high, IntList size, Generator *generator=nullptr))</argsstring>
        <name>AT_DEPRECATED</name>
        <param>
          <type>static inline <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> </type>
          <declname>randint</declname>
          <array>const Type &amp;dtype, int64_t low, int64_t high, IntList size, Generator *generator=nullptr</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="959" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae7dcd50715ba10a91619317676b44738" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::randint_out</definition>
        <argsstring>(Tensor &amp;result, int64_t high, IntList size)</argsstring>
        <name>randint_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="960" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4006" bodyend="4008"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6a4b315ab5996e7b42f124edea3d2412" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::randint_out</definition>
        <argsstring>(Tensor &amp;result, int64_t high, IntList size, Generator *generator)</argsstring>
        <name>randint_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="961" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4009" bodyend="4011"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4c08914f7d43da07a91688f5961e093d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::randint_out</definition>
        <argsstring>(Tensor &amp;result, int64_t low, int64_t high, IntList size)</argsstring>
        <name>randint_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="962" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4012" bodyend="4014"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2f2505dcaf8b6086443de532f7dddc89" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::randint_out</definition>
        <argsstring>(Tensor &amp;result, int64_t low, int64_t high, IntList size, Generator *generator)</argsstring>
        <name>randint_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="963" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4015" bodyend="4017"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae588b5aca56de716cbac69d7e3fecadd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randint_like</definition>
        <argsstring>(const Tensor &amp;self, int64_t high)</argsstring>
        <name>randint_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="964" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4018" bodyend="4020"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6351d3d7580e64bcd8e9a5fb02850ac8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randint_like</definition>
        <argsstring>(const Tensor &amp;self, int64_t low, int64_t high)</argsstring>
        <name>randint_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="965" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4021" bodyend="4023"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a83ace366ed8104c5e4b2d004e5eabaf5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randint_like</definition>
        <argsstring>(const Tensor &amp;self, int64_t high, const TensorOptions &amp;options)</argsstring>
        <name>randint_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="966" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4024" bodyend="4027"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aad1ab047a1888435ffec2c0102d97e49" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randint_like</definition>
        <argsstring>(const Tensor &amp;self, int64_t low, int64_t high, const TensorOptions &amp;options)</argsstring>
        <name>randint_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="967" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4028" bodyend="4031"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7d897000b393ad143d75bb6db7390a9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randn</definition>
        <argsstring>(IntList size, const TensorOptions &amp;options={})</argsstring>
        <name>randn</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="968" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4032" bodyend="4035"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad3f1c28b62d2d77302bad9ac15daf3ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randn</definition>
        <argsstring>(IntList size, Generator *generator, const TensorOptions &amp;options={})</argsstring>
        <name>randn</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="969" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4036" bodyend="4039"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3f1a5367f5f9d018be844deb76d0e3d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::randn_out</definition>
        <argsstring>(Tensor &amp;result, IntList size)</argsstring>
        <name>randn_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="970" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4040" bodyend="4042"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa090173dd801b9edbde68fa4a5e35af0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::randn_out</definition>
        <argsstring>(Tensor &amp;result, IntList size, Generator *generator)</argsstring>
        <name>randn_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="971" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4043" bodyend="4045"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aba2e1df1fbf85585b1052cf1b81c3084" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randn_like</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>randn_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="972" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4046" bodyend="4048"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a53eab2cb344044fad90fa2f42231c23c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randn_like</definition>
        <argsstring>(const Tensor &amp;self, const TensorOptions &amp;options)</argsstring>
        <name>randn_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="973" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4049" bodyend="4052"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa8e97e13b60cc2ce5ea95fc8e52740c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randperm</definition>
        <argsstring>(int64_t n, const TensorOptions &amp;options={})</argsstring>
        <name>randperm</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="975" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4056" bodyend="4059"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afc19daee6be76fbadfda53346533c3c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randperm</definition>
        <argsstring>(int64_t n, Generator *generator, const TensorOptions &amp;options={})</argsstring>
        <name>randperm</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="976" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4060" bodyend="4063"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abb6ccb1b94a7362f5d5f88c06720b06a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::randperm_out</definition>
        <argsstring>(Tensor &amp;result, int64_t n)</argsstring>
        <name>randperm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="977" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4064" bodyend="4066"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a96377e365c7fb61330c5dfb0f374b9d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::randperm_out</definition>
        <argsstring>(Tensor &amp;result, int64_t n, Generator *generator)</argsstring>
        <name>randperm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="978" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4067" bodyend="4069"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4ad3986ea42f72d0a03519cf3db4bf08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::AT_DEPRECATED</definition>
        <argsstring>(static inline Tensor randperm(const Type &amp;dtype, int64_t n, Generator *generator=nullptr))</argsstring>
        <name>AT_DEPRECATED</name>
        <param>
          <type>static inline <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> </type>
          <declname>randperm</declname>
          <array>const Type &amp;dtype, int64_t n, Generator *generator=nullptr</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="979" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3bd2e7db37e73f056762627f63c35476" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::range</definition>
        <argsstring>(Scalar start, Scalar end, const TensorOptions &amp;options={})</argsstring>
        <name>range</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="980" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4073" bodyend="4076"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2e5fe37ddad9d4dd96c4c00b9f11e309" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::range</definition>
        <argsstring>(Scalar start, Scalar end, Scalar step, const TensorOptions &amp;options={})</argsstring>
        <name>range</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>step</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="981" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4077" bodyend="4080"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a954238c27fcdbfc453b17d5befdda120" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::range_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end)</argsstring>
        <name>range_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="982" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4081" bodyend="4083"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3723993acda820cbcabdb06a484fb968" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::range_out</definition>
        <argsstring>(Tensor &amp;result, Scalar start, Scalar end, Scalar step)</argsstring>
        <name>range_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="983" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4084" bodyend="4086"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2f1e225fd465f65eafeaca87f59d7b40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::reshape</definition>
        <argsstring>(const Tensor &amp;self, IntList shape)</argsstring>
        <name>reshape</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="985" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4090" bodyend="4092"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1589285ed5daea3fee7303818312f9d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::RoiPooling2d_forward</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;rois, int64_t pooledHeight, int64_t pooledWidth, double spatialScale)</argsstring>
        <name>RoiPooling2d_forward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pooledHeight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pooledWidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spatialScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="986" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4093" bodyend="4095"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa317612e400d8c323af0e7c7a1bc1882" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::RoiPooling2d_backward</definition>
        <argsstring>(const Tensor &amp;input, const Tensor &amp;rois, int64_t pooledHeight, int64_t pooledWidth, double spatialScale, const Tensor &amp;gradOutput, const Tensor &amp;argmaxes)</argsstring>
        <name>RoiPooling2d_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>rois</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pooledHeight</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>pooledWidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spatialScale</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>gradOutput</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>argmaxes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="987" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4096" bodyend="4098"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7006360e3d3d984d741738deffff2557" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::round</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>round</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="988" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4099" bodyend="4101"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac2467f29e97015ac1ebd34836f02ae8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::round_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>round_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="989" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4102" bodyend="4104"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6462caf5d48231cf82b10730d6533c34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::round_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>round_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="990" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4105" bodyend="4107"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aead97eaf832e9ae08a61f407e7bab6d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::rrelu</definition>
        <argsstring>(const Tensor &amp;self, Scalar lower=0.125, Scalar upper=0.3333333333333333, bool training=false, Generator *generator=nullptr)</argsstring>
        <name>rrelu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lower</declname>
          <defval>0.125</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>upper</declname>
          <defval>0.3333333333333333</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="991" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4108" bodyend="4110"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afce7684261dce0881414d204cc62035f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::rrelu_</definition>
        <argsstring>(Tensor &amp;self, Scalar lower=0.125, Scalar upper=0.3333333333333333, bool training=false, Generator *generator=nullptr)</argsstring>
        <name>rrelu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lower</declname>
          <defval>0.125</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>upper</declname>
          <defval>0.3333333333333333</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>training</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="992" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4111" bodyend="4113"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1e20924cf75671210543247fa05ea4ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::relu</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>relu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="993" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4114" bodyend="4116"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af01bfc1b40731c868e676d8553d1455e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::relu_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>relu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="994" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4117" bodyend="4119"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a50365e2921dbe302a3205ddfa2b453e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hardshrink</definition>
        <argsstring>(const Tensor &amp;self, Scalar lambd=0.5)</argsstring>
        <name>hardshrink</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lambd</declname>
          <defval>0.5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="995" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4120" bodyend="4122"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a08b5b2245f0c6991de8fb1680401b66d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hardshrink_backward</definition>
        <argsstring>(const Tensor &amp;grad_out, const Tensor &amp;self, Scalar lambd)</argsstring>
        <name>hardshrink_backward</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_out</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>lambd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="996" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4123" bodyend="4125"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a069d7114a28862016b8b2d9d2e6e5319" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::rsqrt</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>rsqrt</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="997" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4126" bodyend="4128"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acdeb7b520f10aee4831759dc199e30e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::rsqrt_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>rsqrt_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="998" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4129" bodyend="4131"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a840b3e4058856eb650f14cd49ba9b082" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::rsqrt_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>rsqrt_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="999" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4132" bodyend="4134"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2812a30b6e372eaaaffeb88fa4766276" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::select</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, int64_t index)</argsstring>
        <name>select</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1000" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4135" bodyend="4137"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab5fdd4f63ce50cf78856c0d861e97f08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::selu</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>selu</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1001" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4138" bodyend="4140"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad4038b64090b6db562be028d0236ba4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::selu_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>selu_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1002" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4141" bodyend="4143"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2cf79ba2416f481371f02229d7e4924f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sigmoid</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>sigmoid</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1003" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4144" bodyend="4146"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac3e45f439607ca00d50a437e8576c0d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sigmoid_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>sigmoid_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1004" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4147" bodyend="4149"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2cebfac2472eb769a055271e1243e658" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sigmoid_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>sigmoid_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1005" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4150" bodyend="4152"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a65fcaee46544ea590e972dcf399eca3b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sin</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>sin</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1006" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4153" bodyend="4155"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4bde50d6be1d1a16ec5ede560e1f3984" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sin_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>sin_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1007" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4156" bodyend="4158"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8f8a94a38ac780cc75d4b1756c909ddf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sin_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>sin_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1008" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4159" bodyend="4161"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a81dc472e0b9f14847e0744df4558a0b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sinh</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>sinh</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1009" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4162" bodyend="4164"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4ed340600ebcb82c1edfbdffcdfcd79b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sinh_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>sinh_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1010" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4165" bodyend="4167"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab8abecf70a2f7bb12aaee88de24b570b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sinh_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>sinh_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1011" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4168" bodyend="4170"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abea4dfbc4bd140b2e39265f2c4616489" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::size</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>size</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1012" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4171" bodyend="4173"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abf81ecc2cd8061f8c6602580d854bf77" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::slice</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim=0, int64_t start=0, int64_t end=9223372036854775807, int64_t step=1)</argsstring>
        <name>slice</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>end</declname>
          <defval>9223372036854775807</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1013" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4174" bodyend="4176"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aecddf3e80c961f0ba5941bde423a29d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::slogdet</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>slogdet</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1014" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4177" bodyend="4179"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1582803b5a87d00341e6ee2559cbaf2c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::smm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat2)</argsstring>
        <name>smm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1015" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4180" bodyend="4182"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7ec7eb7537f21995521d32ed79e89666" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::softmax</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>softmax</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1016" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4183" bodyend="4185"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7abad1b90f3c5ad1b1183dbfffe40408" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::softmax_backward_data</definition>
        <argsstring>(const Tensor &amp;grad_output, const Tensor &amp;output, int64_t dim, const Tensor &amp;self)</argsstring>
        <name>softmax_backward_data</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>grad_output</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1017" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4186" bodyend="4188"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a65d4a187bbd41b53ce0b86d1c2c13617" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::vector&lt; Tensor &gt; at::split</definition>
        <argsstring>(const Tensor &amp;self, int64_t split_size, int64_t dim=0)</argsstring>
        <name>split</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>split_size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1018" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4189" bodyend="4191"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab9e867ccfc0bab4fa29c50c426d69fbe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::vector&lt; Tensor &gt; at::split_with_sizes</definition>
        <argsstring>(const Tensor &amp;self, IntList split_sizes, int64_t dim=0)</argsstring>
        <name>split_with_sizes</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>split_sizes</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1019" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4192" bodyend="4194"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0fbe4fcca6f027b352f3b2084eaca6fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::squeeze</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>squeeze</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1020" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4195" bodyend="4197"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afcf945c1c2c1d25bc45f38152a20b5a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::squeeze</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>squeeze</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1021" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4198" bodyend="4200"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acbf5ed0d6ba73811abe819ffee0b609d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sspaddmm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>sspaddmm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1022" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4201" bodyend="4203"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2597d86761282e7c3b90d003ea702689" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sspaddmm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>sspaddmm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1023" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4204" bodyend="4206"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a57b6b565a9a8318d4452e11f307e8725" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::stack</definition>
        <argsstring>(TensorList tensors, int64_t dim=0)</argsstring>
        <name>stack</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1024" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4207" bodyend="4209"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abd1dabf4e03ffd39afedc26af9726277" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::stack_out</definition>
        <argsstring>(Tensor &amp;result, TensorList tensors, int64_t dim=0)</argsstring>
        <name>stack_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1025" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4210" bodyend="4212"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acc81365ac33df04ea96aef7ad08af46c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::stft</definition>
        <argsstring>(const Tensor &amp;self, int64_t n_fft, int64_t hop_length, int64_t win_length, const Tensor &amp;window={}, bool normalized=false, bool onesided=true)</argsstring>
        <name>stft</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n_fft</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>hop_length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>win_length</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>window</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>normalized</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>onesided</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1026" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4213" bodyend="4215"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a149e0e18198aac949fb7e4dc4c92950e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::stride</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>stride</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1027" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4216" bodyend="4218"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a954848e0e572727c34ce34e700b2c5ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sum</definition>
        <argsstring>(const Tensor &amp;self, ScalarType dtype)</argsstring>
        <name>sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1028" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4219" bodyend="4221"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4cb47ff256eda6bea20a439aa69d1d84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sum</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1029" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4222" bodyend="4224"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a811d68b33de41b7d9d8a2f920df09625" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_sum</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1030" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4225" bodyend="4227"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a91e3f2e1e8677bf5201e436506a12274" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sum</definition>
        <argsstring>(const Tensor &amp;self, IntList dim, bool keepdim, ScalarType dtype)</argsstring>
        <name>sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1031" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4228" bodyend="4230"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a67e49cc265847bbc71064793e846750c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sum</definition>
        <argsstring>(const Tensor &amp;self, IntList dim, bool keepdim=false)</argsstring>
        <name>sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1032" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4231" bodyend="4233"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1a9c6b1eb5625813409cafd7ff8f34c9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sum</definition>
        <argsstring>(const Tensor &amp;self, IntList dim, ScalarType dtype)</argsstring>
        <name>sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1033" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4234" bodyend="4236"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6a46835deaaed103837d476bf7c995a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_sum</definition>
        <argsstring>(const Tensor &amp;self, IntList dim, bool keepdim=false)</argsstring>
        <name>_sum</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1034" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4237" bodyend="4239"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9d6bbba51e21a45c622416715f10d57e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, IntList dim, bool keepdim, ScalarType dtype)</argsstring>
        <name>sum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1035" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4240" bodyend="4242"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a347290f3a266d610f1c253226c93e483" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, IntList dim, bool keepdim=false)</argsstring>
        <name>sum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1036" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4243" bodyend="4245"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8ebac2f5d6c2b24c26883e0823cd2e48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, IntList dim, ScalarType dtype)</argsstring>
        <name>sum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1037" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4246" bodyend="4248"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7d92f60ec9730803dd6ac03196031a25" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_sum_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, IntList dim, bool keepdim=false)</argsstring>
        <name>_sum_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1038" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4249" bodyend="4251"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3bec0f9226dbf697d506b65ed853e2f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_sum_cuda_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_sum_cuda_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1039" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4252" bodyend="4254"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0190691b3f98853b6fd3b8d72080e3a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sqrt</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>sqrt</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1040" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4255" bodyend="4257"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a56d49274e3e11eece9d94210ad239ebf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sqrt_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>sqrt_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1041" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4258" bodyend="4260"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adf8403e371be8b4155308ec7154b0f3f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sqrt_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>sqrt_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1042" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4261" bodyend="4263"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6d659b47db020375e9995884acda2219" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::std</definition>
        <argsstring>(const Tensor &amp;self, bool unbiased=true)</argsstring>
        <name>std</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1043" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4264" bodyend="4266"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3581dbac0a3943ef7b00fa7aa1c4ddad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::std</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool unbiased=true, bool keepdim=false)</argsstring>
        <name>std</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1044" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4267" bodyend="4269"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac480288cd88dca59db718553b58d1cb7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::std_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool unbiased=true, bool keepdim=false)</argsstring>
        <name>std_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1045" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4270" bodyend="4272"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac302b1d152a4ef2bdd3c031038dd7986" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::prod</definition>
        <argsstring>(const Tensor &amp;self, ScalarType dtype)</argsstring>
        <name>prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1046" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4273" bodyend="4275"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a758ab7b796a1538bf88d5d6d1afad202" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::prod</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1047" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4276" bodyend="4278"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa6e3bcfe6436af46d08aa091eea4a980" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_prod</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>_prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1048" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4279" bodyend="4281"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa0a63b12588b72dd95167f8ab2a41e2e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::prod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim, ScalarType dtype)</argsstring>
        <name>prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1049" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4282" bodyend="4284"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a32259d6a002d445ae152131ef8c5d615" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::prod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1050" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4285" bodyend="4287"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad55beb9e3826a07b8d8ba7085f4386c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::prod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1051" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4288" bodyend="4290"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaaf4c27c401bacc6837a96f4eabf38a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_prod</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_prod</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1052" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4291" bodyend="4293"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a61f84784101ca131ae1dc1072d038584" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::prod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim, ScalarType dtype)</argsstring>
        <name>prod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1053" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4294" bodyend="4296"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ada58b255104803d03a55f86dedbd855e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::prod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>prod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1054" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4297" bodyend="4299"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9c6675951c554ff355407e8474ad66c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::prod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, ScalarType dtype)</argsstring>
        <name>prod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1055" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4300" bodyend="4302"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac1dd4016db7bad16bc097ace62929a78" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::_prod_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool keepdim=false)</argsstring>
        <name>_prod_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1056" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4303" bodyend="4305"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a26d053066704adf74a469ef8a844bfc4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::t</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>t</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1057" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4306" bodyend="4308"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1be9917c94e054b94a7731a6a88b1472" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::tan</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>tan</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1058" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4309" bodyend="4311"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5c9460f19c7877ffcea83ac1eb1b2ce1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::tan_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>tan_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1059" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4312" bodyend="4314"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaf5a8bfc73f150a630918febcc749a84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::tan_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>tan_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1060" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4315" bodyend="4317"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a93c55130815801b70794d8f0241cbfe8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::tanh</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>tanh</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1061" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4318" bodyend="4320"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af310ffc84106b4a79c8ec5ac430d7190" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::tanh_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>tanh_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1062" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4321" bodyend="4323"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a03b57c7c60cef303995aea21fbf0bcf5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::tanh_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>tanh_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1063" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4324" bodyend="4326"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a024981e8469e95eb6e4bdad0d5ac32ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::transpose</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim0, int64_t dim1)</argsstring>
        <name>transpose</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim0</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1064" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4327" bodyend="4329"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a76579eda14ceece7a110320ada1b73ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::flip</definition>
        <argsstring>(const Tensor &amp;self, IntList dims)</argsstring>
        <name>flip</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1065" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4330" bodyend="4332"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa24fc873012bc4131089eda00d15cb0b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_trilinear</definition>
        <argsstring>(const Tensor &amp;i1, const Tensor &amp;i2, const Tensor &amp;i3, IntList expand1, IntList expand2, IntList expand3, IntList sumdim, int64_t unroll_dim=1)</argsstring>
        <name>_trilinear</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>i2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>i3</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>expand1</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>expand2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>expand3</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>sumdim</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>unroll_dim</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1066" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4333" bodyend="4335"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7c63e2e58904301908f2f13e4784c621" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::triplet_margin_loss</definition>
        <argsstring>(const Tensor &amp;anchor, const Tensor &amp;positive, const Tensor &amp;negative, double margin=1.0, double p=2, double eps=1e-06, bool swap=false, int64_t reduction=Reduction::ElementwiseMean)</argsstring>
        <name>triplet_margin_loss</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>anchor</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>positive</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>negative</declname>
        </param>
        <param>
          <type>double</type>
          <declname>margin</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>p</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval>1e-06</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>swap</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int64_t</type>
          <declname>reduction</declname>
          <defval>Reduction::ElementwiseMean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1067" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4336" bodyend="4338"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ace1173f0b15858e85a3125cb2f496917" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::trunc</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>trunc</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1068" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4339" bodyend="4341"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a25cc5632b3a3c8195d8ac913feef9424" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::trunc_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>trunc_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1069" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4342" bodyend="4344"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a81dad1fe7b2e713e16a9f4c479e050b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::trunc_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self)</argsstring>
        <name>trunc_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1070" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4345" bodyend="4347"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a62d432d30732073a09ab3b314a48a936" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::tuple&lt; Tensor, Tensor &gt; at::_unique</definition>
        <argsstring>(const Tensor &amp;self, bool sorted=false, bool return_inverse=false)</argsstring>
        <name>_unique</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sorted</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>return_inverse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1071" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4348" bodyend="4350"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2b23d1fbbb85137d46f8190e496c9881" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_unsafe_view</definition>
        <argsstring>(const Tensor &amp;self, IntList size)</argsstring>
        <name>_unsafe_view</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1072" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4351" bodyend="4353"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a32dfc26a89ae456ad69c86469a07d271" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::unsqueeze</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim)</argsstring>
        <name>unsqueeze</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1073" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4354" bodyend="4356"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1add7a8bd4aa2ef10f3a7eaa1706f4aa5e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::var</definition>
        <argsstring>(const Tensor &amp;self, bool unbiased=true)</argsstring>
        <name>var</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1074" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4357" bodyend="4359"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adffa0421f098d15a6d64681d3051457b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::var</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim, bool unbiased=true, bool keepdim=false)</argsstring>
        <name>var</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1075" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4360" bodyend="4362"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afe5e4ebba99773191736efc699cf6a8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::var_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, int64_t dim, bool unbiased=true, bool keepdim=false)</argsstring>
        <name>var_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>unbiased</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1076" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4363" bodyend="4365"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a48b0ed4e9d0461e28e70a041254b7d6e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::where</definition>
        <argsstring>(const Tensor &amp;condition, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>where</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1077" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4366" bodyend="4368"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a55949d28af298961e9a3f87871390da3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_s_where</definition>
        <argsstring>(const Tensor &amp;condition, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>_s_where</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1078" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4369" bodyend="4371"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abb6e998e9616e27bad9d663a8f5c9484" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::zeros</definition>
        <argsstring>(IntList size, const TensorOptions &amp;options={})</argsstring>
        <name>zeros</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1079" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4372" bodyend="4375"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a37a79370b46ce69fbaa3f2e1581dfa56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::zeros_out</definition>
        <argsstring>(Tensor &amp;result, IntList size)</argsstring>
        <name>zeros_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1080" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4376" bodyend="4378"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aef2623fdbf92edec71640c29d6b7d39c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::zeros_like</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>zeros_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1081" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4379" bodyend="4381"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a56f12b571b0a90e2eaffd030133634d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::zeros_like</definition>
        <argsstring>(const Tensor &amp;self, const TensorOptions &amp;options)</argsstring>
        <name>zeros_like</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1082" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4382" bodyend="4385"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab15435f2ce5f32d865143f26e1a034d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_standard_gamma_grad</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;output)</argsstring>
        <name>_standard_gamma_grad</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1084" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4389" bodyend="4391"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acd596f49fa646dc3a6590bde9889b58a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_standard_gamma</definition>
        <argsstring>(const Tensor &amp;self, Generator *generator=nullptr)</argsstring>
        <name>_standard_gamma</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1085" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4392" bodyend="4394"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab97d0052b7e7b355fbc0636c36e43eeb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::poisson</definition>
        <argsstring>(const Tensor &amp;self, Generator *generator=nullptr)</argsstring>
        <name>poisson</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1086" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4395" bodyend="4397"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7fdc0e6795f72adba51f0ab61f3b0b04" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native_norm</definition>
        <argsstring>(const Tensor &amp;self, Scalar p=2)</argsstring>
        <name>native_norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1087" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4398" bodyend="4400"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a381932d0d77d0efe248316baada00af0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::norm</definition>
        <argsstring>(const Tensor &amp;self, Scalar p=2)</argsstring>
        <name>norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1088" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4401" bodyend="4403"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0c66da379b4e2e60367eab4c7a609540" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::norm</definition>
        <argsstring>(const Tensor &amp;self, Scalar p, int64_t dim, bool keepdim=false)</argsstring>
        <name>norm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1089" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4404" bodyend="4406"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a981281eced0414d5216e0c9a40706206" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::norm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar p, int64_t dim, bool keepdim=false)</argsstring>
        <name>norm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepdim</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1090" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4407" bodyend="4409"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a76c1548f327a6e0d39b0c0519acca332" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native_clone</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>native_clone</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1091" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4410" bodyend="4412"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae95ab7c4c78aa08fb714021ceda2b375" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::clone</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>clone</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1092" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4413" bodyend="4415"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5d0d846c5049c1162688718d023ccd85" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::native_resize_as_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;the_template)</argsstring>
        <name>native_resize_as_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>the_template</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1093" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4416" bodyend="4418"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5239827304ded2941792b62ec47e3724" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::resize_as_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;the_template)</argsstring>
        <name>resize_as_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>the_template</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1094" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4419" bodyend="4421"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a44f4b8597c98be532857dc81cbcb58ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::native_pow_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar exponent)</argsstring>
        <name>native_pow_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1095" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4422" bodyend="4424"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a07c51abd12aac4d095a67170a559e170" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native_pow</definition>
        <argsstring>(const Tensor &amp;self, Scalar exponent)</argsstring>
        <name>native_pow</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1096" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4425" bodyend="4427"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac21d361b4e0b346aa651a3e272ff8510" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::pow_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar exponent)</argsstring>
        <name>pow_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1097" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4428" bodyend="4430"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae6246d139ae8d62ca9568cf48d337781" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::pow</definition>
        <argsstring>(const Tensor &amp;self, Scalar exponent)</argsstring>
        <name>pow</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1098" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4431" bodyend="4433"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5f609d0ab706386efebfb4e401b1cb32" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::native_zero_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>native_zero_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1099" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4434" bodyend="4436"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac6269f974114567043a65f73e9930225" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::zero_</definition>
        <argsstring>(Tensor &amp;self)</argsstring>
        <name>zero_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1100" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4437" bodyend="4439"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af20b462009381d6ecbc6b7a6c46279f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::s_native_add_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>s_native_add_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1101" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4440" bodyend="4442"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae29c01f31285c2b89c4c97ca77cc6cbb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::native_add_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, SparseTensorRef other, Scalar alpha=1)</argsstring>
        <name>native_add_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_sparse_tensor_ref" kindref="compound">SparseTensorRef</ref></type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1102" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4443" bodyend="4445"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acb86f241d0b015e075c63f2528685141" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::s_native_add</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>s_native_add</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1103" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4446" bodyend="4448"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3f844da4b5a165555664d9236a6e1094" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native_add</definition>
        <argsstring>(const Tensor &amp;self, SparseTensorRef other, Scalar alpha=1)</argsstring>
        <name>native_add</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_sparse_tensor_ref" kindref="compound">SparseTensorRef</ref></type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1104" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4449" bodyend="4451"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a27e7f41e1a891841fa0e18182982bf0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::s_native_add_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>s_native_add_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1105" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4452" bodyend="4454"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a64bac15c1a8c6540004491d8698b4d30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::native_add_</definition>
        <argsstring>(Tensor &amp;self, SparseTensorRef other, Scalar alpha=1)</argsstring>
        <name>native_add_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_sparse_tensor_ref" kindref="compound">SparseTensorRef</ref></type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1106" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4455" bodyend="4457"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1820f8faf1e65f81710572384e3323f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::add_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>add_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1107" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4458" bodyend="4460"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afdd5c8855d82edd09b89dfdcecc42b73" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::add</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1108" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4461" bodyend="4463"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7d69c529d5e5902d880b2ce9e7dab628" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::s_native_sub_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>s_native_sub_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1109" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4464" bodyend="4466"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1dcf87b2778475d0c851c4e50f5c9f09" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::s_native_sub</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>s_native_sub</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1110" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4467" bodyend="4469"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab649ab1da639c1be08ef6fd87bfd9fb2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::s_native_sub_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>s_native_sub_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1111" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4470" bodyend="4472"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7363e32bcc6b11458d8d8587a78fef3b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::sub_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>sub_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1112" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4473" bodyend="4475"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae9d92ed1ec5493a75392b6dcd20c23d2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::sub</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other, Scalar alpha=1)</argsstring>
        <name>sub</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1113" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4476" bodyend="4478"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4678c453c76314545c5ddfeffd14fb2e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::s_native_mul_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>s_native_mul_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1114" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4479" bodyend="4481"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae92d330125fa13e0fe7027d0dddeaa5d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::s_native_mul</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>s_native_mul</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1115" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4482" bodyend="4484"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab8364c02acfe9d022708d8d08b7f76a7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::s_native_mul_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>s_native_mul_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1116" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4485" bodyend="4487"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0a8d4a4071e72ea88f711ee495d6b43f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::native_mul_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>native_mul_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1117" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4488" bodyend="4490"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2594f19df48007cad07d4e567b2b1193" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native_mul</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>native_mul</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1118" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4491" bodyend="4493"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac8c7ccce35fb03997b01a3136f4cfc00" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::native_mul_</definition>
        <argsstring>(Tensor &amp;self, Scalar other)</argsstring>
        <name>native_mul_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1119" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4494" bodyend="4496"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adfd6a17f535301f9a35a017a0750e7c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::mul_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>mul_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1120" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4497" bodyend="4499"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a657d8ac421d132216f22897b2dec6aa4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::mul_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>mul_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1121" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4500" bodyend="4502"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9a548d3a9487b02df4d131db510444ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mul</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;other)</argsstring>
        <name>mul</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1122" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4503" bodyend="4505"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a72d3e152ceb48f3fdbf04f49c128cfc7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::mul</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>mul</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1123" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4506" bodyend="4508"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8538e9f5fe6b1427487fc4f7a71c4bb8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::native_div_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>native_div_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1124" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4509" bodyend="4511"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a07294e4260af5602dcbdf61fa15655a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native_div</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>native_div</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1125" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4512" bodyend="4514"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afb4ad6ec107ece34b371273aef9e524f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::native_div_</definition>
        <argsstring>(Tensor &amp;self, Scalar other)</argsstring>
        <name>native_div_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1126" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4515" bodyend="4517"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad1683daf9caf5666e23a1c033a5f95d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::div_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, Scalar other)</argsstring>
        <name>div_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1127" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4518" bodyend="4520"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6059098f9e940becdcbc1e22d2d5288a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::div</definition>
        <argsstring>(const Tensor &amp;self, Scalar other)</argsstring>
        <name>div</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1128" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4521" bodyend="4523"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5ced6bfa2e04af1d1ef33a546375a7e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::s_native_addmm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>s_native_addmm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1129" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4524" bodyend="4526"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a84ae252c69dbc94f93f9ad7ebcad97e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::s_native_addmm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>s_native_addmm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1130" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4527" bodyend="4529"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ade7fed2f58c24081a77bced093edb80e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::s_native_addmm_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>s_native_addmm_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1131" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4530" bodyend="4532"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a60493994147c607a83dbd68e7f76b390" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::addmm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>addmm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1132" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4533" bodyend="4535"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac1155c41e5a2cd930568f7ff8e547b4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::addmm</definition>
        <argsstring>(const Tensor &amp;self, const Tensor &amp;mat1, const Tensor &amp;mat2, Scalar beta=1, Scalar alpha=1)</argsstring>
        <name>addmm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>beta</declname>
          <defval>1</defval>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1133" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4536" bodyend="4538"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a55a2424bfef3a525c2490fde5f20dae7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native_tensor</definition>
        <argsstring>(const Type &amp;self_ty)</argsstring>
        <name>native_tensor</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>self_ty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1134" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4539" bodyend="4541"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a43c880b3e0e063a399c5ea9aa4bf28f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::native_tensor</definition>
        <argsstring>(const Type &amp;self_ty, IntList size)</argsstring>
        <name>native_tensor</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>self_ty</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1135" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4542" bodyend="4544"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a68ce2e72f80e66c70b3bb7d024bf2e77" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::_sparse_coo_tensor_unsafe</definition>
        <argsstring>(const Tensor &amp;indices, const Tensor &amp;values, IntList size)</argsstring>
        <name>_sparse_coo_tensor_unsafe</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1136" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4545" bodyend="4547"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a66ce79f606d43a79b5d5f16524523b1b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::hspmm_out</definition>
        <argsstring>(Tensor &amp;result, const Tensor &amp;mat1, const Tensor &amp;mat2)</argsstring>
        <name>hspmm_out</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1137" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4548" bodyend="4550"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af32e08d487a7b937a31321400051add8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::hspmm</definition>
        <argsstring>(const Tensor &amp;mat1, const Tensor &amp;mat2)</argsstring>
        <name>hspmm</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>mat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1138" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4551" bodyend="4553"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abb5715bbbea415806c5a69accf7c68e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>static Tensor &amp; at::raw_copy_sparse_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;src)</argsstring>
        <name>raw_copy_sparse_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1139" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4554" bodyend="4556"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6e3bdf3ac3fca33ee72fef693ad00f6c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::numel</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>numel</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1140" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4557" bodyend="4559"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2af40b650348e77413c0b949bbd0821c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::vector&lt; Tensor &gt; at::unbind</definition>
        <argsstring>(const Tensor &amp;self, int64_t dim=0)</argsstring>
        <name>unbind</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1141" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4560" bodyend="4562"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac46d682ff0db5e552f7fb418968eb452" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::native_get_device</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>native_get_device</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1142" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4563" bodyend="4565"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa0de773e406bfbdb5da68da7ae2e4243" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::get_device</definition>
        <argsstring>(const Tensor &amp;self)</argsstring>
        <name>get_device</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1143" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4566" bodyend="4568"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7153c100a5537319fb5b815d5463cef6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>static std::vector&lt; Tensor &gt; at::meshgrid</definition>
        <argsstring>(TensorList tensors)</argsstring>
        <name>meshgrid</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1144" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4569" bodyend="4571"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a09e767ef6c117583e96f296babd6650b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
        <definition>static Type&amp; at::infer_type</definition>
        <argsstring>(const Tensor &amp;t)</argsstring>
        <name>infer_type</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1146" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1146" bodyend="1149"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a420f971ac7001381ca21b68ac574ecd2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
        <definition>static Type&amp; at::infer_type</definition>
        <argsstring>(const TensorList &amp;tl)</argsstring>
        <name>infer_type</name>
        <param>
          <type>const <ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref> &amp;</type>
          <declname>tl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="1150" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="1150" bodyend="1153"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7f3277ce418ece2b80547cffa550f761" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::arange</definition>
        <argsstring>(const Type &amp;dtype, Scalar start, Scalar end, Scalar step)</argsstring>
        <name>arange</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="3194" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3194" bodyend="3196"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7fafcf822afa2cf1801b703679ee27ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::arange</definition>
        <argsstring>(const Type &amp;dtype, Scalar end)</argsstring>
        <name>arange</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="3197" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3197" bodyend="3199"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad67b34ea97dac31803195130c4fece34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::empty</definition>
        <argsstring>(const Type &amp;dtype, IntList size)</argsstring>
        <name>empty</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="3533" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3533" bodyend="3535"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a138056cc6d51deaa0cd4642dc8e36f77" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::eye</definition>
        <argsstring>(const Type &amp;dtype, int64_t n, int64_t m)</argsstring>
        <name>eye</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="3586" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3586" bodyend="3588"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abf26bffbc8d37f14006f62a700efa26e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::full</definition>
        <argsstring>(const Type &amp;dtype, IntList size, Scalar fill_value)</argsstring>
        <name>full</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>fill_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="3621" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3621" bodyend="3623"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0cf8e084ead8f8ee97272b52720265f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::linspace</definition>
        <argsstring>(const Type &amp;dtype, Scalar start, Scalar end, int64_t steps)</argsstring>
        <name>linspace</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="3761" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3761" bodyend="3763"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afe7da5ac735fb13b361c3600a7862971" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::logspace</definition>
        <argsstring>(const Type &amp;dtype, Scalar start, Scalar end, int64_t steps)</argsstring>
        <name>logspace</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="3817" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3817" bodyend="3819"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad950ab9cd87da715634f4e6a5aae0f7f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::ones</definition>
        <argsstring>(const Type &amp;dtype, IntList size)</argsstring>
        <name>ones</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="3948" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3948" bodyend="3950"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a620882f09829b84bdf030c848d0224a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::rand</definition>
        <argsstring>(const Type &amp;dtype, IntList size, Generator *generator)</argsstring>
        <name>rand</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="3981" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="3981" bodyend="3983"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a901859261c334feef24e0897130d6660" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randint</definition>
        <argsstring>(const Type &amp;dtype, int64_t high, IntList size, Generator *generator)</argsstring>
        <name>randint</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="4000" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4000" bodyend="4002"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a497aed1bae3b9314f368206a3b2376d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randint</definition>
        <argsstring>(const Type &amp;dtype, int64_t low, int64_t high, IntList size, Generator *generator)</argsstring>
        <name>randint</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="4003" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4003" bodyend="4005"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab288b5d06664c3a6e6478cc82080f092" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randn</definition>
        <argsstring>(const Type &amp;dtype, IntList size, Generator *generator)</argsstring>
        <name>randn</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="4053" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4053" bodyend="4055"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aead9a2ca1bf8711b0008cf3484bfe6e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::randperm</definition>
        <argsstring>(const Type &amp;dtype, int64_t n, Generator *generator)</argsstring>
        <name>randperm</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="4070" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4070" bodyend="4072"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa819cbf2e697889ae3b79ae4f3b05fa2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::range</definition>
        <argsstring>(const Type &amp;dtype, Scalar start, Scalar end, Scalar step)</argsstring>
        <name>range</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="4087" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4087" bodyend="4089"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a27f7b884fed686e2105fee0e6e3055f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::zeros</definition>
        <argsstring>(const Type &amp;dtype, IntList size)</argsstring>
        <name>zeros</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" line="4386" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Functions.h" bodystart="4386" bodyend="4388"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a449502ca4be6d9bd108de40098276d4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::deleteInefficientStdFunctionContext</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>deleteInefficientStdFunctionContext</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Allocator.cpp" line="5" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Allocator.cpp" bodystart="5" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a87237ab1a0908328413f84659fc420b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::operator==</definition>
        <argsstring>(const at::DataPtr &amp;dp, std::nullptr_t) noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classat_1_1_data_ptr" kindref="compound">at::DataPtr</ref> &amp;</type>
          <declname>dp</declname>
        </param>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Allocator.h" line="50" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Allocator.h" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1f9e776a4c2cc29c403e37b81f006fd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::operator==</definition>
        <argsstring>(std::nullptr_t, const at::DataPtr &amp;dp) noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <param>
          <type>const <ref refid="classat_1_1_data_ptr" kindref="compound">at::DataPtr</ref> &amp;</type>
          <declname>dp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Allocator.h" line="51" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Allocator.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab134574b00735673c9933621dd35dcff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::operator!=</definition>
        <argsstring>(const at::DataPtr &amp;dp, std::nullptr_t) noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classat_1_1_data_ptr" kindref="compound">at::DataPtr</ref> &amp;</type>
          <declname>dp</declname>
        </param>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Allocator.h" line="52" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Allocator.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad9db5ea2ca9ffb4acc323810d0a8ac1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::operator!=</definition>
        <argsstring>(std::nullptr_t, const at::DataPtr &amp;dp) noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <param>
          <type>const <ref refid="classat_1_1_data_ptr" kindref="compound">at::DataPtr</ref> &amp;</type>
          <declname>dp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Allocator.h" line="53" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Allocator.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a412233e8aa47c513eb60182bd748e091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>AT_API std::string at::demangle</definition>
        <argsstring>(const char *name)</argsstring>
        <name>demangle</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Utility to demangle a C++ symbol name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Backtrace.cpp" line="22" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Backtrace.cpp" bodystart="22" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa72f6fe28fe3f425aabc34868673ba58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>AT_API std::string at::get_backtrace</definition>
        <argsstring>(size_t frames_to_skip, size_t maximum_number_of_frames, bool skip_python_frames)</argsstring>
        <name>get_backtrace</name>
        <param>
          <type>size_t</type>
          <declname>frames_to_skip</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maximum_number_of_frames</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skip_python_frames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Backtrace.cpp" line="149" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Backtrace.cpp" bodystart="149" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9843a10c28d69a5a70cf212c4cda59c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const char *</type>
        <definition>const char* at::demangle_type</definition>
        <argsstring>()</argsstring>
        <name>demangle_type</name>
        <briefdescription>
<para>Returns the printable name of the type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Backtrace.h" line="15" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Backtrace.h" bodystart="15" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3ce9c001eaf32f8a5ccc5848158b6fe6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* at::check_generator</definition>
        <argsstring>(Generator *expr, Generator *defaultValue)</argsstring>
        <name>check_generator</name>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_generator" kindref="compound">Generator</ref> *</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CheckGenerator.h" line="10" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CheckGenerator.h" bodystart="10" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad50bb7feee3e00877f1d63bbb1a02844" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::errorHandler</definition>
        <argsstring>(const char *msg, void *data)</argsstring>
        <name>errorHandler</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.cpp" line="19" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.cpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7b3de70e0afd5711baa0bcfb8f263e40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::argErrorHandler</definition>
        <argsstring>(int arg, const char *msg, void *data)</argsstring>
        <name>argErrorHandler</name>
        <param>
          <type>int</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.cpp" line="22" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.cpp" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a229c40795a30329c83aa4e455f233a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classat_1_1_context" kindref="compound">Context</ref> &amp;</type>
        <definition>AT_API Context &amp; at::globalContext</definition>
        <argsstring>()</argsstring>
        <name>globalContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.cpp" line="40" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae1c618eace2b1b29c1bc491e68e72dbf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" line="124" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" bodystart="124" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae87f82125e0ff35d2ebc24d3e4d0d83e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
        <definition>static Type&amp; at::getType</definition>
        <argsstring>(Backend p, ScalarType s)</argsstring>
        <name>getType</name>
        <param>
          <type>Backend</type>
          <declname>p</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" line="134" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab5f5a01f6a170ed90398018095413299" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
        <definition>static Type&amp; at::CPU</definition>
        <argsstring>(ScalarType s)</argsstring>
        <name>CPU</name>
        <param>
          <type>ScalarType</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" line="138" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a05b728f364dc6b55c5d9d9f2251d32b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
        <definition>static Type&amp; at::CUDA</definition>
        <argsstring>(ScalarType s)</argsstring>
        <name>CUDA</name>
        <param>
          <type>ScalarType</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" line="142" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7b770c9b859ef688c3c189271817492c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::hasCUDA</definition>
        <argsstring>()</argsstring>
        <name>hasCUDA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" line="146" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa37a9a35b6be8d202d08725bc0a6a275" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::hasCuDNN</definition>
        <argsstring>()</argsstring>
        <name>hasCuDNN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" line="150" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3245c701c8c30544c64f62c0a0cab5d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::hasMKL</definition>
        <argsstring>()</argsstring>
        <name>hasMKL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" line="154" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a32e06ff05e552817056562b67977ab0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::current_device</definition>
        <argsstring>()</argsstring>
        <name>current_device</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" line="158" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Context.h" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5d5a5b73276998bd334d2ab5b0c308e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>Tensor at::sort_strides</definition>
        <argsstring>(Tensor &amp;tensor_)</argsstring>
        <name>sort_strides</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="39" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="39" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7d8fc672e3e62018e2a1da88b77ffab2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Arg</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::_setup_arrays</definition>
        <argsstring>(Tensor &amp;tensor, Arg *iter)</argsstring>
        <name>_setup_arrays</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>Arg *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="54" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="54" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4e0acdd8ace949639291f4b69e2d96ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::_all_equal_numel</definition>
        <argsstring>(at::ArrayRef&lt; Tensor &gt; tensors)</argsstring>
        <name>_all_equal_numel</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">at::ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="118" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="118" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac54fac49620ccbc0201c2a993b1bf892" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string at::_all_equal_numel_error</definition>
        <argsstring>(at::ArrayRef&lt; Tensor &gt; tensors)</argsstring>
        <name>_all_equal_numel_error</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">at::ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="129" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="129" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a01a51c49471156ed7074cd51ce282a4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::_apply_preamble</definition>
        <argsstring>(ArrayRef&lt; Tensor &gt; tensors)</argsstring>
        <name>_apply_preamble</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="145" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="145" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af0aa7ebeedbf105216f9b0201f763caa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::_max_dim_tensors</definition>
        <argsstring>(ArrayRef&lt; Tensor &gt; tensors)</argsstring>
        <name>_max_dim_tensors</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="156" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a854590444a94f33950674a2dd372d506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::iterate</definition>
        <argsstring>(int64_t size)</argsstring>
        <name>iterate</name>
        <param>
          <type>int64_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="163" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a10bfe8f2ded31634083ffbe2f3313f01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Arg</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::iterate</definition>
        <argsstring>(int64_t size, Arg &amp;iter, Args &amp;... iter_tail)</argsstring>
        <name>iterate</name>
        <param>
          <type>int64_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>Arg &amp;</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>Args &amp;...</type>
          <declname>iter_tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="166" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="166" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a547999f906e58f8011a08c1d6c779d90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool at::iterate_continue</definition>
        <argsstring>()</argsstring>
        <name>iterate_continue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="172" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="172" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0f2fa3ea6d98d6e141192ec85ee585db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Arg</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool at::iterate_continue</definition>
        <argsstring>(Arg &amp;iter, Args &amp;... iter_tail)</argsstring>
        <name>iterate_continue</name>
        <param>
          <type>Arg &amp;</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>Args &amp;...</type>
          <declname>iter_tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="177" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8e571e3c74b859ee30a9db3a20208187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::max_iterate_size</definition>
        <argsstring>()</argsstring>
        <name>max_iterate_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="182" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad6b23bbb05f02cb637dbe9d9e773547b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Arg</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>int64_t</type>
        <definition>int64_t at::max_iterate_size</definition>
        <argsstring>(Arg &amp;iter, Args &amp;... iter_tail)</argsstring>
        <name>max_iterate_size</name>
        <param>
          <type>Arg &amp;</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>Args &amp;...</type>
          <declname>iter_tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="187" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="187" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a19ababe327a068535ead7fc3788139e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::iterate_overflow</definition>
        <argsstring>()</argsstring>
        <name>iterate_overflow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="193" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af823d0844d4919171695a83ed8653813" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Arg</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::iterate_overflow</definition>
        <argsstring>(Arg &amp;iter, Args &amp;... iter_tail)</argsstring>
        <name>iterate_overflow</name>
        <param>
          <type>Arg &amp;</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>Args &amp;...</type>
          <declname>iter_tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="196" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="196" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6fde1060054dad958c470fd7edb7b489" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::forward</definition>
        <argsstring>(int64_t offset)</argsstring>
        <name>forward</name>
        <param>
          <type>int64_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="210" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6523984ed8936b307e9b63f4ffecbafd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Arg</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::forward</definition>
        <argsstring>(int64_t offset, Arg &amp;iter, Args &amp;... iter_tail)</argsstring>
        <name>forward</name>
        <param>
          <type>int64_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>Arg &amp;</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>Args &amp;...</type>
          <declname>iter_tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="213" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="213" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3e6b3b95ad884dc73f64e1d0bf059457" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::max_dim</definition>
        <argsstring>()</argsstring>
        <name>max_dim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="224" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="224" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0867bded53ff85f19eb057f463e33ff9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Arg</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>int64_t</type>
        <definition>int64_t at::max_dim</definition>
        <argsstring>(Arg &amp;iter, Args &amp;... iter_tail)</argsstring>
        <name>max_dim</name>
        <param>
          <type>Arg &amp;</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>Args &amp;...</type>
          <declname>iter_tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="229" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="229" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a50794f19b4c19ad5e8ce4e6cbb181c44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::apply_op</definition>
        <argsstring>()</argsstring>
        <name>apply_op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="233" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac84eb55677fde136759dd83cd58555cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Op</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::apply_op</definition>
        <argsstring>(int64_t numel, int64_t offset, const Op &amp;op, Args... iters)</argsstring>
        <name>apply_op</name>
        <param>
          <type>int64_t</type>
          <declname>numel</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const Op &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>iters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="237" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="237" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ade728dea989e9fc4159a3333b6fecd5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::apply_kernel</definition>
        <argsstring>()</argsstring>
        <name>apply_kernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="257" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="257" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8d24f347c68d61c74711d60a01280801" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Op</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::apply_kernel</definition>
        <argsstring>(int64_t numel, int64_t offset, const Op &amp;op, Args... iters)</argsstring>
        <name>apply_kernel</name>
        <param>
          <type>int64_t</type>
          <declname>numel</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const Op &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>iters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="264" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="264" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a111bdc93242d007a12f1ba17cecacb18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename scalar1</type>
          </param>
          <param>
            <type>typename scalar2</type>
          </param>
          <param>
            <type>typename Op</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::CPU_tensor_parallel_kernel_apply2</definition>
        <argsstring>(Tensor tensor1, Tensor tensor2, const Op op)</argsstring>
        <name>CPU_tensor_parallel_kernel_apply2</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor2</declname>
        </param>
        <param>
          <type>const Op</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="283" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="283" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad69aa7a082a344371342ad617fc2b68e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename scalar1</type>
          </param>
          <param>
            <type>typename Op</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::CPU_tensor_apply1</definition>
        <argsstring>(Tensor tensor1, const Op op)</argsstring>
        <name>CPU_tensor_apply1</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type>const Op</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="330" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="330" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0e300b71c0bc73ec619bcbd4355cbd3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename scalar1</type>
          </param>
          <param>
            <type>typename scalar2</type>
          </param>
          <param>
            <type>typename Op</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::CPU_tensor_apply2</definition>
        <argsstring>(Tensor tensor1, Tensor tensor2, const Op op)</argsstring>
        <name>CPU_tensor_apply2</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor2</declname>
        </param>
        <param>
          <type>const Op</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="345" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="345" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a89da46670757230ef171ef1dce9a0c1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename scalar1</type>
          </param>
          <param>
            <type>typename scalar2</type>
          </param>
          <param>
            <type>typename scalar3</type>
          </param>
          <param>
            <type>typename Op</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::CPU_tensor_apply3</definition>
        <argsstring>(Tensor tensor1, Tensor tensor2, Tensor tensor3, const Op op)</argsstring>
        <name>CPU_tensor_apply3</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor2</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor3</declname>
        </param>
        <param>
          <type>const Op</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="367" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="367" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a329c429bc59bbc5e344f670f70a77200" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename scalar1</type>
          </param>
          <param>
            <type>typename scalar2</type>
          </param>
          <param>
            <type>typename scalar3</type>
          </param>
          <param>
            <type>typename scalar4</type>
          </param>
          <param>
            <type>typename Op</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::CPU_tensor_apply4</definition>
        <argsstring>(Tensor tensor1, Tensor tensor2, Tensor tensor3, Tensor tensor4, const Op op)</argsstring>
        <name>CPU_tensor_apply4</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor2</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor3</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor4</declname>
        </param>
        <param>
          <type>const Op</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="395" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="395" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a67c29c964ae915d1c4b7bb382e06f6e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename scalar1</type>
          </param>
          <param>
            <type>typename Op</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::CPU_tensor_parallel_apply1</definition>
        <argsstring>(Tensor tensor1, const Op op, int64_t grain_size=internal::GRAIN_SIZE)</argsstring>
        <name>CPU_tensor_parallel_apply1</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type>const Op</type>
          <declname>op</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>grain_size</declname>
          <defval>internal::GRAIN_SIZE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="425" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="425" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8f73a1e6edfb76f72345f3aa9f5b5e0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename scalar1</type>
          </param>
          <param>
            <type>typename scalar2</type>
          </param>
          <param>
            <type>typename Op</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::CPU_tensor_parallel_apply2</definition>
        <argsstring>(Tensor tensor1, Tensor tensor2, const Op op, int64_t grain_size=internal::GRAIN_SIZE)</argsstring>
        <name>CPU_tensor_parallel_apply2</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor1</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
          <declname>tensor2</declname>
        </param>
        <param>
          <type>const Op</type>
          <declname>op</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>grain_size</declname>
          <defval>internal::GRAIN_SIZE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" line="456" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUApplyUtils.h" bodystart="456" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa4a116f58798c442c1f22b5979b49b1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static at::cpu_fixed_malloc</definition>
        <argsstring>(void *, ptrdiff_t)</argsstring>
        <name>cpu_fixed_malloc</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>ptrdiff_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUFixedAllocator.h" line="14" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUFixedAllocator.h" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a942878dbd55c1fb667026b0793d9b887" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static at::cpu_fixed_realloc</definition>
        <argsstring>(void *, void *, ptrdiff_t)</argsstring>
        <name>cpu_fixed_realloc</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>ptrdiff_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUFixedAllocator.h" line="18" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUFixedAllocator.h" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad8edadcd235cd0b3ad272c5ab8919a49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static at::cpu_fixed_free</definition>
        <argsstring>(void *state, void *allocation)</argsstring>
        <name>cpu_fixed_free</name>
        <param>
          <type>void *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>allocation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUFixedAllocator.h" line="22" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUFixedAllocator.h" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3d4b4ab9186ddcf9a33582b870ebb35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::atomic&lt; int &gt;</type>
        <definition>std::atomic&lt;int&gt; at::num_threads</definition>
        <argsstring>(-1)</argsstring>
        <name>num_threads</name>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUGeneral.cpp" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aacb856ab66b514916e07994cd441da01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::set_num_threads</definition>
        <argsstring>(int num_threads_)</argsstring>
        <name>set_num_threads</name>
        <param>
          <type>int</type>
          <declname>num_threads_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUGeneral.cpp" line="10" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUGeneral.cpp" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adb747facd97ba6689a4b3f0c9b0e6a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>AT_API int at::get_num_threads</definition>
        <argsstring>()</argsstring>
        <name>get_num_threads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUGeneral.cpp" line="15" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/CPUGeneral.cpp" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab2620b053ee8a51b6f13ce5a3da521c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::AT_DECLARE_REGISTRY</definition>
        <argsstring>(CUDAHooksRegistry, CUDAHooksInterface, CUDAHooksArgs) namespace detail</argsstring>
        <name>AT_DECLARE_REGISTRY</name>
        <param>
          <type>CUDAHooksRegistry</type>
        </param>
        <param>
          <type><ref refid="structat_1_1_c_u_d_a_hooks_interface" kindref="compound">CUDAHooksInterface</ref></type>
        </param>
        <param>
          <type><ref refid="structat_1_1_c_u_d_a_hooks_args" kindref="compound">CUDAHooksArgs</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>This class exists to let us access <computeroutput>cudaSetDevice</computeroutput>, <computeroutput>cudaGetDevice</computeroutput> and CUDA error handling functions, when CUDA is available. These functions will first default to no-ops. When the <computeroutput>ATen</computeroutput> GPU library is loaded, they will be set to the <computeroutput>cudaSetDevice</computeroutput>/<computeroutput>cudaGetDevice</computeroutput> functions. This allows us to access them with only a single pointer indirection, while virtual dispatch would require two (one for the virtual call, one for <computeroutput>cudaSetDevice</computeroutput>/<computeroutput>cudaGetDevice</computeroutput>). </para>        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/detail/CUDAHooksInterface.h" line="126" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/detail/CUDAHooksInterface.h" bodystart="126" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af5bdbfd81cdb715951fdc86909ae0cf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::AT_DECLARE_REGISTRY</definition>
        <argsstring>(VariableHooksRegistry, VariableHooksInterface, VariableHooksArgs) namespace detail</argsstring>
        <name>AT_DECLARE_REGISTRY</name>
        <param>
          <type>VariableHooksRegistry</type>
        </param>
        <param>
          <type><ref refid="structat_1_1_variable_hooks_interface" kindref="compound">VariableHooksInterface</ref></type>
        </param>
        <param>
          <type><ref refid="structat_1_1_variable_hooks_args" kindref="compound">VariableHooksArgs</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/detail/VariableHooksInterface.h" line="39" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/detail/VariableHooksInterface.h" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3ae79ecc5ea34e1b8af33abb6310cd99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_d_l_data_type" kindref="compound">DLDataType</ref></type>
        <definition>static DLDataType at::getDLDataType</definition>
        <argsstring>(const Type &amp;type)</argsstring>
        <name>getDLDataType</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" line="10" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" bodystart="10" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a90b448bb7ca2c1c12ee249faa801650c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_d_l_context" kindref="compound">DLContext</ref></type>
        <definition>static DLContext at::getDLContext</definition>
        <argsstring>(const Type &amp;type, const int64_t &amp;device_id)</argsstring>
        <name>getDLContext</name>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const int64_t &amp;</type>
          <declname>device_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" line="48" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" bodystart="48" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac1d1430546420a64c5831b65706abf20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Backend</type>
        <definition>static Backend at::getATenBackend</definition>
        <argsstring>(const DLContext &amp;ctx)</argsstring>
        <name>getATenBackend</name>
        <param>
          <type>const <ref refid="struct_d_l_context" kindref="compound">DLContext</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" line="60" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" bodystart="60" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a58ccc4afaa05e8ce8bfa9c9820c6d233" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ScalarType</type>
        <definition>AT_API ScalarType at::toScalarType</definition>
        <argsstring>(const DLDataType &amp;dtype)</argsstring>
        <name>toScalarType</name>
        <param>
          <type>const <ref refid="struct_d_l_data_type" kindref="compound">DLDataType</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" line="76" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" bodystart="76" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2147b25bee456d53e0f87cbdf92bb021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at::deleter</definition>
        <argsstring>(DLManagedTensor *arg)</argsstring>
        <name>deleter</name>
        <param>
          <type><ref refid="struct_d_l_managed_tensor" kindref="compound">DLManagedTensor</ref> *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" line="133" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2cc4b433d60fd8b8fa2667633bc62b36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_d_l_managed_tensor" kindref="compound">DLManagedTensor</ref> *</type>
        <definition>AT_API DLManagedTensor * at::toDLPack</definition>
        <argsstring>(const Tensor &amp;src)</argsstring>
        <name>toDLPack</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" line="140" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" bodystart="140" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acafd370eb8efe92e557249bb1020b5c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>AT_API Tensor at::fromDLPack</definition>
        <argsstring>(const DLManagedTensor *src)</argsstring>
        <name>fromDLPack</name>
        <param>
          <type>const <ref refid="struct_d_l_managed_tensor" kindref="compound">DLManagedTensor</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" line="160" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/DLConvertor.cpp" bodystart="160" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8270d7f8507bd1f0b8b0242cb1c7b2b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; at::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const SourceLocation &amp;loc)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_source_location" kindref="compound">SourceLocation</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Error.cpp" line="8" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Error.cpp" bodystart="8" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a91eeb65fa72d3ab77d34d308d5165604" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string at::str</definition>
        <argsstring>(const Args &amp;... args)</argsstring>
        <name>str</name>
        <param>
          <type>const Args &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Error.h" line="38" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Error.h" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aef18a791807b348f267ead04287e74eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string at::str</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>str</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Error.h" line="46" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Error.h" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae6ea60866103c01b22d01ca449cfeda3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string at::str</definition>
        <argsstring>(const char *c_str)</argsstring>
        <name>str</name>
        <param>
          <type>const char *</type>
          <declname>c_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Error.h" line="49" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Error.h" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7aea5aac2aa36bef8c269b8416aa2b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int64_t &gt;</type>
        <definition>AT_API std::vector&lt; int64_t &gt; at::infer_size</definition>
        <argsstring>(IntList a, IntList b)</argsstring>
        <name>infer_size</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.cpp" line="5" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.cpp" bodystart="5" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a86c33a775c6722add03f0801cc94c54f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; std::vector&lt; int64_t &gt;, std::vector&lt; int64_t &gt; &gt;</type>
        <definition>AT_API std::tuple&lt; std::vector&lt; int64_t &gt;, std::vector&lt; int64_t &gt; &gt; at::inferExpandGeometry</definition>
        <argsstring>(IntList tensor_sizes, IntList tensor_strides, IntList sizes)</argsstring>
        <name>inferExpandGeometry</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>tensor_sizes</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>tensor_strides</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.cpp" line="31" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.cpp" bodystart="31" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac3d67c134578bd27fb821b2c3e49f599" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::check_defined</definition>
        <argsstring>(std::initializer_list&lt; std::reference_wrapper&lt; const Tensor &gt;&gt; tensors, const char *api_name)</argsstring>
        <name>check_defined</name>
        <param>
          <type>std::initializer_list&lt; std::reference_wrapper&lt; const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;&gt;</type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>api_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" line="17" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" bodystart="17" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a17c836ca097f0ebdb53b52f152b38c85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor&gt; at::expand_inplace</definition>
        <argsstring>(const Tensor &amp;tensor, const Tensor &amp;to_expand)</argsstring>
        <name>expand_inplace</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" line="25" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a26374d4eab99a730e945fedd807cc816" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor&gt; at::expand_inplace</definition>
        <argsstring>(const Tensor &amp;tensor, const Tensor &amp;to_expand, const char *api_name)</argsstring>
        <name>expand_inplace</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>api_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" line="33" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1628002f8bb3c2c8fc045b559f99cbdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::expand_inplace</definition>
        <argsstring>(const Tensor &amp;tensor, const Tensor &amp;to_expand1, const Tensor &amp;to_expand2)</argsstring>
        <name>expand_inplace</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" line="38" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" bodystart="38" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0f64d149286ce3ad1a3124ce7a208981" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::expand_inplace</definition>
        <argsstring>(const Tensor &amp;tensor, const Tensor &amp;to_expand1, const Tensor &amp;to_expand2, const char *api_name)</argsstring>
        <name>expand_inplace</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>api_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" line="48" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a24def63cd5b966ea4b484dfd7ee265b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::expand_outplace</definition>
        <argsstring>(const Tensor &amp;to_expand1, const Tensor &amp;to_expand2)</argsstring>
        <name>expand_outplace</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" line="54" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" bodystart="54" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afd5ceedd5aabbb0c09c7f128c2375be1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor&gt; at::expand_outplace</definition>
        <argsstring>(const Tensor &amp;to_expand1, const Tensor &amp;to_expand2, const char *api_name)</argsstring>
        <name>expand_outplace</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand2</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>api_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" line="65" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8736c8ca7d09bf6ee42fd96844c73f87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor, Tensor&gt; at::expand_outplace</definition>
        <argsstring>(const Tensor &amp;to_expand1, const Tensor &amp;to_expand2, const Tensor &amp;to_expand3)</argsstring>
        <name>expand_outplace</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" line="70" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" bodystart="70" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aefee84552672dd1c02f95f15c111228b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref>, <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor, Tensor, Tensor&gt; at::expand_outplace</definition>
        <argsstring>(const Tensor &amp;to_expand1, const Tensor &amp;to_expand2, const Tensor &amp;to_expand3, const char *api_name)</argsstring>
        <name>expand_outplace</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand2</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand3</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>api_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" line="85" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" bodystart="85" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1f09c65b7e1c168740d17a63bd5da044" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor&gt; at::expand_size</definition>
        <argsstring>(const Tensor &amp;to_expand, IntList sizes)</argsstring>
        <name>expand_size</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" line="93" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" bodystart="93" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2f8db5027d91feeb18cb08bff569e48d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::tuple&lt;Tensor&gt; at::expand_size</definition>
        <argsstring>(const Tensor &amp;to_expand, IntList sizes, const char *api_name)</argsstring>
        <name>expand_size</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>to_expand</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>api_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" line="101" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acb2b2e96bf6fa0079bd52777c84397d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
        <definition>std::vector&lt;Tensor&gt; at::expand_outplace</definition>
        <argsstring>(TensorList to_expand)</argsstring>
        <name>expand_outplace</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>to_expand</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" line="106" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ExpandUtils.h" bodystart="106" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0d2bf45f1f588cf8a6b878e5b5d7732d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ios_base &amp;</type>
        <definition>std::ios_base&amp; at::defaultfloat</definition>
        <argsstring>(std::ios_base &amp;__base)</argsstring>
        <name>defaultfloat</name>
        <param>
          <type>std::ios_base &amp;</type>
          <declname>__base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" line="14" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6a6d4cededcb3b3acd9e9271540eda5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>AT_API std::ostream &amp; at::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, IntList list)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" line="32" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" bodystart="32" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8098ab41edd07c8289e0b80260570da4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>AT_API std::ostream &amp; at::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, Backend b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>Backend</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" line="44" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acf8e13887fd53721f7415d6e3b697b7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>AT_API std::ostream &amp; at::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, ScalarType t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" line="48" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a491b4c2d02aff926a22be59a789873d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>AT_API std::ostream &amp; at::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Type &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" line="52" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a875b785ba589a50d87756588f8faaa8c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; double, int64_t &gt;</type>
        <definition>static std::tuple&lt;double, int64_t&gt; at::__printFormat</definition>
        <argsstring>(std::ostream &amp;stream, const Tensor &amp;self)</argsstring>
        <name>__printFormat</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" line="56" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" bodystart="56" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6ef445acd07a3c91e241f52eac9cc04b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::__printIndent</definition>
        <argsstring>(std::ostream &amp;stream, int64_t indent)</argsstring>
        <name>__printIndent</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" line="144" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" bodystart="144" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6258dd2f57b4d737e8be13ba9f645cd8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::printScale</definition>
        <argsstring>(std::ostream &amp;stream, double scale)</argsstring>
        <name>printScale</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>double</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" line="151" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa8ca59f0207974375a812638a48dca26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void at::__printMatrix</definition>
        <argsstring>(std::ostream &amp;stream, const Tensor &amp;self, int64_t linesize, int64_t indent)</argsstring>
        <name>__printMatrix</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>linesize</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" line="155" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" bodystart="155" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afafc6fc5f9869be9229c27f121f7ab7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at::__printTensor</definition>
        <argsstring>(std::ostream &amp;stream, Tensor &amp;self, int64_t linesize)</argsstring>
        <name>__printTensor</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>linesize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" line="206" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" bodystart="206" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a897da7b89da4fad162610e3889ba07e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>AT_API std::ostream &amp; at::print</definition>
        <argsstring>(std::ostream &amp;stream, const Tensor &amp;tensor_, int64_t linesize)</argsstring>
        <name>print</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor_</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>linesize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" line="246" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.cpp" bodystart="246" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa618e71261e149cb859b39495af99ede" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>static std::ostream&amp; at::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Tensor &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.h" line="14" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.h" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9652bab000cace8bf2d91fbb5b57ed36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::print</definition>
        <argsstring>(const Tensor &amp;t, int64_t linesize=80)</argsstring>
        <name>print</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>linesize</declname>
          <defval>80</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.h" line="17" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.h" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a77e29f8c03311a09c8204624bd6fe855" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>static std::ostream&amp; at::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, Scalar s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.h" line="21" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Formatting.h" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a159ef30f42d3e5720ec8b23d1165425f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator+</definition>
        <argsstring>(const Half &amp;a, const Half &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Arithmetic. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="44" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6b4a22f0b00b2d0abe3f8f9e6baa19f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator-</definition>
        <argsstring>(const Half &amp;a, const Half &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="48" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa90a0189468bbc0e5c1f278b1bc25b2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator*</definition>
        <argsstring>(const Half &amp;a, const Half &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="52" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2a7117130ea9df03c2bfe35ae19feef5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator/</definition>
        <argsstring>(const Half &amp;a, const Half &amp;b)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="56" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4ecddf4d29d11ed9605ff2195800b10d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator-</definition>
        <argsstring>(const Half &amp;a)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="60" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a44f264ea36a2ac7d3a927515df4e5d95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
        <definition>AT_HOSTDEVICE Half&amp; at::operator+=</definition>
        <argsstring>(Half &amp;a, const Half &amp;b)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="64" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2f069913792e98b7f0aacc877f0b6fe6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
        <definition>AT_HOSTDEVICE Half&amp; at::operator-=</definition>
        <argsstring>(Half &amp;a, const Half &amp;b)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="69" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5264ee2551e8d26ebacf4c8031c22fab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
        <definition>AT_HOSTDEVICE Half&amp; at::operator*=</definition>
        <argsstring>(Half &amp;a, const Half &amp;b)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="74" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa6708e4b0ed5cd57da45783ac49f75b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
        <definition>AT_HOSTDEVICE Half&amp; at::operator/=</definition>
        <argsstring>(Half &amp;a, const Half &amp;b)</argsstring>
        <name>operator/=</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="79" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acb53174aa1fed18d3c38c7c69c0b40eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE float</type>
        <definition>AT_HOSTDEVICE float at::operator+</definition>
        <argsstring>(Half a, float b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Arithmetic with floats. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="86" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9e67df814b6849b09e82afb7afd11a4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE float</type>
        <definition>AT_HOSTDEVICE float at::operator-</definition>
        <argsstring>(Half a, float b)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="87" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8c217d646fb91bb0a8d406429a09a364" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE float</type>
        <definition>AT_HOSTDEVICE float at::operator*</definition>
        <argsstring>(Half a, float b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="88" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a55667274e47dad140658f7b5319ac9d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE float</type>
        <definition>AT_HOSTDEVICE float at::operator/</definition>
        <argsstring>(Half a, float b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aed274a0a6a9aae1f79ad67ef484745ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE float</type>
        <definition>AT_HOSTDEVICE float at::operator+</definition>
        <argsstring>(float a, Half b)</argsstring>
        <name>operator+</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="91" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad06a90f6975f55e86d1fcbb8af511f6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE float</type>
        <definition>AT_HOSTDEVICE float at::operator-</definition>
        <argsstring>(float a, Half b)</argsstring>
        <name>operator-</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="92" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a234abea03996a34200e1f2a7a9c4fff7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE float</type>
        <definition>AT_HOSTDEVICE float at::operator*</definition>
        <argsstring>(float a, Half b)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="93" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a33174fe96d155fd46f0266ac24659e06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE float</type>
        <definition>AT_HOSTDEVICE float at::operator/</definition>
        <argsstring>(float a, Half b)</argsstring>
        <name>operator/</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="94" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae147ba8bc1c3c152518d2aa126724a8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE float &amp;</type>
        <definition>AT_HOSTDEVICE float&amp; at::operator+=</definition>
        <argsstring>(float &amp;a, const Half &amp;b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>float &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="96" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8e6ed95d33c677cdfd430d847ceb1844" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE float &amp;</type>
        <definition>AT_HOSTDEVICE float&amp; at::operator-=</definition>
        <argsstring>(float &amp;a, const Half &amp;b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>float &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="97" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7aa1fcfacddba953d7c3bb0f8de98ea9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE float &amp;</type>
        <definition>AT_HOSTDEVICE float&amp; at::operator*=</definition>
        <argsstring>(float &amp;a, const Half &amp;b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="98" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5cddbcd77e34741160557a75a2daef75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE float &amp;</type>
        <definition>AT_HOSTDEVICE float&amp; at::operator/=</definition>
        <argsstring>(float &amp;a, const Half &amp;b)</argsstring>
        <name>operator/=</name>
        <param>
          <type>float &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="99" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8d714c9cd5c1bee75db4414ba6745825" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE double</type>
        <definition>AT_HOSTDEVICE double at::operator+</definition>
        <argsstring>(Half a, double b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Arithmetic with doubles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="103" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a972f9ceddae4c50ed7f79ceb08c77858" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE double</type>
        <definition>AT_HOSTDEVICE double at::operator-</definition>
        <argsstring>(Half a, double b)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="104" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af0e54670ea6b9eaf8ee1a40b89eb0cbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE double</type>
        <definition>AT_HOSTDEVICE double at::operator*</definition>
        <argsstring>(Half a, double b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="105" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adbd433dc9240a246ba4d72749f8df1a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE double</type>
        <definition>AT_HOSTDEVICE double at::operator/</definition>
        <argsstring>(Half a, double b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="106" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa45795e186459c9d89c8059d522cc03e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE double</type>
        <definition>AT_HOSTDEVICE double at::operator+</definition>
        <argsstring>(double a, Half b)</argsstring>
        <name>operator+</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="108" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9d59b76f323674633352c6281a98ae6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE double</type>
        <definition>AT_HOSTDEVICE double at::operator-</definition>
        <argsstring>(double a, Half b)</argsstring>
        <name>operator-</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="109" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a18dc3d8133ad06dbb215fc2c958e8858" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE double</type>
        <definition>AT_HOSTDEVICE double at::operator*</definition>
        <argsstring>(double a, Half b)</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="110" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a89884eebb2be49523b69e3ab8882d940" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE double</type>
        <definition>AT_HOSTDEVICE double at::operator/</definition>
        <argsstring>(double a, Half b)</argsstring>
        <name>operator/</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="111" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae7de8a2e39c7e03afa21fa700a75e90b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator+</definition>
        <argsstring>(Half a, int b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Arithmetic with ints. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="115" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac094545ec9483ff9ec1efee15e54e690" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator-</definition>
        <argsstring>(Half a, int b)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="116" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0adecd9bc11bd52630c67e4de018555f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator*</definition>
        <argsstring>(Half a, int b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="117" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0c1e353b957f23d62d2595fdbaadcd50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator/</definition>
        <argsstring>(Half a, int b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="118" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a372af00c6f86e5267e54ec22b2b58fe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator+</definition>
        <argsstring>(int a, Half b)</argsstring>
        <name>operator+</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="120" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acd3d0f102aee5f57f03569f1bc571097" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator-</definition>
        <argsstring>(int a, Half b)</argsstring>
        <name>operator-</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="121" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a44215a9888c0aa48846322c39e0f3867" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator*</definition>
        <argsstring>(int a, Half b)</argsstring>
        <name>operator*</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="122" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a57f33e47e1a9a4efb7e4998f53abfd1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>AT_HOSTDEVICE <ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
        <definition>AT_HOSTDEVICE Half at::operator/</definition>
        <argsstring>(int a, Half b)</argsstring>
        <name>operator/</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_half" kindref="compound">Half</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" line="123" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half-inl.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad3a10abfb6af7f8d58842a6537e5b4ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>AT_API std::ostream &amp; at::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Half &amp;value)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_half" kindref="compound">Half</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.cpp" line="29" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aef26d85c9a28fee607f5e0854e66a8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
          <param>
            <type>typename From</type>
          </param>
        </templateparamlist>
        <type>To</type>
        <definition>To at::convert</definition>
        <argsstring>(From f)</argsstring>
        <name>convert</name>
        <param>
          <type>From</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.h" line="66" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a228a745aab67c3ec7413b040c5bf2862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
          <param>
            <type>typename From</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_integral&lt; From &gt;::value, bool &gt;::type</type>
        <definition>std::enable_if&lt;std::is_integral&lt;From&gt;::value, bool&gt;::type at::overflows</definition>
        <argsstring>(From f)</argsstring>
        <name>overflows</name>
        <param>
          <type>From</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.h" line="72" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abedd27371a5b535a3543798fafbf1740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
          <param>
            <type>typename From</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt;!std::is_integral&lt; From &gt;::value, bool &gt;::type</type>
        <definition>std::enable_if&lt;!std::is_integral&lt;From&gt;::value, bool&gt;::type at::overflows</definition>
        <argsstring>(From f)</argsstring>
        <name>overflows</name>
        <param>
          <type>From</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.h" line="78" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.h" bodystart="78" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab155a118d8db4feaa9b919dd83320230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
          <param>
            <type>typename From</type>
          </param>
        </templateparamlist>
        <type>To</type>
        <definition>To at::checked_convert</definition>
        <argsstring>(From f, const char *name)</argsstring>
        <name>checked_convert</name>
        <param>
          <type>From</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.h" bodystart="89" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1bed36bdf9b406f9f457064718527dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
          <param>
            <type>typename From</type>
          </param>
        </templateparamlist>
        <type>To</type>
        <definition>To at::HalfFix</definition>
        <argsstring>(From h)</argsstring>
        <name>HalfFix</name>
        <param>
          <type>From</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.h" line="101" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Half.h" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a27a99641e22bf5aba1e058cc7cb0d8c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Layout</type>
        <definition>Layout at::layout_from_backend</definition>
        <argsstring>(Backend backend)</argsstring>
        <name>layout_from_backend</name>
        <param>
          <type>Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Layout.h" line="14" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Layout.h" bodystart="14" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afeca88ad17c31a33d9eb7b43ff5f86d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr T &amp;&amp;</type>
        <definition>constexpr T&amp;&amp; at::constexpr_forward</definition>
        <argsstring>(typename std::remove_reference&lt; T &gt;::type &amp;t) noexcept</argsstring>
        <name>constexpr_forward</name>
        <param>
          <type>typename std::remove_reference&lt; T &gt;::type &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="115" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8a2aee354dad56366a175c8f2ccc30f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr T &amp;&amp;</type>
        <definition>constexpr T&amp;&amp; at::constexpr_forward</definition>
        <argsstring>(typename std::remove_reference&lt; T &gt;::type &amp;&amp;t) noexcept</argsstring>
        <name>constexpr_forward</name>
        <param>
          <type>typename std::remove_reference&lt; T &gt;::type &amp;&amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="120" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abe03ed1dcdcf908ac866f56f61ddb07e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr std::remove_reference&lt; T &gt;::type &amp;&amp;</type>
        <definition>constexpr std::remove_reference&lt;T&gt;::type&amp;&amp; at::constexpr_move</definition>
        <argsstring>(T &amp;&amp;t) noexcept</argsstring>
        <name>constexpr_move</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="126" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac3bcaf808737b95f5eddd43a20b118d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator==</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, const optional&lt; T &gt; &amp;y)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="654" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="654" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac975d8760fe7f344431a370e2e6f4c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator!=</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, const optional&lt; T &gt; &amp;y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="659" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="659" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a26833466eb0d8ddd6ddfe3b528cab8e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, const optional&lt; T &gt; &amp;y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="664" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="664" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac2e0b74349b14a58e5e3b384dbfab24c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, const optional&lt; T &gt; &amp;y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="669" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="669" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a743aeb8387394f98c5d10a7a6051164d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;=</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, const optional&lt; T &gt; &amp;y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="674" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="674" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8ac746c5c3a777df19459767d73b8874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;=</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, const optional&lt; T &gt; &amp;y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="679" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="679" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2e6f3629575002465a16dc345c498664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator==</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, nullopt_t) noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="686" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="686" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9e3abcb036af9da8deea23677cddb2d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator==</definition>
        <argsstring>(nullopt_t, const optional&lt; T &gt; &amp;x) noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="691" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="691" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a221ce933ad94e2fd20607cd481a1026f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator!=</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, nullopt_t) noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="696" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="696" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad5abd779e799c50cfefb7151da930cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator!=</definition>
        <argsstring>(nullopt_t, const optional&lt; T &gt; &amp;x) noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="701" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="701" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6ec6498df3243ebdf5fc470b6ca61428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;</definition>
        <argsstring>(const optional&lt; T &gt; &amp;, nullopt_t) noexcept</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
        </param>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="706" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="706" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a60c20d3a66e07de5e0d0db1536ddf1f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;</definition>
        <argsstring>(nullopt_t, const optional&lt; T &gt; &amp;x) noexcept</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="711" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="711" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a384abfa9af7e56ec4a320768f0b6df0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;=</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, nullopt_t) noexcept</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="716" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="716" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad943ae2f84f075e535520bf346349c15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;=</definition>
        <argsstring>(nullopt_t, const optional&lt; T &gt; &amp;) noexcept</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="721" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="721" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3b1886a03ce2f9e120fbec24a7c3e60e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, nullopt_t) noexcept</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="726" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="726" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a362a850976d33c13ac2aaa2ef3350240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;</definition>
        <argsstring>(nullopt_t, const optional&lt; T &gt; &amp;) noexcept</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="731" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="731" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a79498a40c70790c088d8ffa12368da56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;=</definition>
        <argsstring>(const optional&lt; T &gt; &amp;, nullopt_t) noexcept</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
        </param>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="736" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="736" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0c71447c81ace17f237f22fc3fa818a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;=</definition>
        <argsstring>(nullopt_t, const optional&lt; T &gt; &amp;x) noexcept</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="741" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="741" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ade5215b579b424f9c2e5ec224b2b5c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator==</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="749" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="749" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1d92e390e955cb6919fb1f91771066f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator==</definition>
        <argsstring>(const T &amp;v, const optional&lt; T &gt; &amp;x)</argsstring>
        <name>operator==</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="754" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="754" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4c854285b95b2f4beaf3e2b31a32a530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator!=</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="759" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="759" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abf5eef20300c6b57f4c77c7f081dba24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator!=</definition>
        <argsstring>(const T &amp;v, const optional&lt; T &gt; &amp;x)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="764" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="764" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa218057f00303a55b024e7068bbf1b7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="769" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="769" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a387ee1cbbcda4a805565107589cb912b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;</definition>
        <argsstring>(const T &amp;v, const optional&lt; T &gt; &amp;x)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="774" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="774" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4575e6ea1dba993a9cd869c5ab133da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="779" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="779" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a858da093164ac3623a96794ab66cc301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;</definition>
        <argsstring>(const T &amp;v, const optional&lt; T &gt; &amp;x)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="784" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="784" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a04bdc2e3ba7a28846b7c750b1779b778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;=</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="789" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="789" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa94cc2a18353015d553ee26a1dc253e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;=</definition>
        <argsstring>(const T &amp;v, const optional&lt; T &gt; &amp;x)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="794" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="794" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae9eab02943a42338845c5ccb3101da12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;=</definition>
        <argsstring>(const optional&lt; T &gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="799" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="799" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a92583d1422f32fd0e721d0f5f05b7d87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;=</definition>
        <argsstring>(const T &amp;v, const optional&lt; T &gt; &amp;x)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="804" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="804" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6db7724631a5c778a98700caab7f3ddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator==</definition>
        <argsstring>(const optional&lt; T &amp;&gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="811" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="811" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a01af0f165c25925218d0551844b9793e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator==</definition>
        <argsstring>(const T &amp;v, const optional&lt; T &amp;&gt; &amp;x)</argsstring>
        <name>operator==</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="816" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="816" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab94e5f123c78beeeb01379a861504c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator!=</definition>
        <argsstring>(const optional&lt; T &amp;&gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="821" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="821" bodyend="824"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adbc1ecd79476380990b071f5a144681c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator!=</definition>
        <argsstring>(const T &amp;v, const optional&lt; T &amp;&gt; &amp;x)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="826" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="826" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac82022b3cbb41c764e6b7e32d1639e76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;</definition>
        <argsstring>(const optional&lt; T &amp;&gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="831" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="831" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a28b25012ce23bfc6335797d3639a7ce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;</definition>
        <argsstring>(const T &amp;v, const optional&lt; T &amp;&gt; &amp;x)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="836" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="836" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af205660747b391ced4e3bc117522911f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;</definition>
        <argsstring>(const optional&lt; T &amp;&gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="841" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="841" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8d0fd48fc20c2ea06f6c90f3e4393e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;</definition>
        <argsstring>(const T &amp;v, const optional&lt; T &amp;&gt; &amp;x)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="846" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="846" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aaf080fdaf86f4bb4a82900dfd9565207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;=</definition>
        <argsstring>(const optional&lt; T &amp;&gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="851" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="851" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2f1af0d8816e90d23ee52c5b0bac42f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;=</definition>
        <argsstring>(const T &amp;v, const optional&lt; T &amp;&gt; &amp;x)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="856" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="856" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a96cf58462dc66d7dc5d1a93f668e3f4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;=</definition>
        <argsstring>(const optional&lt; T &amp;&gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="861" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="861" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9a2d1a9ee219122e03d9fcf369fe89ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;=</definition>
        <argsstring>(const T &amp;v, const optional&lt; T &amp;&gt; &amp;x)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="866" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="866" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a41c7af3fb6c78071369aee8865a09700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator==</definition>
        <argsstring>(const optional&lt; const T &amp;&gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; const T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="872" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="872" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abe44f8e3b94a259aae84712806bea5ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator==</definition>
        <argsstring>(const T &amp;v, const optional&lt; const T &amp;&gt; &amp;x)</argsstring>
        <name>operator==</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; const T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="877" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="877" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac798f557401b6b200f71e5b15eb3f9f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator!=</definition>
        <argsstring>(const optional&lt; const T &amp;&gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; const T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="882" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="882" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6a4c82c20af8a74f306c371a2f23332e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator!=</definition>
        <argsstring>(const T &amp;v, const optional&lt; const T &amp;&gt; &amp;x)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; const T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="887" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="887" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a57ad19e230dbf0311778674a1d7ab58d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;</definition>
        <argsstring>(const optional&lt; const T &amp;&gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; const T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="892" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="892" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acec650e346da9d77ef505d7564b1067e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;</definition>
        <argsstring>(const T &amp;v, const optional&lt; const T &amp;&gt; &amp;x)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; const T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="897" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="897" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9dbb8847f2cb05917f1b6dbeafa9a957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;</definition>
        <argsstring>(const optional&lt; const T &amp;&gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; const T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="902" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="902" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a32e38722b7ba1b9f5067e2128f63b35d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;</definition>
        <argsstring>(const T &amp;v, const optional&lt; const T &amp;&gt; &amp;x)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; const T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="907" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="907" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a463d1b839790fddecd27ef6fd5c7114a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;=</definition>
        <argsstring>(const optional&lt; const T &amp;&gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; const T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="912" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="912" bodyend="915"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa57be93f4494a7b5c718e64a22b664e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;=</definition>
        <argsstring>(const T &amp;v, const optional&lt; const T &amp;&gt; &amp;x)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; const T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="917" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="917" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a737a7e3c0adb4b8d8cabbca9e69cc43d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&lt;=</definition>
        <argsstring>(const optional&lt; const T &amp;&gt; &amp;x, const T &amp;v)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; const T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="922" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="922" bodyend="925"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2423609b56f7e572bb1cd9da513aad2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool at::operator&gt;=</definition>
        <argsstring>(const T &amp;v, const optional&lt; const T &amp;&gt; &amp;x)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; const T &amp;&gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="927" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="927" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6404b186663c1a6cedbc3ea59a92ea68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::swap</definition>
        <argsstring>(optional&lt; T &gt; &amp;x, optional&lt; T &gt; &amp;y) noexcept(noexcept(x.swap(y)))</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="935" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="935" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad117c8e2dab995812a7c1cad01c863ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; typename std::decay&lt; T &gt;::type &gt;</type>
        <definition>constexpr optional&lt;typename std::decay&lt;T&gt;::type&gt; at::make_optional</definition>
        <argsstring>(T &amp;&amp;v)</argsstring>
        <name>make_optional</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="942" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="942" bodyend="945"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a632affbe7328aff6c115b50fb8b28947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class X</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; X &amp; &gt;</type>
        <definition>constexpr optional&lt;X&amp;&gt; at::make_optional</definition>
        <argsstring>(std::reference_wrapper&lt; X &gt; v)</argsstring>
        <name>make_optional</name>
        <param>
          <type>std::reference_wrapper&lt; X &gt;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="948" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="948" bodyend="951"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1afaffff2d5adf3c4bdfb162946f04f3ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::divup</definition>
        <argsstring>(int64_t x, int64_t y)</argsstring>
        <name>divup</name>
        <param>
          <type>int64_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Parallel.h" line="19" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Parallel.h" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af3ea18146dfa6329012efc91ecb71f98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::parallel_for</definition>
        <argsstring>(const int64_t begin, const int64_t end, const int64_t grain_size, const F f)</argsstring>
        <name>parallel_for</name>
        <param>
          <type>const int64_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>grain_size</declname>
        </param>
        <param>
          <type>const F</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Parallel.h" line="24" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Parallel.h" bodystart="24" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a034a1a29245983fa707bf45f433a3102" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class scalar_t</type>
          </param>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class SF</type>
          </param>
        </templateparamlist>
        <type>scalar_t</type>
        <definition>scalar_t at::parallel_reduce</definition>
        <argsstring>(const int64_t begin, const int64_t end, const int64_t grain_size, const scalar_t ident, const F f, const SF sf)</argsstring>
        <name>parallel_reduce</name>
        <param>
          <type>const int64_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const int64_t</type>
          <declname>grain_size</declname>
        </param>
        <param>
          <type>const scalar_t</type>
          <declname>ident</declname>
        </param>
        <param>
          <type>const F</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const SF</type>
          <declname>sf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Parallel.h" line="45" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Parallel.h" bodystart="45" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a49d8b471afe179708dae74324bdb2a0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename KeyType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void at::PrintOffendingKey</definition>
        <argsstring>(const KeyType &amp;)</argsstring>
        <name>PrintOffendingKey</name>
        <param>
          <type>const KeyType &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="27" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abbd5120249d39e09b4bfb27e4e2b5f31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void at::PrintOffendingKey</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>PrintOffendingKey</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" line="32" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Registry.h" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac54738f81074cf43416ba8c05887b3b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Backend</type>
        <definition>static Backend at::toSparse</definition>
        <argsstring>(Backend b)</argsstring>
        <name>toSparse</name>
        <param>
          <type>Backend</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="55" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac50b67808dff511985d3e6784fb9e427" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Backend</type>
        <definition>static Backend at::toDense</definition>
        <argsstring>(Backend b)</argsstring>
        <name>toDense</name>
        <param>
          <type>Backend</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="65" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="65" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7db6b0f485de36bb57e943a97338f9c6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* at::toString</definition>
        <argsstring>(Backend b)</argsstring>
        <name>toString</name>
        <param>
          <type>Backend</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="75" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="75" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac80b9e9a8f0dd7480adf21c3f03ee78d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* at::toString</definition>
        <argsstring>(ScalarType t)</argsstring>
        <name>toString</name>
        <param>
          <type>ScalarType</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="90" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="90" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6039c1bddea4b1794679e6069c900c56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t at::elementSize</definition>
        <argsstring>(ScalarType t)</argsstring>
        <name>elementSize</name>
        <param>
          <type>ScalarType</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="101" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="101" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a000d7a5686952ab72e4ed8fc74b329bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::isIntegralType</definition>
        <argsstring>(ScalarType t)</argsstring>
        <name>isIntegralType</name>
        <param>
          <type>ScalarType</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="112" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="112" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ade4968d1b9d83ed5a06d570e05983069" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool at::isFloatingType</definition>
        <argsstring>(ScalarType t)</argsstring>
        <name>isFloatingType</name>
        <param>
          <type>ScalarType</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="120" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abcdddedb64c389b66386c28acede3642" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ScalarType</type>
        <definition>static ScalarType at::promoteTypes</definition>
        <argsstring>(ScalarType a, ScalarType b)</argsstring>
        <name>promoteTypes</name>
        <param>
          <type>ScalarType</type>
          <declname>a</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" line="126" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/ScalarType.h" bodystart="126" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abe28bb09f8c4d42233da84ae02908d1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>unsigned</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t at::capacity_in_bytes</definition>
        <argsstring>(const SmallVector&lt; T, N &gt; &amp;X)</argsstring>
        <name>capacity_in_bytes</name>
        <param>
          <type>const <ref refid="classat_1_1_small_vector" kindref="compound">SmallVector</ref>&lt; T, N &gt; &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" line="954" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/SmallVector.h" bodystart="954" bodyend="956"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6971c2b5129813eeb8173a701097bd37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct at::@1</type>
        <definition>struct at::@1 at::Generator</definition>
        <argsstring>(Context *context)</argsstring>
        <name>Generator</name>
        <param>
          <type><ref refid="classat_1_1_context" kindref="compound">Context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/GeneratorDerived.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9259e0b05e48d84431767b6d536b4764" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>virtual virtual virtual virtual uint64_t at::seed</definition>
        <argsstring>() override</argsstring>
        <name>seed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/GeneratorDerived.h" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5ab759061b65ad92b21acac7f111e0ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>virtual uint64_t at::initialSeed</definition>
        <argsstring>() override</argsstring>
        <name>initialSeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/GeneratorDerived.h" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0d156b8d28507a1faaa3e2e1615e48e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>virtual virtual virtual void* at::unsafeGetTH</definition>
        <argsstring>() override</argsstring>
        <name>unsafeGetTH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/GeneratorDerived.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a32fc9178e135f19bfec89e41532d242e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at::register_cuda_types</definition>
        <argsstring>(Context *context)</argsstring>
        <name>register_cuda_types</name>
        <param>
          <type><ref refid="classat_1_1_context" kindref="compound">Context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/RegisterCUDA.h" line="8" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aba9ff6eb8824260434184c22a215f689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::context</definition>
        <argsstring>(context)</argsstring>
        <name>context</name>
        <param>
          <type>context</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/StorageDerived.cpp" line="14" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/StorageDerived.cpp" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1bbae55c872c012de69c9696287eae20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct at::@2</type>
        <definition>struct at::@2 at::Storage</definition>
        <argsstring>(Context *context)</argsstring>
        <name>Storage</name>
        <param>
          <type><ref refid="classat_1_1_context" kindref="compound">Context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/StorageDerived.h" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abb8453006082c2889f6a21af807dbdfd" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t at::elementSize</definition>
        <argsstring>() const final</argsstring>
        <name>elementSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/StorageDerived.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a34f44569e10a050b2d928158ce89ca59" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_type" kindref="compound">Type</ref> &amp;</type>
        <definition>Type&amp; at::type</definition>
        <argsstring>() const final</argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/StorageDerived.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa098faabcd6987820391e1ecb94ce4c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* at::typeString</definition>
        <argsstring>()</argsstring>
        <name>typeString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/StorageDerived.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a772690f128134e0123a5717eea564919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::tensor</definition>
        <argsstring>(tensor)</argsstring>
        <name>tensor</name>
        <param>
          <type>tensor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.cpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad842753a67db22269e7bbc7e3a1795ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct at::@3</type>
        <definition>struct at::@3 at::Tensor</definition>
        <argsstring>(Context *context)</argsstring>
        <name>Tensor</name>
        <param>
          <type><ref refid="classat_1_1_context" kindref="compound">Context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.h" line="5" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3883c4732db39cf5a9c207a03f7defd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const char *</type>
        <definition>const char * at::toString</definition>
        <argsstring>() const override</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.h" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa336df074a8a0416276e1b33028b24e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
        <definition>virtual IntList at::sizes</definition>
        <argsstring>() const override</argsstring>
        <name>sizes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.h" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a15685cef79425962c7faf9eddadfac6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
        <definition>virtual IntList at::strides</definition>
        <argsstring>() const override</argsstring>
        <name>strides</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af5978eac5c36874974d71b0372d9d11d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int64_t</type>
        <definition>virtual int64_t at::dim</definition>
        <argsstring>() const override</argsstring>
        <name>dim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a808edc6fff49fa253e4c905b97d4d7ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
        <definition>virtual Scalar at::localScalar</definition>
        <argsstring>() override</argsstring>
        <name>localScalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1a56a98dc49eee09d378fa6a61de5174" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>virtual void* at::unsafeGetTH</definition>
        <argsstring>(bool retain) override</argsstring>
        <name>unsafeGetTH</name>
        <param>
          <type>bool</type>
          <declname>retain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9a61b9dbd296e358a55689395b7b6877" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="structat_1_1_storage" kindref="compound">Storage</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Storage &gt; at::storage</definition>
        <argsstring>() override</argsstring>
        <name>storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ade73ffa48fd7ea50f06b69fea1fd1d5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void at::release_resources</definition>
        <argsstring>() override</argsstring>
        <name>release_resources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa098faabcd6987820391e1ecb94ce4c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* at::typeString</definition>
        <argsstring>()</argsstring>
        <name>typeString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorDerived.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3cd223dedfad1152798b7119f69e53d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::noop_deleter</definition>
        <argsstring>(void *)</argsstring>
        <name>noop_deleter</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/Type.h" line="38" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/Type.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa211c4ac6a159ee20b90d73238da7a04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct at::@4</type>
        <definition>struct at::@4 at::Type</definition>
        <argsstring>(Context *context)</argsstring>
        <name>Type</name>
        <param>
          <type><ref refid="classat_1_1_context" kindref="compound">Context</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae6a511acfccf39a68bd1bad63fe38975" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ScalarType</type>
        <definition>virtual ScalarType at::scalarType</definition>
        <argsstring>() const override</argsstring>
        <name>scalarType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a81fce8bd882f7448c98d9b8db8a5ce4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Backend</type>
        <definition>virtual Backend at::backend</definition>
        <argsstring>() const override</argsstring>
        <name>backend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae2a0ba7ea70e450d740dfe4412aa6701" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool at::is_cuda</definition>
        <argsstring>() const override</argsstring>
        <name>is_cuda</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8bbd16e1dc6311a5635962ef679aeac0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool at::is_sparse</definition>
        <argsstring>() const override</argsstring>
        <name>is_sparse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7ecd8e745db613d6acbfaaee1f21362c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool at::is_distributed</definition>
        <argsstring>() const override</argsstring>
        <name>is_distributed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a40a1b2fc814fc552c3a6b5e1a5abc56d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="structat_1_1_storage" kindref="compound">Storage</ref> &gt;</type>
        <definition>virtual std::unique_ptr&lt;Storage&gt; at::storage</definition>
        <argsstring>(size_t size) const override</argsstring>
        <name>storage</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac8bd325fe792d821969ceb2e0cc68315" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="structat_1_1_storage" kindref="compound">Storage</ref> &gt;</type>
        <definition>virtual std::unique_ptr&lt;Storage&gt; at::storageFromBlob</definition>
        <argsstring>(void *data, int64_t size, const std::function&lt; void(void *)&gt; &amp;deleter) const override</argsstring>
        <name>storageFromBlob</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const std::function&lt; void(void *)&gt; &amp;</type>
          <declname>deleter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acadb6620fb7e43b0be5475adc4f7cfbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="structat_1_1_storage" kindref="compound">Storage</ref> &gt;</type>
        <definition>virtual std::unique_ptr&lt;Storage&gt; at::storageWithAllocator</definition>
        <argsstring>(int64_t size, Allocator *allocator) const override</argsstring>
        <name>storageWithAllocator</name>
        <param>
          <type>int64_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_allocator" kindref="compound">Allocator</ref> *</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af202f29e318ae564bccdef263f5198bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="structat_1_1_generator" kindref="compound">Generator</ref> &gt;</type>
        <definition>virtual std::unique_ptr&lt;Generator&gt; at::generator</definition>
        <argsstring>() const override</argsstring>
        <name>generator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a710068dc1f4ea41438a1db8efc6514f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t at::elementSizeInBytes</definition>
        <argsstring>() const override</argsstring>
        <name>elementSizeInBytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab6af88e743b28d01289ff804478b6a4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>TypeID</type>
        <definition>virtual TypeID at::ID</definition>
        <argsstring>() const override</argsstring>
        <name>ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa098faabcd6987820391e1ecb94ce4c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* at::typeString</definition>
        <argsstring>()</argsstring>
        <name>typeString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a14fb123784ab13e057637fbeb31409c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="structat_1_1_storage" kindref="compound">Storage</ref> &gt;</type>
        <definition>virtual std::unique_ptr&lt;Storage&gt; at::unsafeStorageFromTH</definition>
        <argsstring>(void *th_pointer, bool retain) const override</argsstring>
        <name>unsafeStorageFromTH</name>
        <param>
          <type>void *</type>
          <declname>th_pointer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>retain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adce8d1eacf293e11af392e1bd388c77c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>virtual Tensor at::unsafeTensorFromTH</definition>
        <argsstring>(void *th_pointer, bool retain) const override</argsstring>
        <name>unsafeTensorFromTH</name>
        <param>
          <type>void *</type>
          <declname>th_pointer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>retain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a50df38b716df205432ae858f4b724f60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>virtual Tensor&amp; at::s_copy_</definition>
        <argsstring>(Tensor &amp;self, const Tensor &amp;src, bool non_blocking) const override</argsstring>
        <name>s_copy_</name>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>non_blocking</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9e3bb483ac48739c6347dfcadc150db0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
        <definition>virtual Tensor&amp; at::_s_copy_from</definition>
        <argsstring>(const Tensor &amp;self, Tensor &amp;dst, bool non_blocking) const override</argsstring>
        <name>_s_copy_from</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>non_blocking</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TypeDerived.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac0b58e8d71c41461c79d5b08905def23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator+</definition>
        <argsstring>(const Tensor &amp;x, const Tensor &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af4f453358b4bfa7b2606e96fc4b88d22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator+</definition>
        <argsstring>(const Tensor &amp;x, Scalar y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a77a155c38b0cdb9f795899b3809d156a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator+</definition>
        <argsstring>(Scalar x, const Tensor &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8e0179e6d86753068cf897e59e15673e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator*</definition>
        <argsstring>(const Tensor &amp;x, const Tensor &amp;y)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae5d33be1e06282e5cb6fc1e3ea2cd880" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator*</definition>
        <argsstring>(const Tensor &amp;x, Scalar y)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af975ccd418f482b762da3a054d723e8a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator*</definition>
        <argsstring>(Scalar x, const Tensor &amp;y)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab0192c8151de9936477e2ec7e0e88cdf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator-</definition>
        <argsstring>(const Tensor &amp;x, const Tensor &amp;y)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a747654173ae6386e693e808000b11f4d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator-</definition>
        <argsstring>(const Tensor &amp;x, Scalar y)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7bbc4e774ff2d3f6321c2d5e38d32a36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator-</definition>
        <argsstring>(Scalar x, const Tensor &amp;y)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a034655efefeacbff8be403fc284bd310" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator/</definition>
        <argsstring>(const Tensor &amp;x, const Tensor &amp;y)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac5ca89336e06a022cff2ebd698ad773f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator/</definition>
        <argsstring>(const Tensor &amp;x, Scalar y)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0e4c2677dabc1946c043b9620d8b75b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator/</definition>
        <argsstring>(Scalar x, const Tensor &amp;y)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a28b62766d03c018572d231b8cf077a2e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator%</definition>
        <argsstring>(const Tensor &amp;x, const Tensor &amp;y)</argsstring>
        <name>operator%</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1addf2fe4ef0453b52fb09fa3a567dab5b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator%</definition>
        <argsstring>(const Tensor &amp;x, Scalar y)</argsstring>
        <name>operator%</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7036895ec634ad21e3c186440e3aa6aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator%</definition>
        <argsstring>(Scalar x, const Tensor &amp;y)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ad33f3815820d231ad070b2cb02e89d6f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator&lt;</definition>
        <argsstring>(const Tensor &amp;x, const Tensor &amp;y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0a7ead2d96d41c3f9f1fd263ec961cc3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator&lt;</definition>
        <argsstring>(const Tensor &amp;x, Scalar y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a87dbb6086a46ba29b47813c255fbdb3e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator&lt;</definition>
        <argsstring>(Scalar x, const Tensor &amp;y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab4428f3d3fbcc7cf74fe7825a40764cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator&lt;=</definition>
        <argsstring>(const Tensor &amp;x, const Tensor &amp;y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abcd5a28122b9daf3ae3aa87e56a4d27c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator&lt;=</definition>
        <argsstring>(const Tensor &amp;x, Scalar y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a66c19ae43fe22986177cfc2dfbf94a0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator&lt;=</definition>
        <argsstring>(Scalar x, const Tensor &amp;y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4014ed4f9131c804ac5d0d8bfb67d683" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator&gt;</definition>
        <argsstring>(const Tensor &amp;x, const Tensor &amp;y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a494b9ab0e01345f8adbad37a5b962b54" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator&gt;</definition>
        <argsstring>(const Tensor &amp;x, Scalar y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aafb65ce524fa93c5ecc60a4c9521dfbc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator&gt;</definition>
        <argsstring>(Scalar x, const Tensor &amp;y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3e1dcc8a39ba03ef86a815d4456e12b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator&gt;=</definition>
        <argsstring>(const Tensor &amp;x, const Tensor &amp;y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af6d340188ab013518f2046d6bc2ebd41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator&gt;=</definition>
        <argsstring>(const Tensor &amp;x, Scalar y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab6351c460a9522953b926c730fb9a57e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator&gt;=</definition>
        <argsstring>(Scalar x, const Tensor &amp;y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aba67581df39de5ae1942862c32bb3657" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator==</definition>
        <argsstring>(const Tensor &amp;x, const Tensor &amp;y)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4279f5fee2def1ca536904fd7a1f6bc4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator==</definition>
        <argsstring>(const Tensor &amp;x, Scalar y)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a4d7df4b7c238bd0b1015be21e4e4091e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator==</definition>
        <argsstring>(Scalar x, const Tensor &amp;y)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adf06ee5070327d063f1b58e2041a1457" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator!=</definition>
        <argsstring>(const Tensor &amp;x, const Tensor &amp;y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac25f40fc05d5f95f16299798cdeb2927" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator!=</definition>
        <argsstring>(const Tensor &amp;x, Scalar y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acf48dae5c13827c4ab3bfd5c5bb5cf68" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref></type>
        <definition>static Tensor at::operator!=</definition>
        <argsstring>(Scalar x, const Tensor &amp;y)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="classat_1_1_scalar" kindref="compound">Scalar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" line="89" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOperators.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a25549deef81727b261b7b298eb848197" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref></type>
        <definition>TensorOptions at::dtype</definition>
        <argsstring>(ScalarType dtype)</argsstring>
        <name>dtype</name>
        <param>
          <type>ScalarType</type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function that returns a <computeroutput><ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref></computeroutput> object with the <computeroutput>dtype</computeroutput> set to the given one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOptions.h" line="212" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOptions.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a77ae26eb5b3908e51a7cd9b6bb69d265" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref></type>
        <definition>TensorOptions at::layout</definition>
        <argsstring>(Layout layout)</argsstring>
        <name>layout</name>
        <param>
          <type>Layout</type>
          <declname>layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function that returns a <computeroutput><ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref></computeroutput> object with the <computeroutput>layout</computeroutput> set to the given one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOptions.h" line="218" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOptions.h" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7b0b366b175733b3ff709ceed5058911" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref></type>
        <definition>TensorOptions at::device</definition>
        <argsstring>(Device device)</argsstring>
        <name>device</name>
        <param>
          <type><ref refid="structat_1_1_device" kindref="compound">Device</ref></type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function that returns a <computeroutput><ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref></computeroutput> object with the <computeroutput>device</computeroutput> set to the given one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOptions.h" line="224" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOptions.h" bodystart="224" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a562dbafa8baf6a2724b3747e2008b206" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref></type>
        <definition>TensorOptions at::device_index</definition>
        <argsstring>(int32_t device_index)</argsstring>
        <name>device_index</name>
        <param>
          <type>int32_t</type>
          <declname>device_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function that returns a <computeroutput><ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref></computeroutput> object with the <computeroutput>device_index</computeroutput> set to the given one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOptions.h" line="230" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOptions.h" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0ec437861d65a58ca5118c6493967d16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref></type>
        <definition>TensorOptions at::requires_grad</definition>
        <argsstring>(bool requires_grad=true)</argsstring>
        <name>requires_grad</name>
        <param>
          <type>bool</type>
          <declname>requires_grad</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience function that returns a <computeroutput><ref refid="structat_1_1_tensor_options" kindref="compound">TensorOptions</ref></computeroutput> object with the <computeroutput>requires_grad</computeroutput> set to the given one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOptions.h" line="236" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorOptions.h" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a211a5f3818aa8353ab28b0b0a98f518f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>AT_API std::ostream &amp; at::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, TensorGeometryArg t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="11" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="11" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1bd640968cf94bb2ae4eadfe76329853" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkDim</definition>
        <argsstring>(CheckedFrom c, const TensorGeometryArg &amp;t, int64_t dim)</argsstring>
        <name>checkDim</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="22" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab4ae95961983ba544f0363431e29bf1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkDimRange</definition>
        <argsstring>(CheckedFrom c, const TensorGeometryArg &amp;t, int64_t dim_start, int64_t dim_end)</argsstring>
        <name>checkDimRange</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="28" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="28" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab73b093ed63583816c22be5328c0e9bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkContiguous</definition>
        <argsstring>(CheckedFrom c, const TensorGeometryArg &amp;t)</argsstring>
        <name>checkContiguous</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="36" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae8f5706eef53b74786bdf49ebb399781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkAllContiguous</definition>
        <argsstring>(CheckedFrom c, at::ArrayRef&lt; TensorArg &gt; ts)</argsstring>
        <name>checkAllContiguous</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">at::ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &gt;</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="43" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a38efc62bb7cdf2b36e147bfc55e9ce39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkSize</definition>
        <argsstring>(CheckedFrom c, const TensorGeometryArg &amp;t, IntList sizes)</argsstring>
        <name>checkSize</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="50" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="50" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a196d1e12c42bf628688011b1bc996bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkSize</definition>
        <argsstring>(CheckedFrom c, const TensorGeometryArg &amp;t, int64_t dim, int64_t size)</argsstring>
        <name>checkSize</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="58" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="58" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a1ddd0a02144b1ae51a122b4cce463942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at::checkAllSame</definition>
        <argsstring>(CheckedFrom c, ArrayRef&lt; TensorArg &gt; tensors, void(*fn)(CheckedFrom, const TensorArg &amp;, const TensorArg &amp;))</argsstring>
        <name>checkAllSame</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &gt;</type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>void(*)(CheckedFrom, const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;, const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;)</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="66" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="66" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abf52a06936bca41cd1931c7038662181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkSameSize</definition>
        <argsstring>(CheckedFrom c, const TensorArg &amp;t1, const TensorArg &amp;t2)</argsstring>
        <name>checkSameSize</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="78" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="78" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a19cf5981bdb87f68e312d4eea95acf7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at::checkAllSameSize</definition>
        <argsstring>(CheckedFrom c, ArrayRef&lt; TensorArg &gt; tensors)</argsstring>
        <name>checkAllSameSize</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &gt;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="86" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a0d7f0c146fafa8273fdf91bd094b2073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkNumel</definition>
        <argsstring>(CheckedFrom c, const TensorGeometryArg &amp;t, int64_t numel)</argsstring>
        <name>checkNumel</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="90" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="90" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2185b5ba2a749a1044d158d6baf41fc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at::checkSameNumel</definition>
        <argsstring>(CheckedFrom c, const TensorArg &amp;t1, const TensorArg &amp;t2)</argsstring>
        <name>checkSameNumel</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="98" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="98" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a7b5d0a34e91d9670002c5eb65522a2cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkAllSameNumel</definition>
        <argsstring>(CheckedFrom c, ArrayRef&lt; TensorArg &gt; tensors)</argsstring>
        <name>checkAllSameNumel</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &gt;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="107" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ac51aa00218d6c07845aed0a4e25240df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkSameGPU</definition>
        <argsstring>(CheckedFrom c, const TensorArg &amp;t1, const TensorArg &amp;t2)</argsstring>
        <name>checkSameGPU</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="111" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="111" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9b1c6ca5d8ac5a04f1e12eaf2227f344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkAllSameGPU</definition>
        <argsstring>(CheckedFrom c, ArrayRef&lt; TensorArg &gt; tensors)</argsstring>
        <name>checkAllSameGPU</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &gt;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="131" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a113908cf9723a9ad5cea0a805e1aa3a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkSameType</definition>
        <argsstring>(CheckedFrom c, const TensorArg &amp;t1, const TensorArg &amp;t2)</argsstring>
        <name>checkSameType</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="135" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="135" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1adcad2ffd5f51a1c75effac0b2b8f4919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkScalarType</definition>
        <argsstring>(CheckedFrom c, const TensorArg &amp;t, ScalarType ty)</argsstring>
        <name>checkScalarType</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>ScalarType</type>
          <declname>ty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="143" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="143" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a79710d961adcb0e2e79dbd3ec7213d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkScalarTypes</definition>
        <argsstring>(CheckedFrom c, const TensorArg &amp;t, at::ArrayRef&lt; ScalarType &gt; l)</argsstring>
        <name>checkScalarTypes</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">at::ArrayRef</ref>&lt; ScalarType &gt;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="151" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="151" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a02cbf369492479ade5dc97e4e7be5e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkAllSameType</definition>
        <argsstring>(CheckedFrom c, ArrayRef&lt; TensorArg &gt; tensors)</argsstring>
        <name>checkAllSameType</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &gt;</type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="171" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a51a42315aaf88260255a2bc73f0afbb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkSameDim</definition>
        <argsstring>(CheckedFrom c, const TensorGeometryArg &amp;t1, const TensorGeometryArg &amp;t2)</argsstring>
        <name>checkSameDim</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="175" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="175" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1acf99fdaf481131f847b6585086978b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkDefined</definition>
        <argsstring>(CheckedFrom c, const TensorArg &amp;t)</argsstring>
        <name>checkDefined</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="183" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="183" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a360767d723b50d41d9cccebbe9733120" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkAllDefined</definition>
        <argsstring>(CheckedFrom c, ArrayRef&lt; TensorArg &gt; ts)</argsstring>
        <name>checkAllDefined</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &gt;</type>
          <declname>ts</declname>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="190" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="190" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a005a8af1d149c266e024b22d6cfb5c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at::checkBackend</definition>
        <argsstring>(CheckedFrom c, const Tensor &amp;t, Backend backend)</argsstring>
        <name>checkBackend</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="197" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="197" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a00c7bc7dd8cfa6bf8f71194837477a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>AT_API void at::checkBackend</definition>
        <argsstring>(CheckedFrom c, ArrayRef&lt; Tensor &gt; tensors, at::Backend backend)</argsstring>
        <name>checkBackend</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &gt;</type>
          <declname>tensors</declname>
          <defname>t</defname>
        </param>
        <param>
          <type>at::Backend</type>
          <declname>backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="205" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="205" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5af263cdbe58a1d8ac1b56756b49d941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>AT_API void * at::maybe_data_ptr</definition>
        <argsstring>(const Tensor &amp;tensor)</argsstring>
        <name>maybe_data_ptr</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor" kindref="compound">Tensor</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="211" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a2ae095b1580277c9a3fbc13d934894c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>AT_API void * at::maybe_data_ptr</definition>
        <argsstring>(const TensorArg &amp;tensor)</argsstring>
        <name>maybe_data_ptr</name>
        <param>
          <type>const <ref refid="structat_1_1_tensor_arg" kindref="compound">TensorArg</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" line="215" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.cpp" bodystart="215" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a54f3b1861d6bc8cda921b0068493fb79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AT_API void</type>
        <definition>AT_API void at::checkSameNumel</definition>
        <argsstring>(CheckedFrom c, const TensorGeometryArg &amp;t1, const TensorGeometryArg &amp;t2)</argsstring>
        <name>checkSameNumel</name>
        <param>
          <type>CheckedFrom</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="structat_1_1_tensor_geometry_arg" kindref="compound">TensorGeometryArg</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/TensorUtils.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ab063bbf88f956ef653ab7c30f4c73da6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>AT_API int at::_crash_if_asan</definition>
        <argsstring>(int arg)</argsstring>
        <name>_crash_if_asan</name>
        <param>
          <type>int</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.cpp" line="9" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.cpp" bodystart="9" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1af258a216611f9ad280b6025409e2bb84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Base</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>static T* at::checked_cast_storage</definition>
        <argsstring>(Base *expr, const char *name, int pos)</argsstring>
        <name>checked_cast_storage</name>
        <param>
          <type>Base *</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.h" line="26" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.h" bodystart="26" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a8f0c97356da106c45f1588ab20aa0a9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Base</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* at::checked_cast_tensor</definition>
        <argsstring>(Base *expr, const char *name, int pos, bool allowNull)</argsstring>
        <name>checked_cast_tensor</name>
        <param>
          <type>Base *</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allowNull</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.h" line="34" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.h" bodystart="34" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1ae36bf83a84a1ca6a17d16ee1f3a0d6ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename TBase</type>
          </param>
          <param>
            <type>typename TH</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; TH * &gt;</type>
        <definition>static std::vector&lt;TH*&gt; at::tensor_list_checked_cast</definition>
        <argsstring>(ArrayRef&lt; TBase &gt; tensors, const char *name, int pos)</argsstring>
        <name>tensor_list_checked_cast</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; TBase &gt;</type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.h" line="46" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.h" bodystart="46" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abcf0e826c8975c679ce8c2f2b961e390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::array&lt; int64_t, N &gt;</type>
        <definition>std::array&lt;int64_t, N&gt; at::check_intlist</definition>
        <argsstring>(ArrayRef&lt; int64_t &gt; list, const char *name, int pos, ArrayRef&lt; int64_t &gt; def={})</argsstring>
        <name>check_intlist</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
          <declname>list</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
          <declname>def</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.h" line="63" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.h" bodystart="63" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aab635e83d0f9c2d13663378ef0ce47b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::sum_intlist</definition>
        <argsstring>(ArrayRef&lt; int64_t &gt; list)</argsstring>
        <name>sum_intlist</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.h" line="79" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a5adb36bed5897d8bf890e48474dd590f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t at::prod_intlist</definition>
        <argsstring>(ArrayRef&lt; int64_t &gt; list)</argsstring>
        <name>prod_intlist</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">ArrayRef</ref>&lt; int64_t &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.h" line="83" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/Utils.h" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a45c2b8b90ba683ca33df36063ff179c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::maybe_wrap_dim</definition>
        <argsstring>(int64_t dim, int64_t dim_post_expr, bool wrap_scalar=true)</argsstring>
        <name>maybe_wrap_dim</name>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_post_expr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap_scalar</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" line="8" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" bodystart="8" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a9fe11bb0d275a5f095309bddd597491b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::maybe_wrap_dim</definition>
        <argsstring>(int64_t dim, TensorImpl *tensor)</argsstring>
        <name>maybe_wrap_dim</name>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="structat_1_1_tensor_impl" kindref="compound">TensorImpl</ref> *</type>
          <declname>tensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" line="28" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a01ffcc43cb09b1fd6463c402c8b2dfcd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::maybe_wrap_dim</definition>
        <argsstring>(int64_t dim, TensorList tensors)</argsstring>
        <name>maybe_wrap_dim</name>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" line="32" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" bodystart="32" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a3358207183c9b9691d47736317986530" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::maybe_wrap_dim</definition>
        <argsstring>(int64_t dim, const std::vector&lt; std::vector&lt; int64_t &gt;&gt; &amp;tensor_sizes)</argsstring>
        <name>maybe_wrap_dim</name>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int64_t &gt;&gt; &amp;</type>
          <declname>tensor_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" line="40" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" bodystart="40" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1abc56f4732c9ad35b591ce33e68fd67d2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void at::maybe_wrap_dims</definition>
        <argsstring>(std::vector&lt; int64_t &gt; &amp;dims, int64_t dim_post_expr)</argsstring>
        <name>maybe_wrap_dims</name>
        <param>
          <type>std::vector&lt; int64_t &gt; &amp;</type>
          <declname>dims</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>dim_post_expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" line="49" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" bodystart="49" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1aa21d743684f74838d6ab4cf589e0f992" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::legacy_cat_wrap_dim</definition>
        <argsstring>(int64_t dim, const std::vector&lt; std::vector&lt; int64_t &gt;&gt; &amp;tensor_sizes)</argsstring>
        <name>legacy_cat_wrap_dim</name>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; int64_t &gt;&gt; &amp;</type>
          <declname>tensor_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" line="69" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" bodystart="69" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1addeeac7c1438ecf2238847ef80389619" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>static int64_t at::legacy_cat_wrap_dim</definition>
        <argsstring>(int64_t dim, TensorList tensors)</argsstring>
        <name>legacy_cat_wrap_dim</name>
        <param>
          <type>int64_t</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">TensorList</ref></type>
          <declname>tensors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" line="79" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtils.h" bodystart="79" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespaceat_1a6399888a29571ba42c83797032894c0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::bitset&lt; dim_bitset_size &gt;</type>
        <definition>static std::bitset&lt;dim_bitset_size&gt; at::dim_list_to_bitset</definition>
        <argsstring>(IntList dims, int64_t ndims, bool wrap_scalar=true)</argsstring>
        <name>dim_list_to_bitset</name>
        <param>
          <type><ref refid="classat_1_1_array_ref" kindref="compound">IntList</ref></type>
          <declname>dims</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>ndims</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap_scalar</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtilsMulti.h" line="15" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/WrapDimUtilsMulti.h" bodystart="15" bodyend="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Simple registry implementation that uses static variables to register object creators during program initialization time. </para>    </detaileddescription>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/build/aten/src/ATen/Tensor.h" line="18" column="1"/>
  </compounddef>
</doxygen>
