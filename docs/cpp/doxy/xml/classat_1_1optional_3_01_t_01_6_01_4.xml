<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classat_1_1optional_3_01_t_01_6_01_4" kind="class" language="C++" prot="public">
    <compoundname>at::optional&lt; T &amp; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classat_1_1optional_3_01_t_01_6_01_4_1a8b43f21c5e28621f09bb9ef34f48780a" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* at::optional&lt; T &amp; &gt;::ref</definition>
        <argsstring></argsstring>
        <name>ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="544" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1a8c7ae5405fc1f8de5c0a2864b50bc816" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr at::optional&lt; T &amp; &gt;::optional</definition>
        <argsstring>() noexcept</argsstring>
        <name>optional</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="549" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="549" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1af4e3cb9e4637cb3f28501d48375d122f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr at::optional&lt; T &amp; &gt;::optional</definition>
        <argsstring>(nullopt_t) noexcept</argsstring>
        <name>optional</name>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="551" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="551" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1aef4c1d32b8ec70b217ec5a6e7ba489e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr at::optional&lt; T &amp; &gt;::optional</definition>
        <argsstring>(T &amp;v) noexcept</argsstring>
        <name>optional</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="553" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="553" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1a42b4a813857f462a91ae8f25fc00dcfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::optional&lt; T &amp; &gt;::optional</definition>
        <argsstring>(T &amp;&amp;)=delete</argsstring>
        <name>optional</name>
        <param>
          <type>T &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="555" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1ada23711e6f6a7e4fef244769962a6550" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr at::optional&lt; T &amp; &gt;::optional</definition>
        <argsstring>(const optional &amp;rhs) noexcept</argsstring>
        <name>optional</name>
        <param>
          <type>const <ref refid="classat_1_1optional" kindref="compound">optional</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="557" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="557" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1aee9a5b70666c09dc19b33d1bfe3ba8e2" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr at::optional&lt; T &amp; &gt;::optional</definition>
        <argsstring>(in_place_t, T &amp;v) noexcept</argsstring>
        <name>optional</name>
        <param>
          <type><ref refid="structat_1_1in__place__t" kindref="compound">in_place_t</ref></type>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="559" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="559" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1a830f395c475c4618d013ac0e65309f20" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::optional&lt; T &amp; &gt;::optional</definition>
        <argsstring>(in_place_t, T &amp;&amp;)=delete</argsstring>
        <name>optional</name>
        <param>
          <type><ref refid="structat_1_1in__place__t" kindref="compound">in_place_t</ref></type>
        </param>
        <param>
          <type>T &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="561" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1a548d918f1005640a5058ea81792c63e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>at::optional&lt; T &amp; &gt;::~optional</definition>
        <argsstring>()=default</argsstring>
        <name>~optional</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="563" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1a80f645231f7e283d801319b6ee6fc76e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classat_1_1optional" kindref="compound">optional</ref> &amp;</type>
        <definition>optional&amp; at::optional&lt; T &amp; &gt;::operator=</definition>
        <argsstring>(nullopt_t) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structat_1_1nullopt__t" kindref="compound">nullopt_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="566" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="566" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1ab1aa0ec73de46049374ff0aaf56f475e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto at::optional&lt; T &amp; &gt;::operator=</definition>
        <argsstring>(U &amp;&amp;rhs) noexcept -&gt; typename std::enable_if&lt; std::is_same&lt; typename std::decay&lt; U &gt;::type, optional&lt; T &amp;&gt;&gt;::value, optional &amp;&gt;::type</argsstring>
        <name>operator=</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="582" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="582" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1aaeecf2a3cebb3109315a015bd6f0fb22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto at::optional&lt; T &amp; &gt;::operator=</definition>
        <argsstring>(U &amp;&amp;rhs) noexcept -&gt; typename std::enable_if&lt; !std::is_same&lt; typename std::decay&lt; U &gt;::type, optional&lt; T &amp;&gt;&gt;::value, optional &amp;&gt;::type=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="594" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1a3d2cb7116f87fbf0a3439fefff7b6169" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::optional&lt; T &amp; &gt;::emplace</definition>
        <argsstring>(T &amp;v) noexcept</argsstring>
        <name>emplace</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="602" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="602" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1ad2a4dbcfcdad1328bf1df29b78196463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void at::optional&lt; T &amp; &gt;::emplace</definition>
        <argsstring>(T &amp;&amp;)=delete</argsstring>
        <name>emplace</name>
        <param>
          <type>T &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="606" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1a4fb04d3b041e9821fd76520463ba71a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::optional&lt; T &amp; &gt;::swap</definition>
        <argsstring>(optional&lt; T &amp;&gt; &amp;rhs) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classat_1_1optional" kindref="compound">optional</ref>&lt; T &amp;&gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="609" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="609" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1ac2d321c08e59e88609a1e08a01af39a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr T *</type>
        <definition>constexpr T* at::optional&lt; T &amp; &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="615" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="615" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1a5f96b86fe72d234191b78ee880b846a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr T &amp;</type>
        <definition>constexpr T&amp; at::optional&lt; T &amp; &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="619" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="619" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1ae1479d3e9812e059e87bf2d2263314ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr T &amp;</type>
        <definition>constexpr T&amp; at::optional&lt; T &amp; &gt;::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="623" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="623" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1ae124036c9469a987c1ce8f043693c323" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr at::optional&lt; T &amp; &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="627" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="627" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1af0bfd3b40f229ba1f2016b2467e4584c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool at::optional&lt; T &amp; &gt;::has_value</definition>
        <argsstring>() const noexcept</argsstring>
        <name>has_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="631" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="631" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1a0c31c4d8dc0d7120eb1491510977dfaa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
        </templateparamlist>
        <type>constexpr std::decay&lt; T &gt;::type</type>
        <definition>constexpr std::decay&lt;T&gt;::type at::optional&lt; T &amp; &gt;::value_or</definition>
        <argsstring>(V &amp;&amp;v) const</argsstring>
        <name>value_or</name>
        <param>
          <type>V &amp;&amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="636" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="636" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="classat_1_1optional_3_01_t_01_6_01_4_1a61c9b4a3b0f584101e15c2ff17104a16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void at::optional&lt; T &amp; &gt;::reset</definition>
        <argsstring>() noexcept</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="642" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="642" bodyend="642"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" line="541" column="1" bodyfile="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/optional.h" bodystart="540" bodyend="643"/>
    <listofallmembers>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1a3d2cb7116f87fbf0a3439fefff7b6169" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>emplace</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1ad2a4dbcfcdad1328bf1df29b78196463" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>emplace</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1af0bfd3b40f229ba1f2016b2467e4584c" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>has_value</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1ae124036c9469a987c1ce8f043693c323" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>operator bool</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1a5f96b86fe72d234191b78ee880b846a9" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>operator*</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1ac2d321c08e59e88609a1e08a01af39a7" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>operator-&gt;</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1a80f645231f7e283d801319b6ee6fc76e" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>operator=</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1ab1aa0ec73de46049374ff0aaf56f475e" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>operator=</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1aaeecf2a3cebb3109315a015bd6f0fb22" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>operator=</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1a8c7ae5405fc1f8de5c0a2864b50bc816" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>optional</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1af4e3cb9e4637cb3f28501d48375d122f" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>optional</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1aef4c1d32b8ec70b217ec5a6e7ba489e2" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>optional</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1a42b4a813857f462a91ae8f25fc00dcfa" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>optional</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1ada23711e6f6a7e4fef244769962a6550" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>optional</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1aee9a5b70666c09dc19b33d1bfe3ba8e2" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>optional</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1a830f395c475c4618d013ac0e65309f20" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>optional</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1a8b43f21c5e28621f09bb9ef34f48780a" prot="private" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>ref</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1a61c9b4a3b0f584101e15c2ff17104a16" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>reset</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1a4fb04d3b041e9821fd76520463ba71a5" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>swap</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1ae1479d3e9812e059e87bf2d2263314ef" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>value</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1a0c31c4d8dc0d7120eb1491510977dfaa" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>value_or</name></member>
      <member refid="classat_1_1optional_3_01_t_01_6_01_4_1a548d918f1005640a5058ea81792c63e9" prot="public" virt="non-virtual"><scope>at::optional&lt; T &amp; &gt;</scope><name>~optional</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
