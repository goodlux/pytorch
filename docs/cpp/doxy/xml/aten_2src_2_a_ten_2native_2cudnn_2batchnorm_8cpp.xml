<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="aten_2src_2_a_ten_2native_2cudnn_2batchnorm_8cpp" kind="file" language="C++">
    <compoundname>BatchNorm.cpp</compoundname>
    <includes refid="_a_ten_8h" local="no">ATen/ATen.h</includes>
    <includes local="no">ATen/NativeFunctions.h</includes>
    <includes refid="_config_8h" local="no">ATen/Config.h</includes>
    <includes refid="_c_u_d_a_config_8h" local="no">ATen/cuda/CUDAConfig.h</includes>
    <incdepgraph>
      <node id="18006">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="18007" relation="include">
        </childnode>
        <childnode refid="18008" relation="include">
        </childnode>
        <childnode refid="18009" relation="include">
        </childnode>
        <childnode refid="18010" relation="include">
        </childnode>
        <childnode refid="18011" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18013" relation="include">
        </childnode>
      </node>
      <node id="18052">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="18002" relation="include">
        </childnode>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18053" relation="include">
        </childnode>
        <childnode refid="18014" relation="include">
        </childnode>
        <childnode refid="18011" relation="include">
        </childnode>
        <childnode refid="18003" relation="include">
        </childnode>
      </node>
      <node id="18020">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18021" relation="include">
        </childnode>
        <childnode refid="18014" relation="include">
        </childnode>
        <childnode refid="18036" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18011" relation="include">
        </childnode>
      </node>
      <node id="18019">
        <label>atomic</label>
      </node>
      <node id="18011">
        <label>functional</label>
      </node>
      <node id="18057">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="18014" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18047" relation="include">
        </childnode>
        <childnode refid="18000" relation="include">
        </childnode>
      </node>
      <node id="18021">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="18022" relation="include">
        </childnode>
        <childnode refid="18000" relation="include">
        </childnode>
        <childnode refid="18032" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
      </node>
      <node id="18033">
        <label>limits</label>
      </node>
      <node id="18041">
        <label>assert.h</label>
      </node>
      <node id="18046">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="18000" relation="include">
        </childnode>
        <childnode refid="18022" relation="include">
        </childnode>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18045" relation="include">
        </childnode>
        <childnode refid="18025" relation="include">
        </childnode>
        <childnode refid="18017" relation="include">
        </childnode>
        <childnode refid="18047" relation="include">
        </childnode>
        <childnode refid="18048" relation="include">
        </childnode>
      </node>
      <node id="18028">
        <label>iterator</label>
      </node>
      <node id="18040">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="18041" relation="include">
        </childnode>
        <childnode refid="18042" relation="include">
        </childnode>
        <childnode refid="18013" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18007" relation="include">
        </childnode>
        <childnode refid="18000" relation="include">
        </childnode>
        <childnode refid="18032" relation="include">
        </childnode>
        <childnode refid="18021" relation="include">
        </childnode>
        <childnode refid="18043" relation="include">
        </childnode>
        <childnode refid="18046" relation="include">
        </childnode>
      </node>
      <node id="18060">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="18034">
        <label>cstdint</label>
      </node>
      <node id="18068">
        <label>ATen/Deprecated.h</label>
        <link refid="_deprecated_8h_source"/>
      </node>
      <node id="18042">
        <label>stdint.h</label>
      </node>
      <node id="18079">
        <label>ATen/CUDAGuard.h</label>
        <link refid="_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="18081">
        <label>ATen/cuda/CUDAConfig.h</label>
        <link refid="_c_u_d_a_config_8h_source"/>
      </node>
      <node id="18035">
        <label>cmath</label>
      </node>
      <node id="18010">
        <label>cassert</label>
      </node>
      <node id="18051">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="18000" relation="include">
        </childnode>
        <childnode refid="18001" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18046" relation="include">
        </childnode>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18052" relation="include">
        </childnode>
        <childnode refid="18058" relation="include">
        </childnode>
        <childnode refid="18003" relation="include">
        </childnode>
        <childnode refid="18055" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
      </node>
      <node id="18037">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="18000" relation="include">
        </childnode>
        <childnode refid="18027" relation="include">
        </childnode>
        <childnode refid="18033" relation="include">
        </childnode>
      </node>
      <node id="18013">
        <label>stdexcept</label>
      </node>
      <node id="18074">
        <label>ATen/TensorOperators.h</label>
        <link refid="_tensor_operators_8h_source"/>
        <childnode refid="18040" relation="include">
        </childnode>
        <childnode refid="18061" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18013" relation="include">
        </childnode>
      </node>
      <node id="18048">
        <label>numeric</label>
      </node>
      <node id="18044">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="18019" relation="include">
        </childnode>
        <childnode refid="18003" relation="include">
        </childnode>
        <childnode refid="18018" relation="include">
        </childnode>
        <childnode refid="18021" relation="include">
        </childnode>
        <childnode refid="18006" relation="include">
        </childnode>
      </node>
      <node id="18032">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="18000" relation="include">
        </childnode>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18013" relation="include">
        </childnode>
        <childnode refid="18007" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18036" relation="include">
        </childnode>
        <childnode refid="18037" relation="include">
        </childnode>
      </node>
      <node id="18018">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="18019" relation="include">
        </childnode>
      </node>
      <node id="18043">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="18044" relation="include">
        </childnode>
        <childnode refid="18045" relation="include">
        </childnode>
      </node>
      <node id="18012">
        <label>string</label>
      </node>
      <node id="18077">
        <label>ATen/DimVector.h</label>
        <link refid="_dim_vector_8h_source"/>
        <childnode refid="18023" relation="include">
        </childnode>
        <childnode refid="18042" relation="include">
        </childnode>
      </node>
      <node id="18078">
        <label>ATen/OptionsGuard.h</label>
        <link refid="_options_guard_8h_source"/>
        <childnode refid="18020" relation="include">
        </childnode>
        <childnode refid="18064" relation="include">
        </childnode>
        <childnode refid="18021" relation="include">
        </childnode>
        <childnode refid="18071" relation="include">
        </childnode>
        <childnode refid="18006" relation="include">
        </childnode>
      </node>
      <node id="18080">
        <label>ATen/Config.h</label>
        <link refid="_config_8h_source"/>
      </node>
      <node id="18002">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="18003" relation="include">
        </childnode>
        <childnode refid="18004" relation="include">
        </childnode>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18018" relation="include">
        </childnode>
        <childnode refid="18020" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
      </node>
      <node id="18058">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="18070">
        <label>ATen/DeviceGuard.h</label>
        <link refid="_device_guard_8h_source"/>
        <childnode refid="18020" relation="include">
        </childnode>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18021" relation="include">
        </childnode>
        <childnode refid="18061" relation="include">
        </childnode>
        <childnode refid="18052" relation="include">
        </childnode>
        <childnode refid="18014" relation="include">
        </childnode>
      </node>
      <node id="18015">
        <label>exception</label>
      </node>
      <node id="18004">
        <label>stddef.h</label>
      </node>
      <node id="18045">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="18044" relation="include">
        </childnode>
      </node>
      <node id="18076">
        <label>ATen/Dispatch.h</label>
        <link refid="_dispatch_8h_source"/>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18032" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
      </node>
      <node id="18024">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="18014" relation="include">
        </childnode>
      </node>
      <node id="18059">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="18040" relation="include">
        </childnode>
        <childnode refid="18060" relation="include">
        </childnode>
      </node>
      <node id="18016">
        <label>ostream</label>
      </node>
      <node id="18001">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="18000" relation="include">
        </childnode>
      </node>
      <node id="18049">
        <label>ATen/Type.h</label>
      </node>
      <node id="18022">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18023" relation="include">
        </childnode>
        <childnode refid="18030" relation="include">
        </childnode>
        <childnode refid="18028" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
      </node>
      <node id="18065">
        <label>ATen/TensorGeometry.h</label>
        <link refid="_tensor_geometry_8h_source"/>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18066" relation="include">
        </childnode>
      </node>
      <node id="18062">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="18000">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="18066">
        <label>ATen/WrapDimUtils.h</label>
        <link refid="_wrap_dim_utils_8h_source"/>
        <childnode refid="18044" relation="include">
        </childnode>
        <childnode refid="18017" relation="include">
        </childnode>
      </node>
      <node id="18063">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="18014" relation="include">
        </childnode>
        <childnode refid="18042" relation="include">
        </childnode>
        <childnode refid="18021" relation="include">
        </childnode>
      </node>
      <node id="18047">
        <label>typeinfo</label>
      </node>
      <node id="18054">
        <label>cstdio</label>
      </node>
      <node id="18039">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="18003" relation="include">
        </childnode>
        <childnode refid="18000" relation="include">
        </childnode>
      </node>
      <node id="18031">
        <label>vector</label>
      </node>
      <node id="18075">
        <label>ATen/TensorMethods.h</label>
      </node>
      <node id="18072">
        <label>THNN/Reduction.h</label>
      </node>
      <node id="18029">
        <label>new</label>
      </node>
      <node id="18007">
        <label>utility</label>
      </node>
      <node id="18030">
        <label>array</label>
      </node>
      <node id="18017">
        <label>sstream</label>
      </node>
      <node id="18067">
        <label>ATen/Functions.h</label>
        <link refid="build_2aten_2src_2_a_ten_2_functions_8h_source"/>
        <childnode refid="18040" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18061" relation="include">
        </childnode>
        <childnode refid="18059" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18068" relation="include">
        </childnode>
        <childnode refid="18069" relation="include">
        </childnode>
        <childnode refid="18070" relation="include">
        </childnode>
        <childnode refid="18071" relation="include">
        </childnode>
        <childnode refid="18072" relation="include">
        </childnode>
      </node>
      <node id="18069">
        <label>ATen/NativeFunctions.h</label>
      </node>
      <node id="17998">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/BatchNorm.cpp</label>
        <link refid="aten_2src_2_a_ten_2native_2cudnn_2batchnorm_8cpp"/>
        <childnode refid="17999" relation="include">
        </childnode>
        <childnode refid="18069" relation="include">
        </childnode>
        <childnode refid="18080" relation="include">
        </childnode>
        <childnode refid="18081" relation="include">
        </childnode>
      </node>
      <node id="18036">
        <label>iosfwd</label>
      </node>
      <node id="18026">
        <label>cstdlib</label>
      </node>
      <node id="18038">
        <label>iostream</label>
      </node>
      <node id="18014">
        <label>cstddef</label>
      </node>
      <node id="18056">
        <label>unordered_map</label>
      </node>
      <node id="18055">
        <label>mutex</label>
      </node>
      <node id="17999">
        <label>ATen/ATen.h</label>
        <link refid="_a_ten_8h_source"/>
        <childnode refid="18000" relation="include">
        </childnode>
        <childnode refid="18001" relation="include">
        </childnode>
        <childnode refid="18002" relation="include">
        </childnode>
        <childnode refid="18040" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18051" relation="include">
        </childnode>
        <childnode refid="18059" relation="include">
        </childnode>
        <childnode refid="18061" relation="include">
        </childnode>
        <childnode refid="18020" relation="include">
        </childnode>
        <childnode refid="18065" relation="include">
        </childnode>
        <childnode refid="18067" relation="include">
        </childnode>
        <childnode refid="18073" relation="include">
        </childnode>
        <childnode refid="18074" relation="include">
        </childnode>
        <childnode refid="18075" relation="include">
        </childnode>
        <childnode refid="18076" relation="include">
        </childnode>
        <childnode refid="18077" relation="include">
        </childnode>
        <childnode refid="18070" relation="include">
        </childnode>
        <childnode refid="18071" relation="include">
        </childnode>
        <childnode refid="18064" relation="include">
        </childnode>
        <childnode refid="18078" relation="include">
        </childnode>
        <childnode refid="18079" relation="include">
        </childnode>
      </node>
      <node id="18053">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="18025" relation="include">
        </childnode>
        <childnode refid="18054" relation="include">
        </childnode>
        <childnode refid="18026" relation="include">
        </childnode>
        <childnode refid="18011" relation="include">
        </childnode>
        <childnode refid="18003" relation="include">
        </childnode>
        <childnode refid="18055" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18057" relation="include">
        </childnode>
        <childnode refid="18000" relation="include">
        </childnode>
      </node>
      <node id="18005">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="18000" relation="include">
        </childnode>
        <childnode refid="18006" relation="include">
        </childnode>
        <childnode refid="18014" relation="include">
        </childnode>
        <childnode refid="18015" relation="include">
        </childnode>
        <childnode refid="18016" relation="include">
        </childnode>
        <childnode refid="18017" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
      </node>
      <node id="18071">
        <label>ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="18051" relation="include">
        </childnode>
        <childnode refid="18020" relation="include">
        </childnode>
        <childnode refid="18070" relation="include">
        </childnode>
        <childnode refid="18064" relation="include">
        </childnode>
        <childnode refid="18021" relation="include">
        </childnode>
        <childnode refid="18061" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18014" relation="include">
        </childnode>
        <childnode refid="18036" relation="include">
        </childnode>
        <childnode refid="18007" relation="include">
        </childnode>
      </node>
      <node id="18061">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18040" relation="include">
        </childnode>
        <childnode refid="18021" relation="include">
        </childnode>
        <childnode refid="18062" relation="include">
        </childnode>
        <childnode refid="18059" relation="include">
        </childnode>
        <childnode refid="18063" relation="include">
        </childnode>
        <childnode refid="18043" relation="include">
        </childnode>
        <childnode refid="18044" relation="include">
        </childnode>
        <childnode refid="18046" relation="include">
        </childnode>
        <childnode refid="18020" relation="include">
        </childnode>
        <childnode refid="18064" relation="include">
        </childnode>
        <childnode refid="18006" relation="include">
        </childnode>
      </node>
      <node id="18008">
        <label>type_traits</label>
      </node>
      <node id="18064">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="18021" relation="include">
        </childnode>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
      </node>
      <node id="18023">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="18024" relation="include">
        </childnode>
        <childnode refid="18025" relation="include">
        </childnode>
        <childnode refid="18010" relation="include">
        </childnode>
        <childnode refid="18014" relation="include">
        </childnode>
        <childnode refid="18026" relation="include">
        </childnode>
        <childnode refid="18027" relation="include">
        </childnode>
        <childnode refid="18009" relation="include">
        </childnode>
        <childnode refid="18028" relation="include">
        </childnode>
        <childnode refid="18003" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
        <childnode refid="18008" relation="include">
        </childnode>
        <childnode refid="18007" relation="include">
        </childnode>
        <childnode refid="18000" relation="include">
        </childnode>
      </node>
      <node id="18025">
        <label>algorithm</label>
      </node>
      <node id="18050">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="18042" relation="include">
        </childnode>
      </node>
      <node id="18027">
        <label>cstring</label>
      </node>
      <node id="18003">
        <label>memory</label>
      </node>
      <node id="18009">
        <label>initializer_list</label>
      </node>
      <node id="18073">
        <label>ATen/Formatting.h</label>
        <link refid="_formatting_8h_source"/>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18040" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceat">at</innernamespace>
    <innernamespace refid="namespaceat_1_1native">at::native</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;ATen/ATen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/NativeFunctions.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/Config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/cuda/CUDAConfig.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!AT_CUDNN_ENABLED()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">native<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>Note<sp/>[ATen<sp/>preprocessor<sp/>philosophy]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">std::tuple&lt;Tensor,<sp/>Tensor,<sp/>Tensor&gt;<sp/>cudnn_batch_norm(</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>input,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>weight,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>bias,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>running_mean,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>running_var,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>training,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exponential_average_factor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;cudnn_batch_norm:<sp/>ATen<sp/>not<sp/>compiled<sp/>with<sp/>cuDNN<sp/>support&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">std::tuple&lt;Tensor,<sp/>Tensor,<sp/>Tensor&gt;<sp/>cudnn_batch_norm_backward(</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>input,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>grad_output,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>weight,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>running_mean,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>running_var,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>save_mean,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>save_var,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;cudnn_batch_norm_backward:<sp/>ATen<sp/>not<sp/>compiled<sp/>with<sp/>cuDNN<sp/>support&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">}}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>at::native</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>AT_CUDNN_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/cudnn/Descriptors.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/cudnn/Types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/cudnn/Utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/cuda/Exceptions.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/TensorUtils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">native<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">Tensor<sp/>expandScale(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>t,<sp/>int64_t<sp/>dim)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>std::vector&lt;int64_t&gt;<sp/>size{<sp/>1,<sp/>t.numel()<sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(static_cast&lt;int64_t&gt;(size.size())<sp/>&lt;<sp/>dim)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>size.emplace_back(1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t.view(size);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">std::tuple&lt;Tensor,<sp/>Tensor,<sp/>Tensor&gt;<sp/>cudnn_batch_norm(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>input_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>weight_t,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>bias_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>running_mean_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>running_var_t,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>training,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exponential_average_factor,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>TensorArg<sp/>input{<sp/>input_t,<sp/></highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight{<sp/>weight_t,<sp/></highlight><highlight class="stringliteral">&quot;weight&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bias{<sp/>bias_t,<sp/></highlight><highlight class="stringliteral">&quot;bias&quot;</highlight><highlight class="normal">,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>running_mean{<sp/>running_mean_t,<sp/></highlight><highlight class="stringliteral">&quot;running_mean&quot;</highlight><highlight class="normal">,<sp/>4<sp/>},</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>running_var{<sp/>running_var_t,<sp/></highlight><highlight class="stringliteral">&quot;running_var&quot;</highlight><highlight class="normal">,<sp/>5<sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>CheckedFrom<sp/>c<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cudnn_batch_norm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>setCuDNNStreamToCurrent();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>checkAllDefined(c,<sp/>{input,<sp/>weight,<sp/>bias});</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!training)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>checkAllDefined(c,<sp/>{running_mean,<sp/>running_var});</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>checkAllSameGPU(c,<sp/>{input,<sp/>weight,<sp/>bias,<sp/>running_mean,<sp/>running_var});</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input-&gt;type().scalarType()<sp/>==<sp/>ScalarType::Half)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>checkScalarType(c,<sp/>weight,<sp/>ScalarType::Float);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>checkAllSameType(c,<sp/>{input,<sp/>weight});</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>checkAllSameType(c,<sp/>{weight,<sp/>bias,<sp/>running_mean,<sp/>running_var});</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>is<sp/>weight<sp/>required<sp/>to<sp/>be<sp/>contiguous?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>checkAllContiguous(c,<sp/>{input,<sp/>weight,<sp/>bias,<sp/>running_mean,<sp/>running_var});</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>checkDimRange(c,<sp/>input,<sp/>2,<sp/>6<sp/></highlight><highlight class="comment">/*<sp/>exclusive<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>num_features<sp/>=<sp/>input-&gt;size(1);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>{weight,<sp/>bias,<sp/>running_mean,<sp/>running_var})<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;defined())<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>checkNumel(c,<sp/>t,<sp/>num_features);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>cudnnBatchNormMode_t<sp/>mode;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input-&gt;dim()<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>CUDNN_BATCHNORM_PER_ACTIVATION;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>CUDNN_BATCHNORM_SPATIAL;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CUDNN_VERSION<sp/>&gt;=<sp/>7003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(training)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>CUDNN_BATCHNORM_SPATIAL_PERSISTENT;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output_t<sp/>=<sp/>input-&gt;type().tensor(input-&gt;sizes());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>TensorArg<sp/>output{<sp/>output_t,<sp/></highlight><highlight class="stringliteral">&quot;output&quot;</highlight><highlight class="normal">,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>handle<sp/>=<sp/>getCudnnHandle();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataType<sp/>=<sp/>getCudnnDataType(*input);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>TensorDescriptor<sp/>idesc{<sp/>*input,<sp/>4<sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>input<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>TensorDescriptor<sp/>wdesc{<sp/>expandScale(*weight,<sp/>input-&gt;dim()),<sp/>4<sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>descriptor<sp/>for<sp/>weight,<sp/>bias,<sp/>running_mean,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>Constant<sp/>one(dataType,<sp/>1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>Constant<sp/>zero(dataType,<sp/>0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>Tensor<sp/>save_mean,<sp/>save_var;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(training)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>num_features<sp/>=<sp/>input_t.size(1);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>save_mean<sp/>=<sp/>weight_t.type().tensor({<sp/>num_features<sp/>});</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>save_var<sp/>=<sp/>weight_t.type().tensor({<sp/>num_features<sp/>});</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnBatchNormalizationForwardTraining(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>handle,<sp/>mode,<sp/>&amp;one,<sp/>&amp;zero,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idesc.desc(),<sp/>input-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idesc.desc(),<sp/>output-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wdesc.desc(),</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weight-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exponential_average_factor,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>at::maybe_data_ptr(running_mean),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>at::maybe_data_ptr(running_var),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>epsilon,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>save_mean.data_ptr(),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>save_var.data_ptr()));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CUDNN_CHECK(cudnnBatchNormalizationForwardInference(</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>handle,<sp/>mode,<sp/>&amp;one,<sp/>&amp;zero,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idesc.desc(),<sp/>input-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idesc.desc(),<sp/>output-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wdesc.desc(),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weight-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>running_mean-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>running_var-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>epsilon));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>save_mean<sp/>and<sp/>save_var<sp/>can<sp/>be<sp/>undefined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>causes<sp/>problems,<sp/>we<sp/>can<sp/>initialize<sp/>them<sp/>to<sp/>empty<sp/>tensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>correct<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tuple&lt;Tensor,<sp/>Tensor,<sp/>Tensor&gt;{output_t,<sp/>save_mean,<sp/>save_var};</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB:<sp/>CuDNN<sp/>only<sp/>implements<sp/>the<sp/>backward<sp/>algorithm<sp/>for<sp/>batchnorm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>training<sp/>mode<sp/>(evaluation<sp/>mode<sp/>batchnorm<sp/>has<sp/>a<sp/>different<sp/>algorithm),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>why<sp/>this<sp/>doesn&apos;t<sp/>accept<sp/>a<sp/>&apos;training&apos;<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">std::tuple&lt;Tensor,<sp/>Tensor,<sp/>Tensor&gt;<sp/>cudnn_batch_norm_backward(</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>input_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>grad_output_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>weight_t,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unused:<sp/>but<sp/>we<sp/>require<sp/>them<sp/>to<sp/>be<sp/>passed<sp/>so<sp/>that<sp/>double<sp/>backwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>running_mean,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>running_var,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>save_mean_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor&amp;<sp/>save_var_t,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>TensorArg<sp/>input{<sp/>input_t,<sp/></highlight><highlight class="stringliteral">&quot;input&quot;</highlight><highlight class="normal">,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grad_output{<sp/>grad_output_t,<sp/></highlight><highlight class="stringliteral">&quot;grad_output&quot;</highlight><highlight class="normal">,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight{<sp/>weight_t,<sp/></highlight><highlight class="stringliteral">&quot;weight&quot;</highlight><highlight class="normal">,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>save_mean{<sp/>save_mean_t,<sp/></highlight><highlight class="stringliteral">&quot;save_mean&quot;</highlight><highlight class="normal">,<sp/>4<sp/>},</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>save_var{<sp/>save_var_t,<sp/></highlight><highlight class="stringliteral">&quot;save_var&quot;</highlight><highlight class="normal">,<sp/>5<sp/>};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>CheckedFrom<sp/>c<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cudnn_batch_norm_backward&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>setCuDNNStreamToCurrent();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>checkAllDefined(c,<sp/>{input,<sp/>grad_output,<sp/>weight,<sp/>save_mean,<sp/>save_var});</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>checkAllSameGPU(c,<sp/>{input,<sp/>grad_output,<sp/>weight,<sp/>save_mean,<sp/>save_var});</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input-&gt;type().scalarType()<sp/>==<sp/>ScalarType::Half)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>checkScalarType(c,<sp/>weight,<sp/>ScalarType::Float);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>checkAllSameType(c,<sp/>{input,<sp/>weight});</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>checkAllSameType(c,<sp/>{input,<sp/>grad_output});</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>checkAllSameType(c,<sp/>{weight,<sp/>save_mean,<sp/>save_var});</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>is<sp/>weight<sp/>required<sp/>to<sp/>be<sp/>contiguous?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>checkAllContiguous(c,<sp/>{input,<sp/>grad_output,<sp/>save_mean,<sp/>save_var});</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>checkDimRange(c,<sp/>input,<sp/>2,<sp/>6<sp/></highlight><highlight class="comment">/*<sp/>exclusive<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>checkSameSize(c,<sp/>input,<sp/>grad_output);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>num_features<sp/>=<sp/>input-&gt;size(1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>:<sp/>{weight,<sp/>save_mean,<sp/>save_var})<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>checkNumel(c,<sp/>t,<sp/>num_features);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>cudnnBatchNormMode_t<sp/>mode;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input-&gt;dim()<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>CUDNN_BATCHNORM_PER_ACTIVATION;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CUDNN_VERSION<sp/>&gt;=<sp/>7003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>CUDNN_BATCHNORM_SPATIAL_PERSISTENT;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>mode<sp/>=<sp/>CUDNN_BATCHNORM_SPATIAL;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>grad_input_t<sp/><sp/>=<sp/>input-&gt;type().tensor(input-&gt;sizes());</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>grad_weight_t<sp/>=<sp/>weight-&gt;type().tensor(weight-&gt;sizes());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>grad_bias_t<sp/><sp/><sp/>=<sp/>weight-&gt;type().tensor(weight-&gt;sizes());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>handle<sp/>=<sp/>getCudnnHandle();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dataType<sp/>=<sp/>getCudnnDataType(*input);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>TensorDescriptor<sp/>idesc{<sp/>*input,<sp/>4<sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>input,<sp/>output,<sp/>grad_output<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>TensorDescriptor<sp/>wdesc{<sp/>expandScale(*weight,<sp/>input-&gt;dim()),<sp/>4<sp/>};<sp/><sp/></highlight><highlight class="comment">//<sp/>descriptor<sp/>for<sp/>weight,<sp/>bias,<sp/>save_mean,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>Constant<sp/>one(dataType,<sp/>1);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>Constant<sp/>zero(dataType,<sp/>0);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>AT_CUDNN_CHECK(cudnnBatchNormalizationBackward(</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>handle,<sp/>mode,<sp/>&amp;one,<sp/>&amp;zero,<sp/>&amp;one,<sp/>&amp;zero,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>idesc.desc(),<sp/>input-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>idesc.desc(),<sp/>grad_output-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>idesc.desc(),<sp/>grad_input_t.data_ptr(),</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>wdesc.desc(),<sp/>weight-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>grad_weight_t.data_ptr(),</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>grad_bias_t.data_ptr(),</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>epsilon,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>save_mean-&gt;data_ptr(),</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>save_var-&gt;data_ptr()));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::tuple&lt;Tensor,Tensor,Tensor&gt;{grad_input_t,<sp/>grad_weight_t,<sp/>grad_bias_t};</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">}}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>native</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/native/cudnn/BatchNorm.cpp"/>
  </compounddef>
</doxygen>
