<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="any_8h" kind="file" language="C++">
    <compoundname>any.h</compoundname>
    <includes refid="static_8h" local="no">torch/detail/static.h</includes>
    <includes refid="module_8h" local="no">torch/nn/module.h</includes>
    <includes refid="pimpl_8h" local="no">torch/nn/pimpl.h</includes>
    <includes refid="torch_2csrc_2api_2include_2torch_2tensor_8h" local="no">torch/tensor.h</includes>
    <includes local="no">torch/csrc/utils/memory.h</includes>
    <includes local="no">torch/csrc/utils/variadic.h</includes>
    <includes refid="_device_8h" local="no">ATen/Device.h</includes>
    <includes refid="optional_8h" local="no">ATen/optional.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includedby refid="sequential_8h" local="no">/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/sequential.h</includedby>
    <includedby refid="modules_8h" local="no">/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules.h</includedby>
    <incdepgraph>
      <node id="14945">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="14946" relation="include">
        </childnode>
        <childnode refid="14940" relation="include">
        </childnode>
        <childnode refid="14947" relation="include">
        </childnode>
        <childnode refid="14948" relation="include">
        </childnode>
        <childnode refid="14949" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
        <childnode refid="14951" relation="include">
        </childnode>
      </node>
      <node id="14997">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="14962" relation="include">
        </childnode>
        <childnode refid="14943" relation="include">
        </childnode>
        <childnode refid="14995" relation="include">
        </childnode>
        <childnode refid="14998" relation="include">
        </childnode>
        <childnode refid="14952" relation="include">
        </childnode>
        <childnode refid="14949" relation="include">
        </childnode>
        <childnode refid="14963" relation="include">
        </childnode>
      </node>
      <node id="14967">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="14943" relation="include">
        </childnode>
        <childnode refid="14968" relation="include">
        </childnode>
        <childnode refid="14952" relation="include">
        </childnode>
        <childnode refid="14981" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
        <childnode refid="14949" relation="include">
        </childnode>
      </node>
      <node id="14966">
        <label>atomic</label>
      </node>
      <node id="15029">
        <label>torch/csrc/utils/memory.h</label>
      </node>
      <node id="15024">
        <label>torch/csrc/autograd/generated/variable_factories.h</label>
      </node>
      <node id="14949">
        <label>functional</label>
      </node>
      <node id="15001">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="14952" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
        <childnode refid="14992" relation="include">
        </childnode>
        <childnode refid="14944" relation="include">
        </childnode>
      </node>
      <node id="14968">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="14969" relation="include">
        </childnode>
        <childnode refid="14944" relation="include">
        </childnode>
        <childnode refid="14978" relation="include">
        </childnode>
        <childnode refid="14939" relation="include">
        </childnode>
        <childnode refid="14983" relation="include">
        </childnode>
      </node>
      <node id="14979">
        <label>limits</label>
      </node>
      <node id="14959">
        <label>torch/tensor.h</label>
        <link refid="torch_2csrc_2api_2include_2torch_2tensor_8h_source"/>
        <childnode refid="14960" relation="include">
        </childnode>
        <childnode refid="15024" relation="include">
        </childnode>
        <childnode refid="15025" relation="include">
        </childnode>
      </node>
      <node id="14986">
        <label>assert.h</label>
      </node>
      <node id="14991">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="14944" relation="include">
        </childnode>
        <childnode refid="14969" relation="include">
        </childnode>
        <childnode refid="14943" relation="include">
        </childnode>
        <childnode refid="14990" relation="include">
        </childnode>
        <childnode refid="14972" relation="include">
        </childnode>
        <childnode refid="14955" relation="include">
        </childnode>
        <childnode refid="14992" relation="include">
        </childnode>
        <childnode refid="14993" relation="include">
        </childnode>
      </node>
      <node id="14975">
        <label>iterator</label>
      </node>
      <node id="14985">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="14986" relation="include">
        </childnode>
        <childnode refid="14987" relation="include">
        </childnode>
        <childnode refid="14951" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
        <childnode refid="14946" relation="include">
        </childnode>
        <childnode refid="14944" relation="include">
        </childnode>
        <childnode refid="14978" relation="include">
        </childnode>
        <childnode refid="14968" relation="include">
        </childnode>
        <childnode refid="14988" relation="include">
        </childnode>
        <childnode refid="14991" relation="include">
        </childnode>
      </node>
      <node id="15004">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="14939">
        <label>cstdint</label>
      </node>
      <node id="15012">
        <label>ATen/Deprecated.h</label>
        <link refid="_deprecated_8h_source"/>
      </node>
      <node id="14987">
        <label>stdint.h</label>
      </node>
      <node id="15023">
        <label>ATen/CUDAGuard.h</label>
        <link refid="_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="15025">
        <label>torch/csrc/autograd/variable.h</label>
      </node>
      <node id="14980">
        <label>cmath</label>
      </node>
      <node id="14948">
        <label>cassert</label>
      </node>
      <node id="14996">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="14944" relation="include">
        </childnode>
        <childnode refid="14961" relation="include">
        </childnode>
        <childnode refid="14995" relation="include">
        </childnode>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="14991" relation="include">
        </childnode>
        <childnode refid="14943" relation="include">
        </childnode>
        <childnode refid="14997" relation="include">
        </childnode>
        <childnode refid="15002" relation="include">
        </childnode>
        <childnode refid="14963" relation="include">
        </childnode>
        <childnode refid="15000" relation="include">
        </childnode>
        <childnode refid="14939" relation="include">
        </childnode>
      </node>
      <node id="14982">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="14944" relation="include">
        </childnode>
        <childnode refid="14974" relation="include">
        </childnode>
        <childnode refid="14979" relation="include">
        </childnode>
      </node>
      <node id="14951">
        <label>stdexcept</label>
      </node>
      <node id="15018">
        <label>ATen/TensorOperators.h</label>
        <link refid="_tensor_operators_8h_source"/>
        <childnode refid="14985" relation="include">
        </childnode>
        <childnode refid="15005" relation="include">
        </childnode>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
        <childnode refid="14951" relation="include">
        </childnode>
      </node>
      <node id="14993">
        <label>numeric</label>
      </node>
      <node id="14989">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="14966" relation="include">
        </childnode>
        <childnode refid="14963" relation="include">
        </childnode>
        <childnode refid="14965" relation="include">
        </childnode>
        <childnode refid="14968" relation="include">
        </childnode>
        <childnode refid="14945" relation="include">
        </childnode>
      </node>
      <node id="14978">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="14944" relation="include">
        </childnode>
        <childnode refid="14979" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
        <childnode refid="14939" relation="include">
        </childnode>
        <childnode refid="14951" relation="include">
        </childnode>
        <childnode refid="14946" relation="include">
        </childnode>
        <childnode refid="14980" relation="include">
        </childnode>
        <childnode refid="14981" relation="include">
        </childnode>
        <childnode refid="14982" relation="include">
        </childnode>
      </node>
      <node id="14965">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="14966" relation="include">
        </childnode>
      </node>
      <node id="14988">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="14989" relation="include">
        </childnode>
        <childnode refid="14990" relation="include">
        </childnode>
      </node>
      <node id="14950">
        <label>string</label>
      </node>
      <node id="15021">
        <label>ATen/DimVector.h</label>
        <link refid="_dim_vector_8h_source"/>
        <childnode refid="14970" relation="include">
        </childnode>
        <childnode refid="14987" relation="include">
        </childnode>
      </node>
      <node id="15022">
        <label>ATen/OptionsGuard.h</label>
        <link refid="_options_guard_8h_source"/>
        <childnode refid="14967" relation="include">
        </childnode>
        <childnode refid="15008" relation="include">
        </childnode>
        <childnode refid="14968" relation="include">
        </childnode>
        <childnode refid="15015" relation="include">
        </childnode>
        <childnode refid="14945" relation="include">
        </childnode>
      </node>
      <node id="15028">
        <label>map</label>
      </node>
      <node id="14962">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="14963" relation="include">
        </childnode>
        <childnode refid="14964" relation="include">
        </childnode>
        <childnode refid="14943" relation="include">
        </childnode>
        <childnode refid="14965" relation="include">
        </childnode>
        <childnode refid="14967" relation="include">
        </childnode>
        <childnode refid="14984" relation="include">
        </childnode>
      </node>
      <node id="14958">
        <label>torch/nn/cursor.h</label>
        <link refid="cursor_8h_source"/>
        <childnode refid="14959" relation="include">
        </childnode>
        <childnode refid="14952" relation="include">
        </childnode>
        <childnode refid="14975" relation="include">
        </childnode>
        <childnode refid="14979" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
        <childnode refid="14940" relation="include">
        </childnode>
      </node>
      <node id="15002">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="15014">
        <label>ATen/DeviceGuard.h</label>
        <link refid="_device_guard_8h_source"/>
        <childnode refid="14967" relation="include">
        </childnode>
        <childnode refid="14943" relation="include">
        </childnode>
        <childnode refid="14968" relation="include">
        </childnode>
        <childnode refid="15005" relation="include">
        </childnode>
        <childnode refid="14997" relation="include">
        </childnode>
        <childnode refid="14952" relation="include">
        </childnode>
      </node>
      <node id="14953">
        <label>exception</label>
      </node>
      <node id="14964">
        <label>stddef.h</label>
      </node>
      <node id="14990">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="14989" relation="include">
        </childnode>
      </node>
      <node id="15020">
        <label>ATen/Dispatch.h</label>
        <link refid="_dispatch_8h_source"/>
        <childnode refid="14943" relation="include">
        </childnode>
        <childnode refid="14978" relation="include">
        </childnode>
        <childnode refid="14994" relation="include">
        </childnode>
      </node>
      <node id="14971">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="14952" relation="include">
        </childnode>
      </node>
      <node id="15003">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="14985" relation="include">
        </childnode>
        <childnode refid="15004" relation="include">
        </childnode>
      </node>
      <node id="14954">
        <label>ostream</label>
      </node>
      <node id="14961">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="14944" relation="include">
        </childnode>
      </node>
      <node id="14994">
        <label>ATen/Type.h</label>
      </node>
      <node id="14969">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="14943" relation="include">
        </childnode>
        <childnode refid="14970" relation="include">
        </childnode>
        <childnode refid="14977" relation="include">
        </childnode>
        <childnode refid="14975" relation="include">
        </childnode>
        <childnode refid="14957" relation="include">
        </childnode>
      </node>
      <node id="15009">
        <label>ATen/TensorGeometry.h</label>
        <link refid="_tensor_geometry_8h_source"/>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="15010" relation="include">
        </childnode>
      </node>
      <node id="15026">
        <label>torch/nn/pimpl.h</label>
        <link refid="pimpl_8h_source"/>
        <childnode refid="15027" relation="include">
        </childnode>
        <childnode refid="14959" relation="include">
        </childnode>
        <childnode refid="14963" relation="include">
        </childnode>
        <childnode refid="14940" relation="include">
        </childnode>
        <childnode refid="14946" relation="include">
        </childnode>
      </node>
      <node id="15006">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="14944">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="14941">
        <label>torch/nn/module.h</label>
        <link refid="module_8h_source"/>
        <childnode refid="14942" relation="include">
        </childnode>
        <childnode refid="14958" relation="include">
        </childnode>
        <childnode refid="15026" relation="include">
        </childnode>
        <childnode refid="14959" relation="include">
        </childnode>
        <childnode refid="14960" relation="include">
        </childnode>
        <childnode refid="14945" relation="include">
        </childnode>
        <childnode refid="15028" relation="include">
        </childnode>
        <childnode refid="14963" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
        <childnode refid="14940" relation="include">
        </childnode>
        <childnode refid="14956" relation="include">
        </childnode>
      </node>
      <node id="15010">
        <label>ATen/WrapDimUtils.h</label>
        <link refid="_wrap_dim_utils_8h_source"/>
        <childnode refid="14989" relation="include">
        </childnode>
        <childnode refid="14955" relation="include">
        </childnode>
      </node>
      <node id="15007">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="14952" relation="include">
        </childnode>
        <childnode refid="14987" relation="include">
        </childnode>
        <childnode refid="14968" relation="include">
        </childnode>
      </node>
      <node id="14992">
        <label>typeinfo</label>
      </node>
      <node id="14999">
        <label>cstdio</label>
      </node>
      <node id="15027">
        <label>torch/csrc/utils/variadic.h</label>
      </node>
      <node id="14984">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="14963" relation="include">
        </childnode>
        <childnode refid="14944" relation="include">
        </childnode>
      </node>
      <node id="14942">
        <label>torch/detail/ordered_dict.h</label>
        <link refid="ordered__dict_8h_source"/>
        <childnode refid="14943" relation="include">
        </childnode>
        <childnode refid="14939" relation="include">
        </childnode>
        <childnode refid="14949" relation="include">
        </childnode>
        <childnode refid="14947" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
        <childnode refid="14956" relation="include">
        </childnode>
        <childnode refid="14946" relation="include">
        </childnode>
        <childnode refid="14957" relation="include">
        </childnode>
      </node>
      <node id="14957">
        <label>vector</label>
      </node>
      <node id="15019">
        <label>ATen/TensorMethods.h</label>
      </node>
      <node id="15016">
        <label>THNN/Reduction.h</label>
      </node>
      <node id="14976">
        <label>new</label>
      </node>
      <node id="14937">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/any.h</label>
        <link refid="any_8h"/>
        <childnode refid="14938" relation="include">
        </childnode>
        <childnode refid="14941" relation="include">
        </childnode>
        <childnode refid="15026" relation="include">
        </childnode>
        <childnode refid="14959" relation="include">
        </childnode>
        <childnode refid="15029" relation="include">
        </childnode>
        <childnode refid="15027" relation="include">
        </childnode>
        <childnode refid="14967" relation="include">
        </childnode>
        <childnode refid="14945" relation="include">
        </childnode>
        <childnode refid="14963" relation="include">
        </childnode>
        <childnode refid="14940" relation="include">
        </childnode>
        <childnode refid="14992" relation="include">
        </childnode>
        <childnode refid="14946" relation="include">
        </childnode>
        <childnode refid="14957" relation="include">
        </childnode>
      </node>
      <node id="14946">
        <label>utility</label>
      </node>
      <node id="14977">
        <label>array</label>
      </node>
      <node id="14955">
        <label>sstream</label>
      </node>
      <node id="14938">
        <label>torch/detail/static.h</label>
        <link refid="static_8h_source"/>
        <childnode refid="14939" relation="include">
        </childnode>
        <childnode refid="14940" relation="include">
        </childnode>
      </node>
      <node id="15011">
        <label>ATen/Functions.h</label>
        <link refid="build_2aten_2src_2_a_ten_2_functions_8h_source"/>
        <childnode refid="14985" relation="include">
        </childnode>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="15005" relation="include">
        </childnode>
        <childnode refid="15003" relation="include">
        </childnode>
        <childnode refid="14995" relation="include">
        </childnode>
        <childnode refid="15012" relation="include">
        </childnode>
        <childnode refid="15013" relation="include">
        </childnode>
        <childnode refid="15014" relation="include">
        </childnode>
        <childnode refid="15015" relation="include">
        </childnode>
        <childnode refid="15016" relation="include">
        </childnode>
      </node>
      <node id="15013">
        <label>ATen/NativeFunctions.h</label>
      </node>
      <node id="14981">
        <label>iosfwd</label>
      </node>
      <node id="14973">
        <label>cstdlib</label>
      </node>
      <node id="14983">
        <label>iostream</label>
      </node>
      <node id="14952">
        <label>cstddef</label>
      </node>
      <node id="14956">
        <label>unordered_map</label>
      </node>
      <node id="15000">
        <label>mutex</label>
      </node>
      <node id="14960">
        <label>ATen/ATen.h</label>
        <link refid="_a_ten_8h_source"/>
        <childnode refid="14944" relation="include">
        </childnode>
        <childnode refid="14961" relation="include">
        </childnode>
        <childnode refid="14962" relation="include">
        </childnode>
        <childnode refid="14985" relation="include">
        </childnode>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="14995" relation="include">
        </childnode>
        <childnode refid="14996" relation="include">
        </childnode>
        <childnode refid="15003" relation="include">
        </childnode>
        <childnode refid="15005" relation="include">
        </childnode>
        <childnode refid="14967" relation="include">
        </childnode>
        <childnode refid="15009" relation="include">
        </childnode>
        <childnode refid="15011" relation="include">
        </childnode>
        <childnode refid="15017" relation="include">
        </childnode>
        <childnode refid="15018" relation="include">
        </childnode>
        <childnode refid="15019" relation="include">
        </childnode>
        <childnode refid="15020" relation="include">
        </childnode>
        <childnode refid="15021" relation="include">
        </childnode>
        <childnode refid="15014" relation="include">
        </childnode>
        <childnode refid="15015" relation="include">
        </childnode>
        <childnode refid="15008" relation="include">
        </childnode>
        <childnode refid="15022" relation="include">
        </childnode>
        <childnode refid="15023" relation="include">
        </childnode>
      </node>
      <node id="14998">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="14972" relation="include">
        </childnode>
        <childnode refid="14999" relation="include">
        </childnode>
        <childnode refid="14973" relation="include">
        </childnode>
        <childnode refid="14949" relation="include">
        </childnode>
        <childnode refid="14963" relation="include">
        </childnode>
        <childnode refid="15000" relation="include">
        </childnode>
        <childnode refid="14956" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
        <childnode refid="14957" relation="include">
        </childnode>
        <childnode refid="15001" relation="include">
        </childnode>
        <childnode refid="14944" relation="include">
        </childnode>
      </node>
      <node id="14943">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="14944" relation="include">
        </childnode>
        <childnode refid="14945" relation="include">
        </childnode>
        <childnode refid="14952" relation="include">
        </childnode>
        <childnode refid="14953" relation="include">
        </childnode>
        <childnode refid="14954" relation="include">
        </childnode>
        <childnode refid="14955" relation="include">
        </childnode>
        <childnode refid="14950" relation="include">
        </childnode>
      </node>
      <node id="15015">
        <label>ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="14996" relation="include">
        </childnode>
        <childnode refid="14967" relation="include">
        </childnode>
        <childnode refid="15014" relation="include">
        </childnode>
        <childnode refid="15008" relation="include">
        </childnode>
        <childnode refid="14968" relation="include">
        </childnode>
        <childnode refid="15005" relation="include">
        </childnode>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="14952" relation="include">
        </childnode>
        <childnode refid="14981" relation="include">
        </childnode>
        <childnode refid="14946" relation="include">
        </childnode>
      </node>
      <node id="15005">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="14995" relation="include">
        </childnode>
        <childnode refid="14985" relation="include">
        </childnode>
        <childnode refid="14968" relation="include">
        </childnode>
        <childnode refid="15006" relation="include">
        </childnode>
        <childnode refid="15003" relation="include">
        </childnode>
        <childnode refid="15007" relation="include">
        </childnode>
        <childnode refid="14988" relation="include">
        </childnode>
        <childnode refid="14989" relation="include">
        </childnode>
        <childnode refid="14991" relation="include">
        </childnode>
        <childnode refid="14967" relation="include">
        </childnode>
        <childnode refid="15008" relation="include">
        </childnode>
        <childnode refid="14945" relation="include">
        </childnode>
      </node>
      <node id="14940">
        <label>type_traits</label>
      </node>
      <node id="15008">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="14968" relation="include">
        </childnode>
        <childnode refid="14943" relation="include">
        </childnode>
        <childnode refid="14983" relation="include">
        </childnode>
      </node>
      <node id="14970">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="14971" relation="include">
        </childnode>
        <childnode refid="14972" relation="include">
        </childnode>
        <childnode refid="14948" relation="include">
        </childnode>
        <childnode refid="14952" relation="include">
        </childnode>
        <childnode refid="14973" relation="include">
        </childnode>
        <childnode refid="14974" relation="include">
        </childnode>
        <childnode refid="14947" relation="include">
        </childnode>
        <childnode refid="14975" relation="include">
        </childnode>
        <childnode refid="14963" relation="include">
        </childnode>
        <childnode refid="14976" relation="include">
        </childnode>
        <childnode refid="14940" relation="include">
        </childnode>
        <childnode refid="14946" relation="include">
        </childnode>
        <childnode refid="14944" relation="include">
        </childnode>
      </node>
      <node id="14972">
        <label>algorithm</label>
      </node>
      <node id="14995">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="14987" relation="include">
        </childnode>
      </node>
      <node id="14974">
        <label>cstring</label>
      </node>
      <node id="14963">
        <label>memory</label>
      </node>
      <node id="14947">
        <label>initializer_list</label>
      </node>
      <node id="15017">
        <label>ATen/Formatting.h</label>
        <link refid="_formatting_8h_source"/>
        <childnode refid="14983" relation="include">
        </childnode>
        <childnode refid="14994" relation="include">
        </childnode>
        <childnode refid="14985" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15034">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/torch.h</label>
        <link refid="torch_8h_source"/>
      </node>
      <node id="15031">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/sequential.h</label>
        <link refid="sequential_8h_source"/>
        <childnode refid="15032" relation="include">
        </childnode>
      </node>
      <node id="15032">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules.h</label>
        <link refid="modules_8h_source"/>
        <childnode refid="15033" relation="include">
        </childnode>
      </node>
      <node id="15033">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn.h</label>
        <link refid="nn_8h_source"/>
        <childnode refid="15034" relation="include">
        </childnode>
      </node>
      <node id="15030">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/any.h</label>
        <link refid="any_8h"/>
        <childnode refid="15031" relation="include">
        </childnode>
        <childnode refid="15032" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classtorch_1_1nn_1_1_any_module" prot="public">torch::nn::AnyModule</innerclass>
    <innerclass refid="structtorch_1_1nn_1_1_any_module_1_1_holder" prot="private">torch::nn::AnyModule::Holder</innerclass>
    <innerclass refid="classtorch_1_1nn_1_1_any_module_1_1_value" prot="public">torch::nn::AnyModule::Value</innerclass>
    <innerclass refid="structtorch_1_1nn_1_1_any_module_1_1_value_1_1_placeholder" prot="private">torch::nn::AnyModule::Value::Placeholder</innerclass>
    <innerclass refid="structtorch_1_1nn_1_1_any_module_1_1_value_1_1_holder" prot="private">torch::nn::AnyModule::Value::Holder</innerclass>
    <innerclass refid="structtorch_1_1nn_1_1_any_module_1_1_placeholder" prot="public">torch::nn::AnyModule::Placeholder</innerclass>
    <innerclass refid="structtorch_1_1nn_1_1_any_module_1_1_holder" prot="private">torch::nn::AnyModule::Holder</innerclass>
    <innerclass refid="structtorch_1_1nn_1_1_any_module_1_1_holder_1_1_checked_getter" prot="public">torch::nn::AnyModule::Holder::CheckedGetter</innerclass>
    <innerclass refid="structtorch_1_1nn_1_1_any_module_1_1_holder_1_1_invoke_forward" prot="public">torch::nn::AnyModule::Holder::InvokeForward</innerclass>
    <innernamespace refid="namespacetorch">torch</innernamespace>
    <innernamespace refid="namespacetorch_1_1nn">torch::nn</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/detail/static.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/nn/module.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/nn/pimpl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/tensor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/csrc/utils/memory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/csrc/utils/variadic.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/Device.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ATen/optional.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetorch" kindref="compound">torch</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">nn<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classtorch_1_1nn_1_1_any_module" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a4782ae9077d5e426d220e123ac9101dc" kindref="member">AnyModule</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a4782ae9077d5e426d220e123ac9101dc" kindref="member">AnyModule</ref>(std::shared_ptr&lt;ModuleType&gt;<sp/>module);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>torch::detail::enable_if_module_t&lt;ModuleType&gt;&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a4782ae9077d5e426d220e123ac9101dc" kindref="member">AnyModule</ref>(ModuleType&amp;&amp;<sp/>module);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a4782ae9077d5e426d220e123ac9101dc" kindref="member">AnyModule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_module_holder" kindref="compound">ModuleHolder&lt;ModuleType&gt;</ref>&amp;<sp/>module_holder);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a4782ae9077d5e426d220e123ac9101dc" kindref="member">AnyModule</ref>(<ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>&amp;<sp/>operator=(<ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a4782ae9077d5e426d220e123ac9101dc" kindref="member">AnyModule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a24906f2317355cd7bd826d25f6e8c12e" kindref="member">clone</ref>(<ref refid="classat_1_1optional" kindref="compound">at::optional&lt;Device&gt;</ref><sp/><ref refid="namespaceat_1a7b0b366b175733b3ff709ceed5058911" kindref="member">device</ref><sp/>=<sp/>at::nullopt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>&amp;<sp/>operator=(std::shared_ptr&lt;ModuleType&gt;<sp/>module);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ArgumentTypes&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1ae362218831f4e0274a627189baf09e6d" kindref="member">forward</ref>(ArgumentTypes&amp;&amp;...<sp/>arguments);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>torch::detail::enable_if_module_t&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>T&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>torch::detail::enable_if_module_t&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ContainedType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::ContainedType&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>T<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Module&gt;<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a1c48ad507b1f18cf7333aff911909aae" kindref="member">ptr</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>torch::detail::enable_if_module_t&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;T&gt;<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a1c48ad507b1f18cf7333aff911909aae" kindref="member">ptr</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a96d9ea81ab454a54347bf4a1774c20de" kindref="member">type_info</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a69029292d5d4c23155f064b60fe85af5" kindref="member">is_empty</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtorch_1_1nn_1_1_any_module_1_1_placeholder" kindref="compound">Placeholder</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ArgumentTypes&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Holder;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Class,<sp/></highlight><highlight class="comment">//<sp/>=<sp/>std::remove_reference&lt;ModuleType&gt;::type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReturnType,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ArgumentTypes&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Placeholder&gt;<sp/>make_holder(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ModuleType&gt;&amp;&amp;<sp/>module,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReturnType<sp/>(Class::*)(ArgumentTypes...));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>T&amp;<sp/>get_()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Placeholder&gt;<sp/>content_;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<sp/>AnyModule::Value<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classtorch_1_1nn_1_1_any_module_1_1_value" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">AnyModule::Value</ref><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a8550ec401384a71bf412cbb9f597a5a4" kindref="member">Value</ref>(<ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator=(<ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a8550ec401384a71bf412cbb9f597a5a4" kindref="member">Value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="157" refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a305cf2d39b1ff380fb63a0fbfdd8591b" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a305cf2d39b1ff380fb63a0fbfdd8591b" kindref="member">try_get</ref>()<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_reference&lt;T&gt;::value,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Value<sp/>stores<sp/>decayed<sp/>types,<sp/>you<sp/>cannot<sp/>cast<sp/>it<sp/>to<sp/>a<sp/>reference<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_array&lt;T&gt;::value,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Value<sp/>stores<sp/>decayed<sp/>types,<sp/>you<sp/>must<sp/>cast<sp/>it<sp/>to<sp/>T*<sp/>instead<sp/>of<sp/>T[]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).hash_code()<sp/>==<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a2621962c425fde2ef03dca430875b81c" kindref="member">type_info</ref>().hash_code())<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Holder&lt;T&gt;&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*content_).value;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="174" refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a11db5a11fe7946b96e25854670cfb4d4" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>maybe_value<sp/>=<sp/>try_get&lt;T&gt;())<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*maybe_value;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_ERROR(</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>cast<sp/>Value<sp/>to<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceat_1a412233e8aa47c513eb60182bd748e091" kindref="member">at::demangle</ref>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name()),</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>but<sp/>its<sp/>actual<sp/>type<sp/>is<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceat_1a412233e8aa47c513eb60182bd748e091" kindref="member">at::demangle</ref>(<ref refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a2621962c425fde2ef03dca430875b81c" kindref="member">type_info</ref>().name()));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a2621962c425fde2ef03dca430875b81c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a2621962c425fde2ef03dca430875b81c" kindref="member">type_info</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>content_-&gt;type_info;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TestValue;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>torch::disable_if_t&lt;std::is_same&lt;at::Tensor,<sp/>T&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a8550ec401384a71bf412cbb9f597a5a4" kindref="member">Value</ref>(T&amp;&amp;<sp/>value)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>content_(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetorch" kindref="compound">torch</ref>::make_unique&lt;Holder&lt;decay_t&lt;T&gt;&gt;&gt;(<ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="classtorch_1_1nn_1_1_any_module_1ae362218831f4e0274a627189baf09e6d" kindref="member">forward</ref>&lt;T&gt;(value)))<sp/>{}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a8550ec401384a71bf412cbb9f597a5a4" kindref="member">Value</ref>(<ref refid="structat_1_1_tensor" kindref="compound">at::Tensor</ref><sp/>tensor)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tensor.<ref refid="structat_1_1_tensor_1ae5fe03a55a50933e6f2e51c4930ea4cc" kindref="member">is_variable</ref>())<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>content_<sp/>=<sp/>torch::make_unique&lt;Holder&lt;torch::Tensor&gt;&gt;(std::move(tensor));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>content_<sp/>=<sp/>torch::make_unique&lt;Holder&lt;at::Tensor&gt;&gt;(std::move(tensor));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Placeholder<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>Placeholder(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/>type_info_)<sp/>noexcept</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a2621962c425fde2ef03dca430875b81c" kindref="member">type_info</ref>(type_info_)<sp/>{}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~Placeholder()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value_1a2621962c425fde2ef03dca430875b81c" kindref="member">type_info</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Holder<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Placeholder<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>Holder(U&amp;&amp;<sp/>value_)<sp/>noexcept</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Placeholder(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T)),<sp/>value(std::forward&lt;U&gt;(value_))<sp/>{}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>value;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Placeholder&gt;<sp/>content_;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~<sp/>AnyModule::Placeholder<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="structtorch_1_1nn_1_1_any_module_1_1_placeholder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtorch_1_1nn_1_1_any_module_1_1_placeholder" kindref="compound">AnyModule::Placeholder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>AnyModule::Value::Placeholder<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>AnyModule::Value::Placeholder::Placeholder;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref><sp/><ref refid="structtorch_1_1nn_1_1_any_module_1_1_placeholder_1ae8f1fde14e5024b67f8f98de4b9ac031" kindref="member">forward</ref>(std::vector&lt;Value&gt;&amp;&amp;<sp/>arguments)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Module&gt;<sp/><ref refid="structtorch_1_1nn_1_1_any_module_1_1_placeholder_1a2e07a91f1dd9dd743c6a23e6d532157a" kindref="member">ptr</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Placeholder&gt;<sp/><ref refid="structtorch_1_1nn_1_1_any_module_1_1_placeholder_1ac0f450860e00af4c370ae716ff47bb7a" kindref="member">copy</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Placeholder&gt;<sp/><ref refid="structtorch_1_1nn_1_1_any_module_1_1_placeholder_1a35a2496f7a704a67ec4234adbd3305d0" kindref="member">clone</ref>(</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classat_1_1optional" kindref="compound">at::optional&lt;Device&gt;</ref><sp/><ref refid="namespaceat_1a7b0b366b175733b3ff709ceed5058911" kindref="member">device</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">};</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~<sp/>AnyModule::Holder<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ArgumentTypes&gt;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AnyModule::Holder<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structtorch_1_1nn_1_1_any_module_1_1_placeholder" kindref="compound">AnyModule::Placeholder</ref><sp/>{</highlight></codeline>
<codeline lineno="260" refid="structtorch_1_1nn_1_1_any_module_1_1_holder_1_1_checked_getter" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtorch_1_1nn_1_1_any_module_1_1_holder_1_1_checked_getter" kindref="compound">CheckedGetter</ref><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>decay_t&lt;T&gt;&amp;&amp;<sp/>operator()(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AT_ASSERT(index<sp/>&lt;<sp/>arguments_.size());</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value<sp/>=<sp/>arguments_[index];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>maybe_value<sp/>=<sp/>value.template<sp/>try_get&lt;decay_t&lt;T&gt;&gt;())<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(*maybe_value);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AT_ERROR(</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>argument<sp/>#&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>be<sp/>of<sp/>type<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceat_1a412233e8aa47c513eb60182bd748e091" kindref="member">at::demangle</ref>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name()),</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,<sp/>but<sp/>received<sp/>value<sp/>of<sp/>type<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceat_1a412233e8aa47c513eb60182bd748e091" kindref="member">at::demangle</ref>(value.type_info().name()));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Value&gt;&amp;<sp/>arguments_;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="structtorch_1_1nn_1_1_any_module_1_1_holder_1_1_invoke_forward" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtorch_1_1nn_1_1_any_module_1_1_holder_1_1_invoke_forward" kindref="compound">InvokeForward</ref><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref><sp/>operator()(Ts&amp;&amp;...<sp/>ts)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref>(module_-&gt;forward(std::forward&lt;Ts&gt;(ts)...));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ModuleType&gt;&amp;<sp/>module_;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>Holder(std::shared_ptr&lt;ModuleType&gt;&amp;&amp;<sp/>module_)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtorch_1_1nn_1_1_any_module_1_1_placeholder" kindref="compound">Placeholder</ref>(typeid(ModuleType)),<sp/>module(<ref refid="namespacestd" kindref="compound">std</ref>::move(module_))<sp/>{}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1ae362218831f4e0274a627189baf09e6d" kindref="member">forward</ref>(std::vector&lt;Value&gt;&amp;&amp;<sp/>arguments)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>AT_CHECK(</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments.size()<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(ArgumentTypes),</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceat_1a412233e8aa47c513eb60182bd748e091" kindref="member">at::demangle</ref>(<ref refid="classtorch_1_1nn_1_1_any_module_1a96d9ea81ab454a54347bf4a1774c20de" kindref="member">type_info</ref>.name()),</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;s<sp/>forward()<sp/>method<sp/>expects<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(ArgumentTypes),</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>arguments,<sp/>but<sp/>received<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments.size());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FYI:<sp/>During<sp/>invocation<sp/>of<sp/>a<sp/>module&apos;s<sp/>`forward()`<sp/>method,<sp/>the<sp/>values<sp/>live</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>`arguments`<sp/>vector<sp/>inside<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::unpack&lt;ArgumentTypes...&gt;(</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InvokeForward{module},<sp/>CheckedGetter{arguments});</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Module&gt;<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a1c48ad507b1f18cf7333aff911909aae" kindref="member">ptr</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>module;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Placeholder&gt;<sp/>copy()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::make_unique&lt;Holder&gt;(*this);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;Placeholder&gt;<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a24906f2317355cd7bd826d25f6e8c12e" kindref="member">clone</ref>(</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classat_1_1optional" kindref="compound">at::optional&lt;Device&gt;</ref><sp/>device)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::make_unique&lt;Holder&gt;(</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::static_pointer_cast&lt;ModuleType&gt;(module-&gt;clone(device)));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;ModuleType&gt;<sp/>module;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">};</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<sp/>AnyModule<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType&gt;</highlight></codeline>
<codeline lineno="328" refid="classtorch_1_1nn_1_1_any_module_1ae76b9aea5ef6c18511d5cbca9a43aa0c" refkind="member"><highlight class="normal"><ref refid="classtorch_1_1nn_1_1_any_module_1a4782ae9077d5e426d220e123ac9101dc" kindref="member">AnyModule::AnyModule</ref>(std::shared_ptr&lt;ModuleType&gt;<sp/>module)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>content_(make_holder(</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::move(module),</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="namespacestd" kindref="compound">std</ref>::remove_reference&lt;ModuleType&gt;::type::forward))<sp/>{}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="334" refid="classtorch_1_1nn_1_1_any_module_1a346f166334839d80df976ab9751dd798" refkind="member"><highlight class="normal"><ref refid="classtorch_1_1nn_1_1_any_module_1a4782ae9077d5e426d220e123ac9101dc" kindref="member">AnyModule::AnyModule</ref>(ModuleType&amp;&amp;<sp/>module)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>(</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::make_shared&lt;ModuleType&gt;(<ref refid="namespacestd" kindref="compound">std</ref>::forward&lt;ModuleType&gt;(module)))<sp/>{}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType&gt;</highlight></codeline>
<codeline lineno="339" refid="classtorch_1_1nn_1_1_any_module_1a2ee1b3c9fd2ba48fc07a73a0ef95b39b" refkind="member"><highlight class="normal"><ref refid="classtorch_1_1nn_1_1_any_module_1a4782ae9077d5e426d220e123ac9101dc" kindref="member">AnyModule::AnyModule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_module_holder" kindref="compound">ModuleHolder&lt;ModuleType&gt;</ref>&amp;<sp/>module_holder)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>(module_holder.ptr())<sp/>{}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="classtorch_1_1nn_1_1_any_module_1ae73b55393c3ed33d041d9b49737c6581" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a4782ae9077d5e426d220e123ac9101dc" kindref="member">AnyModule::AnyModule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>content_(other.content_<sp/>?<sp/>other.content_-&gt;copy()<sp/>:<sp/>nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>&amp;<sp/>AnyModule::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>content_<sp/>=<sp/>other.content_<sp/>?<sp/>other.content_-&gt;copy()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="classtorch_1_1nn_1_1_any_module_1a24906f2317355cd7bd826d25f6e8c12e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a24906f2317355cd7bd826d25f6e8c12e" kindref="member">AnyModule::clone</ref>(<ref refid="classat_1_1optional" kindref="compound">at::optional&lt;Device&gt;</ref><sp/>device)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a24906f2317355cd7bd826d25f6e8c12e" kindref="member">clone</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a24906f2317355cd7bd826d25f6e8c12e" kindref="member">clone</ref>.content_<sp/>=<sp/>content_<sp/>?<sp/>content_-&gt;clone(<ref refid="namespaceat_1a7b0b366b175733b3ff709ceed5058911" kindref="member">device</ref>)<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a24906f2317355cd7bd826d25f6e8c12e" kindref="member">clone</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType&gt;</highlight></codeline>
<codeline lineno="359" refid="classtorch_1_1nn_1_1_any_module_1aea9a3820dc0e72fe8379057566746b23" refkind="member"><highlight class="normal"><ref refid="classtorch_1_1nn_1_1_any_module" kindref="compound">AnyModule</ref>&amp;<sp/>AnyModule::operator=(std::shared_ptr&lt;ModuleType&gt;<sp/>module)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a4782ae9077d5e426d220e123ac9101dc" kindref="member">AnyModule</ref>(std::move(module)));</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ArgumentTypes&gt;</highlight></codeline>
<codeline lineno="364" refid="classtorch_1_1nn_1_1_any_module_1ae362218831f4e0274a627189baf09e6d" refkind="member"><highlight class="normal"><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">AnyModule::Value</ref><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1ae362218831f4e0274a627189baf09e6d" kindref="member">AnyModule::forward</ref>(ArgumentTypes&amp;&amp;...<sp/>arguments)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>AT_CHECK(!<ref refid="classtorch_1_1nn_1_1_any_module_1a69029292d5d4c23155f064b60fe85af5" kindref="member">is_empty</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>forward()<sp/>on<sp/>an<sp/>empty<sp/>AnyModule&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>std::vector&lt;Value&gt;<sp/>values;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>values.reserve(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(ArgumentTypes));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>torch::apply(</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;values](<ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref>&amp;&amp;<sp/>value)<sp/>{<sp/>values.push_back(std::move(value));<sp/>},</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1_1_value" kindref="compound">Value</ref>(std::forward&lt;ArgumentTypes&gt;(arguments))...);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>content_-&gt;forward(std::move(values));</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="375" refid="classtorch_1_1nn_1_1_any_module_1abb1a2f1e04087b5b83f012ab354064fe" refkind="member"><highlight class="normal">T&amp;<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1abb1a2f1e04087b5b83f012ab354064fe" kindref="member">AnyModule::get</ref>()<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>AT_CHECK(!<ref refid="classtorch_1_1nn_1_1_any_module_1a69029292d5d4c23155f064b60fe85af5" kindref="member">is_empty</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>get()<sp/>on<sp/>an<sp/>empty<sp/>AnyModule&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_&lt;T&gt;();</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="381" refid="classtorch_1_1nn_1_1_any_module_1ae6286bf25851ab8fad4edb222c1d6d2f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1abb1a2f1e04087b5b83f012ab354064fe" kindref="member">AnyModule::get</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>AT_CHECK(!<ref refid="classtorch_1_1nn_1_1_any_module_1a69029292d5d4c23155f064b60fe85af5" kindref="member">is_empty</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>get()<sp/>on<sp/>an<sp/>empty<sp/>AnyModule&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_&lt;T&gt;();</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ContainedType&gt;</highlight></codeline>
<codeline lineno="387" refid="classtorch_1_1nn_1_1_any_module_1af3c1e661120aec952a65160b20a87d52" refkind="member"><highlight class="normal">T<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1abb1a2f1e04087b5b83f012ab354064fe" kindref="member">AnyModule::get</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T(ptr&lt;ContainedType&gt;());</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="classtorch_1_1nn_1_1_any_module_1a1c48ad507b1f18cf7333aff911909aae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Module&gt;<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a1c48ad507b1f18cf7333aff911909aae" kindref="member">AnyModule::ptr</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>AT_CHECK(!<ref refid="classtorch_1_1nn_1_1_any_module_1a69029292d5d4c23155f064b60fe85af5" kindref="member">is_empty</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>ptr()<sp/>on<sp/>an<sp/>empty<sp/>AnyModule&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>content_-&gt;ptr();</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="397" refid="classtorch_1_1nn_1_1_any_module_1a48356bd42b88ab0592deb83623ab009e" refkind="member"><highlight class="normal">std::shared_ptr&lt;T&gt;<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a1c48ad507b1f18cf7333aff911909aae" kindref="member">AnyModule::ptr</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>AT_CHECK(!<ref refid="classtorch_1_1nn_1_1_any_module_1a69029292d5d4c23155f064b60fe85af5" kindref="member">is_empty</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>ptr()<sp/>on<sp/>an<sp/>empty<sp/>AnyModule&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>get_&lt;T&gt;();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::static_pointer_cast&lt;T&gt;(<ref refid="classtorch_1_1nn_1_1_any_module_1a1c48ad507b1f18cf7333aff911909aae" kindref="member">ptr</ref>());</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="classtorch_1_1nn_1_1_any_module_1a96d9ea81ab454a54347bf4a1774c20de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a96d9ea81ab454a54347bf4a1774c20de" kindref="member">AnyModule::type_info</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>AT_CHECK(!<ref refid="classtorch_1_1nn_1_1_any_module_1a69029292d5d4c23155f064b60fe85af5" kindref="member">is_empty</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>type_info()<sp/>on<sp/>an<sp/>empty<sp/>AnyModule&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>content_-&gt;type_info;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="classtorch_1_1nn_1_1_any_module_1a69029292d5d4c23155f064b60fe85af5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a69029292d5d4c23155f064b60fe85af5" kindref="member">AnyModule::is_empty</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>content_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>Methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Class,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReturnType,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>ArgumentTypes&gt;</highlight></codeline>
<codeline lineno="420"><highlight class="normal">std::unique_ptr&lt;AnyModule::Placeholder&gt;<sp/>AnyModule::make_holder(</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ModuleType&gt;&amp;&amp;<sp/>module,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>ReturnType<sp/>(Class::*)(ArgumentTypes...))<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>torch::detail::check_not_lvalue_references&lt;ArgumentTypes...&gt;(),</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Modules<sp/>stored<sp/>inside<sp/>AnyModule<sp/>must<sp/>not<sp/>take<sp/>references.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>pointers<sp/>instead.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_void&lt;ReturnType&gt;::value,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;AnyModule<sp/>cannot<sp/>store<sp/>modules<sp/>that<sp/>return<sp/>void<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(you<sp/>can<sp/>return<sp/>a<sp/>dummy<sp/>value).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>torch::make_unique&lt;Holder&lt;decay_t&lt;ModuleType&gt;,<sp/>ArgumentTypes...&gt;&gt;(</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::move(module));</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">T&amp;<sp/>AnyModule::get_()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).hash_code()<sp/>==<sp/><ref refid="classtorch_1_1nn_1_1_any_module_1a96d9ea81ab454a54347bf4a1774c20de" kindref="member">type_info</ref>().hash_code())<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Holder&lt;T&gt;&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*content_).module;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>cast<sp/>module<sp/>of<sp/>type<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceat_1a412233e8aa47c513eb60182bd748e091" kindref="member">at::demangle</ref>(<ref refid="classtorch_1_1nn_1_1_any_module_1a96d9ea81ab454a54347bf4a1774c20de" kindref="member">type_info</ref>().name()),</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>type<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceat_1a412233e8aa47c513eb60182bd748e091" kindref="member">at::demangle</ref>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name()));</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>torch</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/include/torch/nn/modules/any.h"/>
  </compounddef>
</doxygen>
