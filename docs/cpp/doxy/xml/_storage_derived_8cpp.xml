<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_storage_derived_8cpp" kind="file" language="C++">
    <compoundname>StorageDerived.cpp</compoundname>
    <includes local="yes">ATen/${Storage}.h</includes>
    <includes refid="_half_8h" local="yes">ATen/Half.h</includes>
    <includes refid="_allocator_8h" local="yes">ATen/Allocator.h</includes>
    <includes refid="_config_8h" local="yes">ATen/Config.h</includes>
    <incdepgraph>
      <node id="10287">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="10278" relation="include">
        </childnode>
        <childnode refid="10288" relation="include">
        </childnode>
        <childnode refid="10289" relation="include">
        </childnode>
        <childnode refid="10290" relation="include">
        </childnode>
        <childnode refid="10291" relation="include">
        </childnode>
        <childnode refid="10275" relation="include">
        </childnode>
        <childnode refid="10277" relation="include">
        </childnode>
      </node>
      <node id="10298">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="10286" relation="include">
        </childnode>
        <childnode refid="10299" relation="include">
        </childnode>
        <childnode refid="10292" relation="include">
        </childnode>
        <childnode refid="10280" relation="include">
        </childnode>
        <childnode refid="10275" relation="include">
        </childnode>
        <childnode refid="10291" relation="include">
        </childnode>
      </node>
      <node id="10297">
        <label>atomic</label>
      </node>
      <node id="10291">
        <label>functional</label>
      </node>
      <node id="10299">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="10300" relation="include">
        </childnode>
        <childnode refid="10273" relation="include">
        </childnode>
        <childnode refid="10272" relation="include">
        </childnode>
        <childnode refid="10276" relation="include">
        </childnode>
        <childnode refid="10309" relation="include">
        </childnode>
      </node>
      <node id="10274">
        <label>limits</label>
      </node>
      <node id="10305">
        <label>iterator</label>
      </node>
      <node id="10276">
        <label>cstdint</label>
      </node>
      <node id="10279">
        <label>cmath</label>
      </node>
      <node id="10290">
        <label>cassert</label>
      </node>
      <node id="10281">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="10273" relation="include">
        </childnode>
        <childnode refid="10282" relation="include">
        </childnode>
        <childnode refid="10274" relation="include">
        </childnode>
      </node>
      <node id="10277">
        <label>stdexcept</label>
      </node>
      <node id="10296">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="10297" relation="include">
        </childnode>
      </node>
      <node id="10272">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="10273" relation="include">
        </childnode>
        <childnode refid="10274" relation="include">
        </childnode>
        <childnode refid="10275" relation="include">
        </childnode>
        <childnode refid="10276" relation="include">
        </childnode>
        <childnode refid="10277" relation="include">
        </childnode>
        <childnode refid="10278" relation="include">
        </childnode>
        <childnode refid="10279" relation="include">
        </childnode>
        <childnode refid="10280" relation="include">
        </childnode>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10275">
        <label>string</label>
      </node>
      <node id="10311">
        <label>ATen/Config.h</label>
        <link refid="_config_8h_source"/>
      </node>
      <node id="10283">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="10284" relation="include">
        </childnode>
        <childnode refid="10285" relation="include">
        </childnode>
        <childnode refid="10286" relation="include">
        </childnode>
        <childnode refid="10296" relation="include">
        </childnode>
        <childnode refid="10298" relation="include">
        </childnode>
        <childnode refid="10310" relation="include">
        </childnode>
      </node>
      <node id="10293">
        <label>exception</label>
      </node>
      <node id="10285">
        <label>stddef.h</label>
      </node>
      <node id="10302">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="10292" relation="include">
        </childnode>
      </node>
      <node id="10294">
        <label>ostream</label>
      </node>
      <node id="10300">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="10286" relation="include">
        </childnode>
        <childnode refid="10301" relation="include">
        </childnode>
        <childnode refid="10307" relation="include">
        </childnode>
        <childnode refid="10305" relation="include">
        </childnode>
        <childnode refid="10308" relation="include">
        </childnode>
      </node>
      <node id="10273">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="10310">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="10284" relation="include">
        </childnode>
        <childnode refid="10273" relation="include">
        </childnode>
      </node>
      <node id="10308">
        <label>vector</label>
      </node>
      <node id="10306">
        <label>new</label>
      </node>
      <node id="10278">
        <label>utility</label>
      </node>
      <node id="10307">
        <label>array</label>
      </node>
      <node id="10295">
        <label>sstream</label>
      </node>
      <node id="10280">
        <label>iosfwd</label>
      </node>
      <node id="10304">
        <label>cstdlib</label>
      </node>
      <node id="10309">
        <label>iostream</label>
      </node>
      <node id="10271">
        <label>ATen/${Storage}.h</label>
      </node>
      <node id="10292">
        <label>cstddef</label>
      </node>
      <node id="10270">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/StorageDerived.cpp</label>
        <link refid="_storage_derived_8cpp"/>
        <childnode refid="10271" relation="include">
        </childnode>
        <childnode refid="10272" relation="include">
        </childnode>
        <childnode refid="10283" relation="include">
        </childnode>
        <childnode refid="10311" relation="include">
        </childnode>
      </node>
      <node id="10286">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="10273" relation="include">
        </childnode>
        <childnode refid="10287" relation="include">
        </childnode>
        <childnode refid="10292" relation="include">
        </childnode>
        <childnode refid="10293" relation="include">
        </childnode>
        <childnode refid="10294" relation="include">
        </childnode>
        <childnode refid="10295" relation="include">
        </childnode>
        <childnode refid="10275" relation="include">
        </childnode>
      </node>
      <node id="10288">
        <label>type_traits</label>
      </node>
      <node id="10301">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="10302" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
        <childnode refid="10290" relation="include">
        </childnode>
        <childnode refid="10292" relation="include">
        </childnode>
        <childnode refid="10304" relation="include">
        </childnode>
        <childnode refid="10282" relation="include">
        </childnode>
        <childnode refid="10289" relation="include">
        </childnode>
        <childnode refid="10305" relation="include">
        </childnode>
        <childnode refid="10284" relation="include">
        </childnode>
        <childnode refid="10306" relation="include">
        </childnode>
        <childnode refid="10288" relation="include">
        </childnode>
        <childnode refid="10278" relation="include">
        </childnode>
        <childnode refid="10273" relation="include">
        </childnode>
      </node>
      <node id="10303">
        <label>algorithm</label>
      </node>
      <node id="10282">
        <label>cstring</label>
      </node>
      <node id="10284">
        <label>memory</label>
      </node>
      <node id="10289">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceat">at</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;ATen/${Storage}.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>${generated_comment}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Half.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Allocator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">$extra_cuda_headers</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">${Storage}::${Storage}(Context*<sp/>context):</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>Storage(${THStorage}_new(${state})),<sp/>context(context)<sp/>{}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">${Storage}::${Storage}(Context*<sp/>context,<sp/>THStorage*<sp/>storage):</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>Storage(storage),<sp/>context(context)<sp/>{}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">${Storage}::${Storage}(Context*<sp/>context,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>storage_size)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>:<sp/>Storage(${THStorage}_newWithSize(${state,}<sp/>storage_size)),<sp/>context(context)<sp/>{}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">${Storage}::${Storage}(Context*<sp/>context,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>Allocator*<sp/>allocator)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>:<sp/>Storage(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>context(context)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>storage<sp/>=<sp/>${THStorage}_newWithAllocator(${state,}<sp/>size,<sp/>allocator);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>${THStorage}_clearFlag(${state,}<sp/>storage,<sp/>TH_STORAGE_RESIZABLE);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Take<sp/>in<sp/>Device<sp/>as<sp/>an<sp/>input<sp/>to<sp/>the<sp/>std::function<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>${isCUDA}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getPointerDevice(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cudaPointerAttributes<sp/>attr;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>THCudaCheck(cudaPointerGetAttributes(&amp;attr,<sp/>ptr));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attr.device;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">${Storage}::${Storage}(Context*<sp/>context,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;void(void*)&gt;<sp/>&amp;<sp/>deleter)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>:<sp/>Storage(${THStorage}_newWithDataAndAllocator(${state,}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InefficientStdFunctionContext::makeDataPtr(data,<sp/>deleter,</highlight></codeline>
<codeline lineno="42"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>${isCUDA}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Device(kCUDA,<sp/>getPointerDevice(data))</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kCPU</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>size,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocator<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>)),<sp/>context(context)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>${THStorage}_clearFlag(${state,}<sp/>storage,<sp/>TH_STORAGE_RESIZABLE);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">${Storage}::~${Storage}()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>${Storage}::elementSize()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(${ScalarType});</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">Type&amp;<sp/>${Storage}::type()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;getType(Backend::${Backend},ScalarType::${ScalarName});</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>${Storage}::typeString()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;${Type}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/StorageDerived.cpp"/>
  </compounddef>
</doxygen>
