<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_tensor_methods_8h" kind="file" language="C++">
    <compoundname>TensorMethods.h</compoundname>
    <includes refid="build_2aten_2src_2_a_ten_2tensor_8h" local="yes">ATen/Tensor.h</includes>
    <includes refid="_scalar_8h" local="yes">ATen/Scalar.h</includes>
    <includes refid="_sparse_tensor_ref_8h" local="yes">ATen/SparseTensorRef.h</includes>
    <includes local="yes">ATen/Type.h</includes>
    <incdepgraph>
      <node id="10515">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="10503" relation="include">
        </childnode>
        <childnode refid="10516" relation="include">
        </childnode>
        <childnode refid="10517" relation="include">
        </childnode>
        <childnode refid="10518" relation="include">
        </childnode>
        <childnode refid="10519" relation="include">
        </childnode>
        <childnode refid="10502" relation="include">
        </childnode>
        <childnode refid="10501" relation="include">
        </childnode>
      </node>
      <node id="10546">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="10514" relation="include">
        </childnode>
        <childnode refid="10512" relation="include">
        </childnode>
        <childnode refid="10520" relation="include">
        </childnode>
        <childnode refid="10509" relation="include">
        </childnode>
        <childnode refid="10502" relation="include">
        </childnode>
        <childnode refid="10519" relation="include">
        </childnode>
      </node>
      <node id="10536">
        <label>atomic</label>
      </node>
      <node id="10519">
        <label>functional</label>
      </node>
      <node id="10512">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="10513" relation="include">
        </childnode>
        <childnode refid="10504" relation="include">
        </childnode>
        <childnode refid="10505" relation="include">
        </childnode>
        <childnode refid="10507" relation="include">
        </childnode>
        <childnode refid="10533" relation="include">
        </childnode>
      </node>
      <node id="10506">
        <label>limits</label>
      </node>
      <node id="10500">
        <label>assert.h</label>
      </node>
      <node id="10539">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="10504" relation="include">
        </childnode>
        <childnode refid="10513" relation="include">
        </childnode>
        <childnode refid="10514" relation="include">
        </childnode>
        <childnode refid="10538" relation="include">
        </childnode>
        <childnode refid="10526" relation="include">
        </childnode>
        <childnode refid="10523" relation="include">
        </childnode>
        <childnode refid="10540" relation="include">
        </childnode>
        <childnode refid="10541" relation="include">
        </childnode>
      </node>
      <node id="10528">
        <label>iterator</label>
      </node>
      <node id="10499">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="10500" relation="include">
        </childnode>
        <childnode refid="10498" relation="include">
        </childnode>
        <childnode refid="10501" relation="include">
        </childnode>
        <childnode refid="10502" relation="include">
        </childnode>
        <childnode refid="10503" relation="include">
        </childnode>
        <childnode refid="10504" relation="include">
        </childnode>
        <childnode refid="10505" relation="include">
        </childnode>
        <childnode refid="10512" relation="include">
        </childnode>
        <childnode refid="10534" relation="include">
        </childnode>
        <childnode refid="10539" relation="include">
        </childnode>
      </node>
      <node id="10544">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="10507">
        <label>cstdint</label>
      </node>
      <node id="10498">
        <label>stdint.h</label>
      </node>
      <node id="10508">
        <label>cmath</label>
      </node>
      <node id="10518">
        <label>cassert</label>
      </node>
      <node id="10510">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="10504" relation="include">
        </childnode>
        <childnode refid="10511" relation="include">
        </childnode>
        <childnode refid="10506" relation="include">
        </childnode>
      </node>
      <node id="10501">
        <label>stdexcept</label>
      </node>
      <node id="10541">
        <label>numeric</label>
      </node>
      <node id="10535">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="10536" relation="include">
        </childnode>
        <childnode refid="10529" relation="include">
        </childnode>
        <childnode refid="10537" relation="include">
        </childnode>
        <childnode refid="10512" relation="include">
        </childnode>
        <childnode refid="10515" relation="include">
        </childnode>
      </node>
      <node id="10537">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="10536" relation="include">
        </childnode>
      </node>
      <node id="10505">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="10504" relation="include">
        </childnode>
        <childnode refid="10506" relation="include">
        </childnode>
        <childnode refid="10502" relation="include">
        </childnode>
        <childnode refid="10507" relation="include">
        </childnode>
        <childnode refid="10501" relation="include">
        </childnode>
        <childnode refid="10503" relation="include">
        </childnode>
        <childnode refid="10508" relation="include">
        </childnode>
        <childnode refid="10509" relation="include">
        </childnode>
        <childnode refid="10510" relation="include">
        </childnode>
      </node>
      <node id="10534">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="10535" relation="include">
        </childnode>
        <childnode refid="10538" relation="include">
        </childnode>
      </node>
      <node id="10502">
        <label>string</label>
      </node>
      <node id="10521">
        <label>exception</label>
      </node>
      <node id="10538">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="10535" relation="include">
        </childnode>
      </node>
      <node id="10525">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="10520" relation="include">
        </childnode>
      </node>
      <node id="10543">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="10499" relation="include">
        </childnode>
        <childnode refid="10544" relation="include">
        </childnode>
      </node>
      <node id="10522">
        <label>ostream</label>
      </node>
      <node id="10548">
        <label>ATen/Type.h</label>
      </node>
      <node id="10513">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="10514" relation="include">
        </childnode>
        <childnode refid="10524" relation="include">
        </childnode>
        <childnode refid="10531" relation="include">
        </childnode>
        <childnode refid="10528" relation="include">
        </childnode>
        <childnode refid="10532" relation="include">
        </childnode>
      </node>
      <node id="10542">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="10504">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="10545">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="10520" relation="include">
        </childnode>
        <childnode refid="10498" relation="include">
        </childnode>
        <childnode refid="10512" relation="include">
        </childnode>
      </node>
      <node id="10540">
        <label>typeinfo</label>
      </node>
      <node id="10532">
        <label>vector</label>
      </node>
      <node id="10530">
        <label>new</label>
      </node>
      <node id="10503">
        <label>utility</label>
      </node>
      <node id="10531">
        <label>array</label>
      </node>
      <node id="10523">
        <label>sstream</label>
      </node>
      <node id="10509">
        <label>iosfwd</label>
      </node>
      <node id="10527">
        <label>cstdlib</label>
      </node>
      <node id="10533">
        <label>iostream</label>
      </node>
      <node id="10520">
        <label>cstddef</label>
      </node>
      <node id="10514">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="10504" relation="include">
        </childnode>
        <childnode refid="10515" relation="include">
        </childnode>
        <childnode refid="10520" relation="include">
        </childnode>
        <childnode refid="10521" relation="include">
        </childnode>
        <childnode refid="10522" relation="include">
        </childnode>
        <childnode refid="10523" relation="include">
        </childnode>
        <childnode refid="10502" relation="include">
        </childnode>
      </node>
      <node id="10496">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="10497" relation="include">
        </childnode>
        <childnode refid="10499" relation="include">
        </childnode>
        <childnode refid="10512" relation="include">
        </childnode>
        <childnode refid="10542" relation="include">
        </childnode>
        <childnode refid="10543" relation="include">
        </childnode>
        <childnode refid="10545" relation="include">
        </childnode>
        <childnode refid="10534" relation="include">
        </childnode>
        <childnode refid="10535" relation="include">
        </childnode>
        <childnode refid="10539" relation="include">
        </childnode>
        <childnode refid="10546" relation="include">
        </childnode>
        <childnode refid="10547" relation="include">
        </childnode>
        <childnode refid="10515" relation="include">
        </childnode>
      </node>
      <node id="10516">
        <label>type_traits</label>
      </node>
      <node id="10547">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="10512" relation="include">
        </childnode>
        <childnode refid="10514" relation="include">
        </childnode>
        <childnode refid="10533" relation="include">
        </childnode>
      </node>
      <node id="10524">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="10525" relation="include">
        </childnode>
        <childnode refid="10526" relation="include">
        </childnode>
        <childnode refid="10518" relation="include">
        </childnode>
        <childnode refid="10520" relation="include">
        </childnode>
        <childnode refid="10527" relation="include">
        </childnode>
        <childnode refid="10511" relation="include">
        </childnode>
        <childnode refid="10517" relation="include">
        </childnode>
        <childnode refid="10528" relation="include">
        </childnode>
        <childnode refid="10529" relation="include">
        </childnode>
        <childnode refid="10530" relation="include">
        </childnode>
        <childnode refid="10516" relation="include">
        </childnode>
        <childnode refid="10503" relation="include">
        </childnode>
        <childnode refid="10504" relation="include">
        </childnode>
      </node>
      <node id="10526">
        <label>algorithm</label>
      </node>
      <node id="10495">
        <label>/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorMethods.h</label>
        <link refid="_tensor_methods_8h"/>
        <childnode refid="10496" relation="include">
        </childnode>
        <childnode refid="10499" relation="include">
        </childnode>
        <childnode refid="10542" relation="include">
        </childnode>
        <childnode refid="10548" relation="include">
        </childnode>
      </node>
      <node id="10497">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="10498" relation="include">
        </childnode>
      </node>
      <node id="10511">
        <label>cstring</label>
      </node>
      <node id="10529">
        <label>memory</label>
      </node>
      <node id="10517">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceat">at</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_tensor_methods_8h_1a00f51adc66f43b9903501e8989eb15bc" prot="public" static="no">
        <name>DEFINE_CAST</name>
        <param><defname>T</defname></param>
        <param><defname>name</defname></param>
        <param><defname>_</defname></param>
        <initializer>template &lt;&gt;                                    \
  inline T* Tensor::data() const {               \
    AT_CHECK(                                    \
        type().scalarType() == ScalarType::name, \
        &quot;expected scalar type &quot;,                 \
        #name,                                   \
        &quot; but found &quot;,                           \
        at::toString(type().scalarType()));      \
    return static_cast&lt;T*&gt;(this-&gt;data_ptr());    \
  }                                              \
  inline T* Tensor::to##name##Data() const {     \
    return data&lt;T&gt;();                            \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorMethods.h" line="38" column="9"/>
      </memberdef>
      <memberdef kind="define" id="_tensor_methods_8h_1a4bc34fb5952157f9941f745f5adca8c7" prot="public" static="no">
        <name>DEFINE_TO_C_TYPE</name>
        <param><defname>T</defname></param>
        <param><defname>name</defname></param>
        <param><defname>_</defname></param>
        <initializer>inline T Tensor::toC##name () const { return pImpl-&gt;localScalar().to##name (); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorMethods.h" line="56" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>${generated_comment}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Tensor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Scalar.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/SparseTensorRef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ATen/Type.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceat" kindref="compound">at</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Tensor<sp/>&amp;<sp/>Tensor::operator=(Tensor<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)<sp/>&amp;&amp;<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy_(rhs);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Tensor<sp/>Tensor::toType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>&amp;<sp/>t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>non_blocking)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type()<sp/>==<sp/>t)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t.copy(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>non_blocking);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Tensor<sp/>&amp;<sp/>Tensor::copy_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tensor<sp/>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>non_blocking)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type().copy_(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>src,<sp/>non_blocking);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Tensor<sp/>Tensor::toType(ScalarType<sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toType(type().toScalarType(t));</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Tensor<sp/>Tensor::toBackend(Backend<sp/>b)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toType(type().toBackend(b));</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>static<sp/>inline<sp/>to<sp/>allow<sp/>for<sp/>inlining<sp/>of<sp/>the<sp/>non-dynamic<sp/>part<sp/>of<sp/>dispatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">${tensor_method_definitions}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFINE_CAST(T,<sp/>name,<sp/>_)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/>inline<sp/>T*<sp/>Tensor::data()<sp/>const<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AT_CHECK(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type().scalarType()<sp/>==<sp/>ScalarType::name,<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;expected<sp/>scalar<sp/>type<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>but<sp/>found<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at::toString(type().scalarType()));<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>static_cast&lt;T*&gt;(this-&gt;data_ptr());<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/>inline<sp/>T*<sp/>Tensor::to##name##Data()<sp/>const<sp/>{<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>data&lt;T&gt;();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">AT_FORALL_SCALAR_TYPES(DEFINE_CAST)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>DEFINE_CAST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFINE_TO_C_TYPE(T,name,_)<sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor">inline<sp/>T<sp/>Tensor::toC##name<sp/>()<sp/>const<sp/>{<sp/>return<sp/>pImpl-&gt;localScalar().to##name<sp/>();<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">AT_FORALL_SCALAR_TYPES(DEFINE_TO_C_TYPE)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>DEFINE_TO_C_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}<sp/></highlight><highlight class="comment">//namespace<sp/>at</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/aten/src/ATen/templates/TensorMethods.h"/>
  </compounddef>
</doxygen>
