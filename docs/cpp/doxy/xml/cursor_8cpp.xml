<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="cursor_8cpp" kind="file" language="C++">
    <compoundname>cursor.cpp</compoundname>
    <includes refid="cursor_8h" local="no">torch/nn/cursor.h</includes>
    <includes refid="module_8h" local="no">torch/nn/module.h</includes>
    <includes refid="torch_2csrc_2api_2include_2torch_2tensor_8h" local="no">torch/tensor.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">queue</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="17637">
        <label>ATen/optional.h</label>
        <link refid="optional_8h_source"/>
        <childnode refid="17638" relation="include">
        </childnode>
        <childnode refid="17639" relation="include">
        </childnode>
        <childnode refid="17640" relation="include">
        </childnode>
        <childnode refid="17641" relation="include">
        </childnode>
        <childnode refid="17642" relation="include">
        </childnode>
        <childnode refid="17643" relation="include">
        </childnode>
        <childnode refid="17644" relation="include">
        </childnode>
      </node>
      <node id="17683">
        <label>ATen/detail/CUDAHooksInterface.h</label>
        <link refid="_c_u_d_a_hooks_interface_8h_source"/>
        <childnode refid="17633" relation="include">
        </childnode>
        <childnode refid="17636" relation="include">
        </childnode>
        <childnode refid="17681" relation="include">
        </childnode>
        <childnode refid="17684" relation="include">
        </childnode>
        <childnode refid="17645" relation="include">
        </childnode>
        <childnode refid="17642" relation="include">
        </childnode>
        <childnode refid="17634" relation="include">
        </childnode>
      </node>
      <node id="17651">
        <label>ATen/Device.h</label>
        <link refid="_device_8h_source"/>
        <childnode refid="17636" relation="include">
        </childnode>
        <childnode refid="17652" relation="include">
        </childnode>
        <childnode refid="17645" relation="include">
        </childnode>
        <childnode refid="17667" relation="include">
        </childnode>
        <childnode refid="17643" relation="include">
        </childnode>
        <childnode refid="17642" relation="include">
        </childnode>
      </node>
      <node id="17650">
        <label>atomic</label>
      </node>
      <node id="17711">
        <label>torch/csrc/autograd/generated/variable_factories.h</label>
      </node>
      <node id="17642">
        <label>functional</label>
      </node>
      <node id="17688">
        <label>ATen/Backtrace.h</label>
        <link refid="_backtrace_8h_source"/>
        <childnode refid="17645" relation="include">
        </childnode>
        <childnode refid="17643" relation="include">
        </childnode>
        <childnode refid="17678" relation="include">
        </childnode>
        <childnode refid="17631" relation="include">
        </childnode>
      </node>
      <node id="17718">
        <label>queue</label>
      </node>
      <node id="17652">
        <label>ATen/ScalarType.h</label>
        <link refid="_scalar_type_8h_source"/>
        <childnode refid="17653" relation="include">
        </childnode>
        <childnode refid="17631" relation="include">
        </childnode>
        <childnode refid="17663" relation="include">
        </childnode>
        <childnode refid="17665" relation="include">
        </childnode>
        <childnode refid="17669" relation="include">
        </childnode>
      </node>
      <node id="17664">
        <label>limits</label>
      </node>
      <node id="17629">
        <label>torch/tensor.h</label>
        <link refid="torch_2csrc_2api_2include_2torch_2tensor_8h_source"/>
        <childnode refid="17630" relation="include">
        </childnode>
        <childnode refid="17711" relation="include">
        </childnode>
        <childnode refid="17712" relation="include">
        </childnode>
      </node>
      <node id="17672">
        <label>assert.h</label>
      </node>
      <node id="17677">
        <label>ATen/Utils.h</label>
        <link refid="aten_2src_2_a_ten_2utils_8h_source"/>
        <childnode refid="17631" relation="include">
        </childnode>
        <childnode refid="17653" relation="include">
        </childnode>
        <childnode refid="17636" relation="include">
        </childnode>
        <childnode refid="17676" relation="include">
        </childnode>
        <childnode refid="17656" relation="include">
        </childnode>
        <childnode refid="17648" relation="include">
        </childnode>
        <childnode refid="17678" relation="include">
        </childnode>
        <childnode refid="17679" relation="include">
        </childnode>
      </node>
      <node id="17659">
        <label>iterator</label>
      </node>
      <node id="17671">
        <label>ATen/Scalar.h</label>
        <link refid="_scalar_8h_source"/>
        <childnode refid="17672" relation="include">
        </childnode>
        <childnode refid="17673" relation="include">
        </childnode>
        <childnode refid="17644" relation="include">
        </childnode>
        <childnode refid="17643" relation="include">
        </childnode>
        <childnode refid="17638" relation="include">
        </childnode>
        <childnode refid="17631" relation="include">
        </childnode>
        <childnode refid="17663" relation="include">
        </childnode>
        <childnode refid="17652" relation="include">
        </childnode>
        <childnode refid="17674" relation="include">
        </childnode>
        <childnode refid="17677" relation="include">
        </childnode>
      </node>
      <node id="17691">
        <label>TH/THStorageFunctions.hpp</label>
      </node>
      <node id="17665">
        <label>cstdint</label>
      </node>
      <node id="17699">
        <label>ATen/Deprecated.h</label>
        <link refid="_deprecated_8h_source"/>
      </node>
      <node id="17673">
        <label>stdint.h</label>
      </node>
      <node id="17710">
        <label>ATen/CUDAGuard.h</label>
        <link refid="_c_u_d_a_guard_8h_source"/>
      </node>
      <node id="17712">
        <label>torch/csrc/autograd/variable.h</label>
      </node>
      <node id="17666">
        <label>cmath</label>
      </node>
      <node id="17641">
        <label>cassert</label>
      </node>
      <node id="17682">
        <label>ATen/Context.h</label>
        <link refid="_context_8h_source"/>
        <childnode refid="17631" relation="include">
        </childnode>
        <childnode refid="17632" relation="include">
        </childnode>
        <childnode refid="17681" relation="include">
        </childnode>
        <childnode refid="17680" relation="include">
        </childnode>
        <childnode refid="17677" relation="include">
        </childnode>
        <childnode refid="17636" relation="include">
        </childnode>
        <childnode refid="17683" relation="include">
        </childnode>
        <childnode refid="17689" relation="include">
        </childnode>
        <childnode refid="17634" relation="include">
        </childnode>
        <childnode refid="17686" relation="include">
        </childnode>
        <childnode refid="17665" relation="include">
        </childnode>
      </node>
      <node id="17668">
        <label>Half-inl.h</label>
        <link refid="_half-inl_8h_source"/>
        <childnode refid="17631" relation="include">
        </childnode>
        <childnode refid="17658" relation="include">
        </childnode>
        <childnode refid="17664" relation="include">
        </childnode>
      </node>
      <node id="17644">
        <label>stdexcept</label>
      </node>
      <node id="17705">
        <label>ATen/TensorOperators.h</label>
        <link refid="_tensor_operators_8h_source"/>
        <childnode refid="17671" relation="include">
        </childnode>
        <childnode refid="17692" relation="include">
        </childnode>
        <childnode refid="17680" relation="include">
        </childnode>
        <childnode refid="17643" relation="include">
        </childnode>
        <childnode refid="17644" relation="include">
        </childnode>
      </node>
      <node id="17679">
        <label>numeric</label>
      </node>
      <node id="17675">
        <label>ATen/TensorImpl.h</label>
        <link refid="_tensor_impl_8h_source"/>
        <childnode refid="17650" relation="include">
        </childnode>
        <childnode refid="17634" relation="include">
        </childnode>
        <childnode refid="17649" relation="include">
        </childnode>
        <childnode refid="17652" relation="include">
        </childnode>
        <childnode refid="17637" relation="include">
        </childnode>
      </node>
      <node id="17663">
        <label>ATen/Half.h</label>
        <link refid="_half_8h_source"/>
        <childnode refid="17631" relation="include">
        </childnode>
        <childnode refid="17664" relation="include">
        </childnode>
        <childnode refid="17643" relation="include">
        </childnode>
        <childnode refid="17665" relation="include">
        </childnode>
        <childnode refid="17644" relation="include">
        </childnode>
        <childnode refid="17638" relation="include">
        </childnode>
        <childnode refid="17666" relation="include">
        </childnode>
        <childnode refid="17667" relation="include">
        </childnode>
        <childnode refid="17668" relation="include">
        </childnode>
      </node>
      <node id="17649">
        <label>ATen/Retainable.h</label>
        <link refid="_retainable_8h_source"/>
        <childnode refid="17650" relation="include">
        </childnode>
      </node>
      <node id="17674">
        <label>ATen/TensorBase.h</label>
        <link refid="_tensor_base_8h_source"/>
        <childnode refid="17675" relation="include">
        </childnode>
        <childnode refid="17676" relation="include">
        </childnode>
      </node>
      <node id="17643">
        <label>string</label>
      </node>
      <node id="17708">
        <label>ATen/DimVector.h</label>
        <link refid="_dim_vector_8h_source"/>
        <childnode refid="17654" relation="include">
        </childnode>
        <childnode refid="17673" relation="include">
        </childnode>
      </node>
      <node id="17709">
        <label>ATen/OptionsGuard.h</label>
        <link refid="_options_guard_8h_source"/>
        <childnode refid="17651" relation="include">
        </childnode>
        <childnode refid="17695" relation="include">
        </childnode>
        <childnode refid="17652" relation="include">
        </childnode>
        <childnode refid="17702" relation="include">
        </childnode>
        <childnode refid="17637" relation="include">
        </childnode>
      </node>
      <node id="17717">
        <label>map</label>
      </node>
      <node id="17633">
        <label>ATen/Allocator.h</label>
        <link refid="_allocator_8h_source"/>
        <childnode refid="17634" relation="include">
        </childnode>
        <childnode refid="17635" relation="include">
        </childnode>
        <childnode refid="17636" relation="include">
        </childnode>
        <childnode refid="17649" relation="include">
        </childnode>
        <childnode refid="17651" relation="include">
        </childnode>
        <childnode refid="17670" relation="include">
        </childnode>
      </node>
      <node id="17628">
        <label>torch/nn/cursor.h</label>
        <link refid="cursor_8h_source"/>
        <childnode refid="17629" relation="include">
        </childnode>
        <childnode refid="17645" relation="include">
        </childnode>
        <childnode refid="17659" relation="include">
        </childnode>
        <childnode refid="17664" relation="include">
        </childnode>
        <childnode refid="17643" relation="include">
        </childnode>
        <childnode refid="17639" relation="include">
        </childnode>
      </node>
      <node id="17689">
        <label>ATen/CUDAStream.h</label>
        <link refid="_c_u_d_a_stream_8h_source"/>
      </node>
      <node id="17701">
        <label>ATen/DeviceGuard.h</label>
        <link refid="_device_guard_8h_source"/>
        <childnode refid="17651" relation="include">
        </childnode>
        <childnode refid="17636" relation="include">
        </childnode>
        <childnode refid="17652" relation="include">
        </childnode>
        <childnode refid="17692" relation="include">
        </childnode>
        <childnode refid="17683" relation="include">
        </childnode>
        <childnode refid="17645" relation="include">
        </childnode>
      </node>
      <node id="17646">
        <label>exception</label>
      </node>
      <node id="17635">
        <label>stddef.h</label>
      </node>
      <node id="17676">
        <label>ATen/UndefinedTensor.h</label>
        <link refid="_undefined_tensor_8h_source"/>
        <childnode refid="17675" relation="include">
        </childnode>
      </node>
      <node id="17707">
        <label>ATen/Dispatch.h</label>
        <link refid="_dispatch_8h_source"/>
        <childnode refid="17636" relation="include">
        </childnode>
        <childnode refid="17663" relation="include">
        </childnode>
        <childnode refid="17680" relation="include">
        </childnode>
      </node>
      <node id="17655">
        <label>AlignOf.h</label>
        <link refid="_align_of_8h_source"/>
        <childnode refid="17645" relation="include">
        </childnode>
      </node>
      <node id="17690">
        <label>ATen/Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="17671" relation="include">
        </childnode>
        <childnode refid="17691" relation="include">
        </childnode>
      </node>
      <node id="17647">
        <label>ostream</label>
      </node>
      <node id="17632">
        <label>ATen/CPUGeneral.h</label>
        <link refid="_c_p_u_general_8h_source"/>
        <childnode refid="17631" relation="include">
        </childnode>
      </node>
      <node id="17680">
        <label>ATen/Type.h</label>
      </node>
      <node id="17653">
        <label>ATen/ArrayRef.h</label>
        <link refid="_array_ref_8h_source"/>
        <childnode refid="17636" relation="include">
        </childnode>
        <childnode refid="17654" relation="include">
        </childnode>
        <childnode refid="17661" relation="include">
        </childnode>
        <childnode refid="17659" relation="include">
        </childnode>
        <childnode refid="17662" relation="include">
        </childnode>
      </node>
      <node id="17696">
        <label>ATen/TensorGeometry.h</label>
        <link refid="_tensor_geometry_8h_source"/>
        <childnode refid="17680" relation="include">
        </childnode>
        <childnode refid="17697" relation="include">
        </childnode>
      </node>
      <node id="17715">
        <label>torch/nn/pimpl.h</label>
        <link refid="pimpl_8h_source"/>
        <childnode refid="17716" relation="include">
        </childnode>
        <childnode refid="17629" relation="include">
        </childnode>
        <childnode refid="17634" relation="include">
        </childnode>
        <childnode refid="17639" relation="include">
        </childnode>
        <childnode refid="17638" relation="include">
        </childnode>
      </node>
      <node id="17693">
        <label>ATen/SparseTensorRef.h</label>
        <link refid="_sparse_tensor_ref_8h_source"/>
      </node>
      <node id="17631">
        <label>ATen/ATenGeneral.h</label>
        <link refid="_a_ten_general_8h_source"/>
      </node>
      <node id="17713">
        <label>torch/nn/module.h</label>
        <link refid="module_8h_source"/>
        <childnode refid="17714" relation="include">
        </childnode>
        <childnode refid="17628" relation="include">
        </childnode>
        <childnode refid="17715" relation="include">
        </childnode>
        <childnode refid="17629" relation="include">
        </childnode>
        <childnode refid="17630" relation="include">
        </childnode>
        <childnode refid="17637" relation="include">
        </childnode>
        <childnode refid="17717" relation="include">
        </childnode>
        <childnode refid="17634" relation="include">
        </childnode>
        <childnode refid="17643" relation="include">
        </childnode>
        <childnode refid="17639" relation="include">
        </childnode>
        <childnode refid="17687" relation="include">
        </childnode>
      </node>
      <node id="17697">
        <label>ATen/WrapDimUtils.h</label>
        <link refid="_wrap_dim_utils_8h_source"/>
        <childnode refid="17675" relation="include">
        </childnode>
        <childnode refid="17648" relation="include">
        </childnode>
      </node>
      <node id="17694">
        <label>ATen/TensorAccessor.h</label>
        <link refid="_tensor_accessor_8h_source"/>
        <childnode refid="17645" relation="include">
        </childnode>
        <childnode refid="17673" relation="include">
        </childnode>
        <childnode refid="17652" relation="include">
        </childnode>
      </node>
      <node id="17678">
        <label>typeinfo</label>
      </node>
      <node id="17685">
        <label>cstdio</label>
      </node>
      <node id="17716">
        <label>torch/csrc/utils/variadic.h</label>
      </node>
      <node id="17670">
        <label>ATen/detail/UniqueVoidPtr.h</label>
        <link refid="_unique_void_ptr_8h_source"/>
        <childnode refid="17634" relation="include">
        </childnode>
        <childnode refid="17631" relation="include">
        </childnode>
      </node>
      <node id="17714">
        <label>torch/detail/ordered_dict.h</label>
        <link refid="ordered__dict_8h_source"/>
        <childnode refid="17636" relation="include">
        </childnode>
        <childnode refid="17665" relation="include">
        </childnode>
        <childnode refid="17642" relation="include">
        </childnode>
        <childnode refid="17640" relation="include">
        </childnode>
        <childnode refid="17643" relation="include">
        </childnode>
        <childnode refid="17687" relation="include">
        </childnode>
        <childnode refid="17638" relation="include">
        </childnode>
        <childnode refid="17662" relation="include">
        </childnode>
      </node>
      <node id="17662">
        <label>vector</label>
      </node>
      <node id="17706">
        <label>ATen/TensorMethods.h</label>
      </node>
      <node id="17703">
        <label>THNN/Reduction.h</label>
      </node>
      <node id="17660">
        <label>new</label>
      </node>
      <node id="17638">
        <label>utility</label>
      </node>
      <node id="17661">
        <label>array</label>
      </node>
      <node id="17648">
        <label>sstream</label>
      </node>
      <node id="17627">
        <label>/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/cursor.cpp</label>
        <link refid="cursor_8cpp"/>
        <childnode refid="17628" relation="include">
        </childnode>
        <childnode refid="17713" relation="include">
        </childnode>
        <childnode refid="17629" relation="include">
        </childnode>
        <childnode refid="17656" relation="include">
        </childnode>
        <childnode refid="17665" relation="include">
        </childnode>
        <childnode refid="17718" relation="include">
        </childnode>
        <childnode refid="17643" relation="include">
        </childnode>
        <childnode refid="17662" relation="include">
        </childnode>
      </node>
      <node id="17698">
        <label>ATen/Functions.h</label>
        <link refid="build_2aten_2src_2_a_ten_2_functions_8h_source"/>
        <childnode refid="17671" relation="include">
        </childnode>
        <childnode refid="17680" relation="include">
        </childnode>
        <childnode refid="17692" relation="include">
        </childnode>
        <childnode refid="17690" relation="include">
        </childnode>
        <childnode refid="17681" relation="include">
        </childnode>
        <childnode refid="17699" relation="include">
        </childnode>
        <childnode refid="17700" relation="include">
        </childnode>
        <childnode refid="17701" relation="include">
        </childnode>
        <childnode refid="17702" relation="include">
        </childnode>
        <childnode refid="17703" relation="include">
        </childnode>
      </node>
      <node id="17700">
        <label>ATen/NativeFunctions.h</label>
      </node>
      <node id="17667">
        <label>iosfwd</label>
      </node>
      <node id="17657">
        <label>cstdlib</label>
      </node>
      <node id="17669">
        <label>iostream</label>
      </node>
      <node id="17645">
        <label>cstddef</label>
      </node>
      <node id="17687">
        <label>unordered_map</label>
      </node>
      <node id="17686">
        <label>mutex</label>
      </node>
      <node id="17630">
        <label>ATen/ATen.h</label>
        <link refid="_a_ten_8h_source"/>
        <childnode refid="17631" relation="include">
        </childnode>
        <childnode refid="17632" relation="include">
        </childnode>
        <childnode refid="17633" relation="include">
        </childnode>
        <childnode refid="17671" relation="include">
        </childnode>
        <childnode refid="17680" relation="include">
        </childnode>
        <childnode refid="17681" relation="include">
        </childnode>
        <childnode refid="17682" relation="include">
        </childnode>
        <childnode refid="17690" relation="include">
        </childnode>
        <childnode refid="17692" relation="include">
        </childnode>
        <childnode refid="17651" relation="include">
        </childnode>
        <childnode refid="17696" relation="include">
        </childnode>
        <childnode refid="17698" relation="include">
        </childnode>
        <childnode refid="17704" relation="include">
        </childnode>
        <childnode refid="17705" relation="include">
        </childnode>
        <childnode refid="17706" relation="include">
        </childnode>
        <childnode refid="17707" relation="include">
        </childnode>
        <childnode refid="17708" relation="include">
        </childnode>
        <childnode refid="17701" relation="include">
        </childnode>
        <childnode refid="17702" relation="include">
        </childnode>
        <childnode refid="17695" relation="include">
        </childnode>
        <childnode refid="17709" relation="include">
        </childnode>
        <childnode refid="17710" relation="include">
        </childnode>
      </node>
      <node id="17684">
        <label>ATen/Registry.h</label>
        <link refid="_registry_8h_source"/>
        <childnode refid="17656" relation="include">
        </childnode>
        <childnode refid="17685" relation="include">
        </childnode>
        <childnode refid="17657" relation="include">
        </childnode>
        <childnode refid="17642" relation="include">
        </childnode>
        <childnode refid="17634" relation="include">
        </childnode>
        <childnode refid="17686" relation="include">
        </childnode>
        <childnode refid="17687" relation="include">
        </childnode>
        <childnode refid="17643" relation="include">
        </childnode>
        <childnode refid="17662" relation="include">
        </childnode>
        <childnode refid="17688" relation="include">
        </childnode>
        <childnode refid="17631" relation="include">
        </childnode>
      </node>
      <node id="17636">
        <label>ATen/Error.h</label>
        <link refid="_error_8h_source"/>
        <childnode refid="17631" relation="include">
        </childnode>
        <childnode refid="17637" relation="include">
        </childnode>
        <childnode refid="17645" relation="include">
        </childnode>
        <childnode refid="17646" relation="include">
        </childnode>
        <childnode refid="17647" relation="include">
        </childnode>
        <childnode refid="17648" relation="include">
        </childnode>
        <childnode refid="17643" relation="include">
        </childnode>
      </node>
      <node id="17702">
        <label>ATen/TensorOptions.h</label>
        <link refid="_tensor_options_8h_source"/>
        <childnode refid="17682" relation="include">
        </childnode>
        <childnode refid="17651" relation="include">
        </childnode>
        <childnode refid="17701" relation="include">
        </childnode>
        <childnode refid="17695" relation="include">
        </childnode>
        <childnode refid="17652" relation="include">
        </childnode>
        <childnode refid="17692" relation="include">
        </childnode>
        <childnode refid="17680" relation="include">
        </childnode>
        <childnode refid="17645" relation="include">
        </childnode>
        <childnode refid="17667" relation="include">
        </childnode>
        <childnode refid="17638" relation="include">
        </childnode>
      </node>
      <node id="17692">
        <label>ATen/Tensor.h</label>
        <link refid="build_2aten_2src_2_a_ten_2tensor_8h_source"/>
        <childnode refid="17681" relation="include">
        </childnode>
        <childnode refid="17671" relation="include">
        </childnode>
        <childnode refid="17652" relation="include">
        </childnode>
        <childnode refid="17693" relation="include">
        </childnode>
        <childnode refid="17690" relation="include">
        </childnode>
        <childnode refid="17694" relation="include">
        </childnode>
        <childnode refid="17674" relation="include">
        </childnode>
        <childnode refid="17675" relation="include">
        </childnode>
        <childnode refid="17677" relation="include">
        </childnode>
        <childnode refid="17651" relation="include">
        </childnode>
        <childnode refid="17695" relation="include">
        </childnode>
        <childnode refid="17637" relation="include">
        </childnode>
      </node>
      <node id="17639">
        <label>type_traits</label>
      </node>
      <node id="17695">
        <label>ATen/Layout.h</label>
        <link refid="_layout_8h_source"/>
        <childnode refid="17652" relation="include">
        </childnode>
        <childnode refid="17636" relation="include">
        </childnode>
        <childnode refid="17669" relation="include">
        </childnode>
      </node>
      <node id="17654">
        <label>ATen/SmallVector.h</label>
        <link refid="_small_vector_8h_source"/>
        <childnode refid="17655" relation="include">
        </childnode>
        <childnode refid="17656" relation="include">
        </childnode>
        <childnode refid="17641" relation="include">
        </childnode>
        <childnode refid="17645" relation="include">
        </childnode>
        <childnode refid="17657" relation="include">
        </childnode>
        <childnode refid="17658" relation="include">
        </childnode>
        <childnode refid="17640" relation="include">
        </childnode>
        <childnode refid="17659" relation="include">
        </childnode>
        <childnode refid="17634" relation="include">
        </childnode>
        <childnode refid="17660" relation="include">
        </childnode>
        <childnode refid="17639" relation="include">
        </childnode>
        <childnode refid="17638" relation="include">
        </childnode>
        <childnode refid="17631" relation="include">
        </childnode>
      </node>
      <node id="17656">
        <label>algorithm</label>
      </node>
      <node id="17681">
        <label>ATen/Generator.h</label>
        <link refid="_generator_8h_source"/>
        <childnode refid="17673" relation="include">
        </childnode>
      </node>
      <node id="17658">
        <label>cstring</label>
      </node>
      <node id="17634">
        <label>memory</label>
      </node>
      <node id="17640">
        <label>initializer_list</label>
      </node>
      <node id="17704">
        <label>ATen/Formatting.h</label>
        <link refid="_formatting_8h_source"/>
        <childnode refid="17669" relation="include">
        </childnode>
        <childnode refid="17680" relation="include">
        </childnode>
        <childnode refid="17671" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structtorch_1_1detail_1_1_cursor_base_1_1_collector" prot="public">torch::detail::CursorBase::Collector</innerclass>
    <innernamespace refid="namespacetorch">torch</innernamespace>
    <innernamespace refid="namespacetorch_1_1detail">torch::detail</innernamespace>
    <innernamespace refid="namespacetorch_1_1nn">torch::nn</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;torch/nn/cursor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/nn/module.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;torch/tensor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetorch" kindref="compound">torch</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<sp/>CursorBase::Item<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">CursorBase&lt;T&gt;::Item::Item(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key_,<sp/>T&amp;<sp/>value_)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>key(key_),<sp/>value(value_)<sp/>{}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">T&amp;<sp/>CursorBase&lt;T&gt;::Item::operator*()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>CursorBase&lt;T&gt;::Item::operator*()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">T*<sp/>CursorBase&lt;T&gt;::Item::operator-&gt;()<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;value;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>CursorBase&lt;T&gt;::Item::operator-&gt;()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;value;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<sp/>CursorBase<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">CursorBase&lt;T&gt;::CursorBase(std::vector&lt;Item&gt;&amp;&amp;<sp/>items)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>items_(<ref refid="namespacestd" kindref="compound">std</ref>::move(items))<sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CursorBase&lt;T&gt;::Iterator<sp/>CursorBase&lt;T&gt;::begin()<sp/>&amp;<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>items_.begin();</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CursorBase&lt;T&gt;::ConstIterator<sp/>CursorBase&lt;T&gt;::begin()<sp/>const&amp;<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>items_.begin();</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CursorBase&lt;T&gt;::Iterator<sp/>CursorBase&lt;T&gt;::end()<sp/>&amp;<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>items_.end();</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CursorBase&lt;T&gt;::ConstIterator<sp/>CursorBase&lt;T&gt;::end()<sp/>const&amp;<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>items_.end();</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">T*<sp/>CursorBase&lt;T&gt;::find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>items_)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item.key<sp/>==<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;item.value;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>CursorBase&lt;T&gt;::find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>item<sp/>:<sp/>items_)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item.key<sp/>==<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;item.value;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">T&amp;<sp/>CursorBase&lt;T&gt;::at(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/>find(key))<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*value;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>such<sp/>key:<sp/>&apos;&quot;</highlight><highlight class="normal">,<sp/>key,<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>CursorBase&lt;T&gt;::at(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>value<sp/>=<sp/>find(key))<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*value;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>AT_ERROR(</highlight><highlight class="stringliteral">&quot;No<sp/>such<sp/>key:<sp/>&apos;&quot;</highlight><highlight class="normal">,<sp/>key,<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CursorBase&lt;T&gt;::Item&amp;<sp/>CursorBase&lt;T&gt;::at(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>AT_CHECK(</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>&lt;<sp/>size(),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>out<sp/>of<sp/>range<sp/>for<sp/>cursor<sp/>of<sp/>size<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>items_[index];</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">T&amp;<sp/>CursorBase&lt;T&gt;::operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceat" kindref="compound">at</ref>(key);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>CursorBase&lt;T&gt;::operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceat" kindref="compound">at</ref>(key);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CursorBase&lt;T&gt;::Item&amp;<sp/>CursorBase&lt;T&gt;::operator[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceat" kindref="compound">at</ref>(index);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CursorBase&lt;T&gt;::contains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>find(key)<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CursorBase&lt;T&gt;::size()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>items_.size();</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<sp/>CursorCollector<sp/>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal">std::string<sp/>join_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>prefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_size<sp/>=<sp/>name.size();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prefix.empty())<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>total_size<sp/>+=<sp/>prefix.size()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>std::string<sp/>full_name;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>full_name.reserve(total_size);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prefix.empty())<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>full_name<sp/>+=<sp/>prefix;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>full_name.push_back(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>full_name<sp/>+=<sp/>name;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>full_name;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="161" refid="structtorch_1_1detail_1_1_cursor_base_1_1_collector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classtorch_1_1detail_1_1_cursor_base" kindref="compound">CursorBase</ref>&lt;T&gt;::<ref refid="structtorch_1_1detail_1_1_cursor_base_1_1_collector" kindref="compound">Collector</ref><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="structtorch_1_1detail_1_1_cursor_base_1_1_collector" kindref="compound">Collector</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType&gt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>std::vector&lt;Item&gt;&amp;&amp;<sp/>collect_children(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ModuleType&amp;<sp/>module,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maximum_depth,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name_prefix<sp/>=<sp/>std::string())<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>child<sp/>:<sp/>module.children_)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hierarchical_name<sp/>=<sp/>join_name(name_prefix,<sp/>child.key);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>items.emplace_back(hierarchical_name,<sp/>*child.value);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maximum_depth<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collect_children(</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*child.value,<sp/>maximum_depth<sp/>-<sp/>1,<sp/>std::move(hierarchical_name));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(items);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType&gt;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>std::vector&lt;Item&gt;&amp;&amp;<sp/>collect_parameters(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ModuleType&amp;<sp/>module,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name_prefix<sp/>=<sp/>std::string())<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>parameter<sp/>:<sp/>module.parameters_)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>items.emplace_back(</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>join_name(name_prefix,<sp/>parameter.key),<sp/>parameter.value);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>child<sp/>:<sp/>module.children_)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>collect_parameters(*child.value,<sp/>join_name(name_prefix,<sp/>child.key));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(items);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>std::vector&lt;Item&gt;&amp;&amp;<sp/>collect_buffers(</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ModuleType&amp;<sp/>module,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name_prefix<sp/>=<sp/>std::string())<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>buffer<sp/>:<sp/>module.buffers_)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>items.emplace_back(join_name(name_prefix,<sp/>buffer.key),<sp/>buffer.value);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>child<sp/>:<sp/>module.children_)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>collect_buffers(*child.value,<sp/>join_name(name_prefix,<sp/>child.key));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(items);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>std::vector&lt;Item&gt;<sp/>items;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Explicitly<sp/>instantiate<sp/>the<sp/>CursorBase<sp/>template<sp/>for<sp/>all<sp/>types<sp/>we<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtorch_1_1detail_1_1_cursor_base" kindref="compound">CursorBase&lt;nn::Module&gt;</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtorch_1_1detail_1_1_cursor_base" kindref="compound">CursorBase&lt;const nn::Module&gt;</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtorch_1_1detail_1_1_cursor_base" kindref="compound">CursorBase&lt;Tensor&gt;</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtorch_1_1detail_1_1_cursor_base" kindref="compound">CursorBase&lt;const Tensor&gt;</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">nn<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Item,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Cursor&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">std::vector&lt;Item&gt;<sp/>copy_cursor_items(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cursor&amp;<sp/>cursor)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>std::vector&lt;Item&gt;<sp/>result;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>result.reserve(cursor.size());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>cursor.<ref refid="classtorch_1_1detail_1_1_cursor_base_1a38b7ccc0d24be2127c2e5c0f4b112ec3" kindref="member">apply_items</ref>(</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;result](</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Cursor::ValueType&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.emplace_back(key,<sp/>value);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Module<sp/>cursors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">ModuleCursor::ModuleCursor(Module&amp;<sp/>module,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maximum_depth)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>detail::CursorBase&lt;Module&gt;(</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collector().collect_children(module,<sp/>maximum_depth))<sp/>{}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">ConstModuleCursor::ConstModuleCursor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Module&amp;<sp/>module,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maximum_depth)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>detail::CursorBase&lt;const<sp/>Module&gt;(</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Collector().collect_children(module,<sp/>maximum_depth))<sp/>{}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">ConstModuleCursor::ConstModuleCursor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ModuleCursor&amp;<sp/>cursor)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>detail::CursorBase&lt;const<sp/>Module&gt;(copy_cursor_items&lt;Item&gt;(cursor))<sp/>{}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parameter<sp/>cursors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">ParameterCursor::ParameterCursor(Module&amp;<sp/>module)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>detail::CursorBase&lt;Tensor&gt;(Collector().collect_parameters(module))<sp/>{}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">ConstParameterCursor::ConstParameterCursor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Module&amp;<sp/>module)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>detail::CursorBase&lt;const<sp/>Tensor&gt;(Collector().collect_parameters(module))<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">ConstParameterCursor::ConstParameterCursor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParameterCursor&amp;<sp/>cursor)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>detail::CursorBase&lt;const<sp/>autograd::Variable&gt;(</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_cursor_items&lt;Item&gt;(cursor))<sp/>{}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Buffer<sp/>cursors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">BufferCursor::BufferCursor(Module&amp;<sp/>module)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>detail::CursorBase&lt;Tensor&gt;(Collector().collect_buffers(module))<sp/>{}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">ConstBufferCursor::ConstBufferCursor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Module&amp;<sp/>module)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>detail::CursorBase&lt;const<sp/>Tensor&gt;(Collector().collect_buffers(module))<sp/>{}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">ConstBufferCursor::ConstBufferCursor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BufferCursor&amp;<sp/>cursor)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>detail::CursorBase&lt;const<sp/>autograd::Variable&gt;(</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_cursor_items&lt;Item&gt;(cursor))<sp/>{}</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>torch</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/robkunkle/fork/goodlux/pytorch/torch/csrc/api/src/nn/cursor.cpp"/>
  </compounddef>
</doxygen>
